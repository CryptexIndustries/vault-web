"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/trpc/[trpc]";
exports.ids = ["pages/api/trpc/[trpc]"];
exports.modules = {

/***/ "(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/trpc/[trpc].ts */ \"(api-node)/./src/pages/api/trpc/[trpc].ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/trpc/[trpc]\",\n        pathname: \"/api/trpc/[trpc]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4zLjFfQGJhYmVsK2NvcmVANy4yOC4wX3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaW5kZXguanM/a2luZD1QQUdFU19BUEkmcGFnZT0lMkZhcGklMkZ0cnBjJTJGJTVCdHJwYyU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdHJwYyUyRiU1QnRycGMlNUQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDMkQ7QUFDM0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvdHJwYy9bdHJwY10udHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RycGMvW3RycGNdXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdHJwYy9bdHJwY11cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/env/client.mjs":
/*!****************************!*\
  !*** ./src/env/client.mjs ***!
  \****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env),\n/* harmony export */   formatErrors: () => (/* binding */ formatErrors)\n/* harmony export */ });\n/* harmony import */ var _schema_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.mjs */ \"(api-node)/./src/env/schema.mjs\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_schema_mjs__WEBPACK_IMPORTED_MODULE_0__]);\n_schema_mjs__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// @ts-check\n\nconst _clientEnv = _schema_mjs__WEBPACK_IMPORTED_MODULE_0__.clientSchema.safeParse(_schema_mjs__WEBPACK_IMPORTED_MODULE_0__.clientEnv);\nconst formatErrors = (/** @type {import('zod').ZodFormattedError<Map<string,string>,string>} */ errors)=>Object.entries(errors).map(([name, value])=>{\n        if (value && \"_errors\" in value) return `${name}: ${value._errors.join(\", \")}\\n`;\n    }).filter(Boolean);\nif (_clientEnv.success === false) {\n    console.error(\"❌ Invalid environment variables:\\n\", ...formatErrors(_clientEnv.error.format()));\n    throw new Error(\"Invalid environment variables\");\n}\n/**\n * Validate that client-side environment variables are exposed to the client.\n */ for (let key of Object.keys(_clientEnv.data)){\n    if (!key.startsWith(\"NEXT_PUBLIC_\")) {\n        console.warn(`❌ Invalid public environment variable name: ${key}. It must begin with 'NEXT_PUBLIC_'`);\n        throw new Error(\"Invalid public environment variable name\");\n    }\n}\nconst env = _clientEnv.data;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9lbnYvY2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxZQUFZO0FBQzJDO0FBRXZELE1BQU1FLGFBQWFELHFEQUFZQSxDQUFDRSxTQUFTLENBQUNILGtEQUFTQTtBQUU1QyxNQUFNSSxlQUFlLENBQ3hCLHVFQUF1RSxHQUN2RUMsU0FFQUMsT0FBT0MsT0FBTyxDQUFDRixRQUNWRyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxNQUFNQyxNQUFNO1FBQ2YsSUFBSUEsU0FBUyxhQUFhQSxPQUN0QixPQUFPLEdBQUdELEtBQUssRUFBRSxFQUFFQyxNQUFNQyxPQUFPLENBQUNDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN2RCxHQUNDQyxNQUFNLENBQUNDLFNBQVM7QUFFekIsSUFBSVosV0FBV2EsT0FBTyxLQUFLLE9BQU87SUFDOUJDLFFBQVFDLEtBQUssQ0FDVCx5Q0FDR2IsYUFBYUYsV0FBV2UsS0FBSyxDQUFDQyxNQUFNO0lBRTNDLE1BQU0sSUFBSUMsTUFBTTtBQUNwQjtBQUVBOztDQUVDLEdBQ0QsS0FBSyxJQUFJQyxPQUFPZCxPQUFPZSxJQUFJLENBQUNuQixXQUFXb0IsSUFBSSxFQUFHO0lBQzFDLElBQUksQ0FBQ0YsSUFBSUcsVUFBVSxDQUFDLGlCQUFpQjtRQUNqQ1AsUUFBUVEsSUFBSSxDQUNSLENBQUMsNENBQTRDLEVBQUVKLElBQUksbUNBQW1DLENBQUM7UUFHM0YsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0FBQ0o7QUFFTyxNQUFNTSxNQUFNdkIsV0FBV29CLElBQUksQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL2Vudi9jbGllbnQubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuaW1wb3J0IHsgY2xpZW50RW52LCBjbGllbnRTY2hlbWEgfSBmcm9tIFwiLi9zY2hlbWEubWpzXCI7XG5cbmNvbnN0IF9jbGllbnRFbnYgPSBjbGllbnRTY2hlbWEuc2FmZVBhcnNlKGNsaWVudEVudik7XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRFcnJvcnMgPSAoXG4gICAgLyoqIEB0eXBlIHtpbXBvcnQoJ3pvZCcpLlpvZEZvcm1hdHRlZEVycm9yPE1hcDxzdHJpbmcsc3RyaW5nPixzdHJpbmc+fSAqL1xuICAgIGVycm9yc1xuKSA9PlxuICAgIE9iamVjdC5lbnRyaWVzKGVycm9ycylcbiAgICAgICAgLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlICYmIFwiX2Vycm9yc1wiIGluIHZhbHVlKVxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtuYW1lfTogJHt2YWx1ZS5fZXJyb3JzLmpvaW4oXCIsIFwiKX1cXG5gO1xuICAgICAgICB9KVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pO1xuXG5pZiAoX2NsaWVudEVudi5zdWNjZXNzID09PSBmYWxzZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwi4p2MIEludmFsaWQgZW52aXJvbm1lbnQgdmFyaWFibGVzOlxcblwiLFxuICAgICAgICAuLi5mb3JtYXRFcnJvcnMoX2NsaWVudEVudi5lcnJvci5mb3JtYXQoKSlcbiAgICApO1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZW52aXJvbm1lbnQgdmFyaWFibGVzXCIpO1xufVxuXG4vKipcbiAqIFZhbGlkYXRlIHRoYXQgY2xpZW50LXNpZGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBleHBvc2VkIHRvIHRoZSBjbGllbnQuXG4gKi9cbmZvciAobGV0IGtleSBvZiBPYmplY3Qua2V5cyhfY2xpZW50RW52LmRhdGEpKSB7XG4gICAgaWYgKCFrZXkuc3RhcnRzV2l0aChcIk5FWFRfUFVCTElDX1wiKSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICBg4p2MIEludmFsaWQgcHVibGljIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWU6ICR7a2V5fS4gSXQgbXVzdCBiZWdpbiB3aXRoICdORVhUX1BVQkxJQ18nYFxuICAgICAgICApO1xuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHVibGljIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWVcIik7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZW52ID0gX2NsaWVudEVudi5kYXRhO1xuIl0sIm5hbWVzIjpbImNsaWVudEVudiIsImNsaWVudFNjaGVtYSIsIl9jbGllbnRFbnYiLCJzYWZlUGFyc2UiLCJmb3JtYXRFcnJvcnMiLCJlcnJvcnMiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwIiwibmFtZSIsInZhbHVlIiwiX2Vycm9ycyIsImpvaW4iLCJmaWx0ZXIiLCJCb29sZWFuIiwic3VjY2VzcyIsImNvbnNvbGUiLCJlcnJvciIsImZvcm1hdCIsIkVycm9yIiwia2V5Iiwia2V5cyIsImRhdGEiLCJzdGFydHNXaXRoIiwid2FybiIsImVudiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/env/client.mjs\n");

/***/ }),

/***/ "(api-node)/./src/env/schema.mjs":
/*!****************************!*\
  !*** ./src/env/schema.mjs ***!
  \****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   booleanString: () => (/* binding */ booleanString),\n/* harmony export */   clientEnv: () => (/* binding */ clientEnv),\n/* harmony export */   clientSchema: () => (/* binding */ clientSchema),\n/* harmony export */   numberString: () => (/* binding */ numberString),\n/* harmony export */   serverSchema: () => (/* binding */ serverSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__]);\nzod__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// @ts-check\n\nconst booleanString = (/** @type {z.ZodDefault<z.ZodTypeAny>} */ schema)=>zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((a)=>{\n        if (typeof a === \"string\") {\n            return a.toLowerCase() === \"true\";\n        } else if (typeof a === \"boolean\") {\n            return a;\n        } else {\n            return false;\n        }\n    }, schema);\n// Same thing but for numbers\nconst numberString = (/** @type {z.ZodDefault<z.ZodTypeAny>} */ schema)=>zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((a)=>{\n        if (typeof a === \"string\") {\n            return parseInt(a);\n        } else if (typeof a === \"number\") {\n            return a;\n        } else {\n            return 0;\n        }\n    }, schema);\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */ const serverSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    DATABASE_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url(),\n    NODE_ENV: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"development\",\n        \"test\",\n        \"production\"\n    ]),\n    NEXTAUTH_SECRET: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXTAUTH_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url(),\n    /* Upstash Redis */ UPSTASH_REDIS_REST_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url(),\n    UPSTASH_REDIS_REST_TOKEN: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    /* Captcha - Turnstile */ TURNSTILE_SECRET: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    /* Email */ INFOBIP_BASE_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    INFOBIP_API_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    INFOBIP_EMAIL_VALIDATION: booleanString(zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)),\n    EMAIL_SENDER: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    EMAIL_CONTACT_US_SENDER: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    EMAIL_CONTACT_US_RECEIVER: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    /* Pusher */ PUSHER_APP_SECRET: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    /* Stripe */ STRIPE_SECRET_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    STRIPE_WEBHOOK_SECRET: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n});\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */ const clientSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    NEXT_PUBLIC_APP_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().default(\"http://localhost:3000\"),\n    NEXT_PUBLIC_TURNSTILE_SITE_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_PUSHER_APP_ID: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_PUSHER_APP_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_PUSHER_APP_HOST: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_PUSHER_APP_PORT: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_PUSHER_APP_TLS: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean(),\n    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_STRIPE_PREMIUM_PRODUCT_ID: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_STRIPE_PREMIUM_MONTHLY_PRICE_ID: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    NEXT_PUBLIC_STRIPE_PREMIUM_YEARLY_PRICE_ID: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n});\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */ const clientEnv = {\n    NEXT_PUBLIC_APP_URL: \"http://localhost:3000\",\n    NEXT_PUBLIC_TURNSTILE_SITE_KEY: \"1x00000000000000000000AA\",\n    NEXT_PUBLIC_PUSHER_APP_ID: \"a2e0706c-2033-4d09-a728-cb67389cfc46\",\n    NEXT_PUBLIC_PUSHER_APP_KEY: \"765cf238-0d71-4fa6-b213-63da76522c53\",\n    NEXT_PUBLIC_PUSHER_APP_HOST: \"localhost\",\n    NEXT_PUBLIC_PUSHER_APP_PORT: \"6011\",\n    NEXT_PUBLIC_PUSHER_APP_TLS: \"false\"?.toLowerCase() === \"true\",\n    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: \"pk_test_51LmLWuJPKozluKWZvdhJOtmKWOCKT3YM3nJzoYhbMBRhIQoQnZ2ckXWPAKnHlvXqGCciInKUa8VUfGijQ7LRcvGa00tpij7UyI\",\n    NEXT_PUBLIC_STRIPE_PREMIUM_PRODUCT_ID: \"prod_MkPVEuZnVOsVT7\",\n    NEXT_PUBLIC_STRIPE_PREMIUM_MONTHLY_PRICE_ID: \"price_1N5bBOJPKozluKWZztJvr0sJ\",\n    NEXT_PUBLIC_STRIPE_PREMIUM_YEARLY_PRICE_ID: \"price_1N5bCiJPKozluKWZDVGiBdCV\"\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WSx1QkFBK0I7SUFFcERYLGdDQUFnQ1csMEJBQTBDO0lBRTFFViwyQkFBMkJVLHNDQUFxQztJQUNoRVQsNEJBQTRCUyxzQ0FBc0M7SUFDbEVSLDZCQUE2QlEsV0FBdUM7SUFDcEVQLDZCQUE2Qk8sTUFBdUM7SUFDcEVOLDRCQUNJTSxPQUFzQyxFQUFFeEMsa0JBQWtCO0lBRTlEbUMsb0NBQ0lLLDZHQUE4QztJQUNsREosdUNBQ0lJLHFCQUFpRDtJQUNyREgsNkNBQ0lHLGdDQUF1RDtJQUMzREYsNENBQ0lFLGdDQUFzRDtBQUM5RCxFQUFFIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvZW52L3NjaGVtYS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5pbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiO1xuXG5leHBvcnQgY29uc3QgYm9vbGVhblN0cmluZyA9IChcbiAgICAvKiogQHR5cGUge3ouWm9kRGVmYXVsdDx6LlpvZFR5cGVBbnk+fSAqLyBzY2hlbWEsXG4pID0+XG4gICAgei5wcmVwcm9jZXNzKChhKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgYSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIGEudG9Mb3dlckNhc2UoKSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGEgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0sIHNjaGVtYSk7XG5cbi8vIFNhbWUgdGhpbmcgYnV0IGZvciBudW1iZXJzXG5leHBvcnQgY29uc3QgbnVtYmVyU3RyaW5nID0gKFxuICAgIC8qKiBAdHlwZSB7ei5ab2REZWZhdWx0PHouWm9kVHlwZUFueT59ICovIHNjaGVtYSxcbikgPT5cbiAgICB6LnByZXByb2Nlc3MoKGEpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBhID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoYSk7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGEgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICB9LCBzY2hlbWEpO1xuXG4vKipcbiAqIFNwZWNpZnkgeW91ciBzZXJ2ZXItc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgc2NoZW1hIGhlcmUuXG4gKiBUaGlzIHdheSB5b3UgY2FuIGVuc3VyZSB0aGUgYXBwIGlzbid0IGJ1aWx0IHdpdGggaW52YWxpZCBlbnYgdmFycy5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlcnZlclNjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBEQVRBQkFTRV9VUkw6IHouc3RyaW5nKCkudXJsKCksXG4gICAgTk9ERV9FTlY6IHouZW51bShbXCJkZXZlbG9wbWVudFwiLCBcInRlc3RcIiwgXCJwcm9kdWN0aW9uXCJdKSxcbiAgICBORVhUQVVUSF9TRUNSRVQ6IHouc3RyaW5nKCksXG4gICAgTkVYVEFVVEhfVVJMOiB6LnN0cmluZygpLnVybCgpLFxuXG4gICAgLyogVXBzdGFzaCBSZWRpcyAqL1xuICAgIFVQU1RBU0hfUkVESVNfUkVTVF9VUkw6IHouc3RyaW5nKCkudXJsKCksXG4gICAgVVBTVEFTSF9SRURJU19SRVNUX1RPS0VOOiB6LnN0cmluZygpLFxuXG4gICAgLyogQ2FwdGNoYSAtIFR1cm5zdGlsZSAqL1xuICAgIFRVUk5TVElMRV9TRUNSRVQ6IHouc3RyaW5nKCksXG5cbiAgICAvKiBFbWFpbCAqL1xuICAgIElORk9CSVBfQkFTRV9VUkw6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBJTkZPQklQX0FQSV9LRVk6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBJTkZPQklQX0VNQUlMX1ZBTElEQVRJT046IGJvb2xlYW5TdHJpbmcoei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSkpLFxuICAgIEVNQUlMX1NFTkRFUjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIEVNQUlMX0NPTlRBQ1RfVVNfU0VOREVSOiB6LnN0cmluZygpLFxuICAgIEVNQUlMX0NPTlRBQ1RfVVNfUkVDRUlWRVI6IHouc3RyaW5nKCksXG5cbiAgICAvKiBQdXNoZXIgKi9cbiAgICBQVVNIRVJfQVBQX1NFQ1JFVDogei5zdHJpbmcoKSxcblxuICAgIC8qIFN0cmlwZSAqL1xuICAgIFNUUklQRV9TRUNSRVRfS0VZOiB6LnN0cmluZygpLFxuICAgIFNUUklQRV9XRUJIT09LX1NFQ1JFVDogei5zdHJpbmcoKSxcbn0pO1xuXG4vKipcbiAqIFNwZWNpZnkgeW91ciBjbGllbnQtc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgc2NoZW1hIGhlcmUuXG4gKiBUaGlzIHdheSB5b3UgY2FuIGVuc3VyZSB0aGUgYXBwIGlzbid0IGJ1aWx0IHdpdGggaW52YWxpZCBlbnYgdmFycy5cbiAqIFRvIGV4cG9zZSB0aGVtIHRvIHRoZSBjbGllbnQsIHByZWZpeCB0aGVtIHdpdGggYE5FWFRfUFVCTElDX2AuXG4gKi9cbmV4cG9ydCBjb25zdCBjbGllbnRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gICAgTkVYVF9QVUJMSUNfQVBQX1VSTDogei5zdHJpbmcoKS5kZWZhdWx0KFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCIpLFxuXG4gICAgTkVYVF9QVUJMSUNfVFVSTlNUSUxFX1NJVEVfS0VZOiB6LnN0cmluZygpLFxuXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9JRDogei5zdHJpbmcoKSxcbiAgICBORVhUX1BVQkxJQ19QVVNIRVJfQVBQX0tFWTogei5zdHJpbmcoKSxcbiAgICBORVhUX1BVQkxJQ19QVVNIRVJfQVBQX0hPU1Q6IHouc3RyaW5nKCksXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9QT1JUOiB6LnN0cmluZygpLFxuICAgIE5FWFRfUFVCTElDX1BVU0hFUl9BUFBfVExTOiB6LmJvb2xlYW4oKSxcblxuICAgIE5FWFRfUFVCTElDX1NUUklQRV9QVUJMSVNIQUJMRV9LRVk6IHouc3RyaW5nKCksXG4gICAgTkVYVF9QVUJMSUNfU1RSSVBFX1BSRU1JVU1fUFJPRFVDVF9JRDogei5zdHJpbmcoKSxcbiAgICBORVhUX1BVQkxJQ19TVFJJUEVfUFJFTUlVTV9NT05USExZX1BSSUNFX0lEOiB6LnN0cmluZygpLFxuICAgIE5FWFRfUFVCTElDX1NUUklQRV9QUkVNSVVNX1lFQVJMWV9QUklDRV9JRDogei5zdHJpbmcoKSxcbn0pO1xuXG4vKipcbiAqIFlvdSBjYW4ndCBkZXN0cnVjdCBgcHJvY2Vzcy5lbnZgIGFzIGEgcmVndWxhciBvYmplY3QsIHNvIHlvdSBoYXZlIHRvIGRvXG4gKiBpdCBtYW51YWxseSBoZXJlLiBUaGlzIGlzIGJlY2F1c2UgTmV4dC5qcyBldmFsdWF0ZXMgdGhpcyBhdCBidWlsZCB0aW1lLFxuICogYW5kIG9ubHkgdXNlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIGluY2x1ZGVkIGluIHRoZSBidWlsZC5cbiAqIEB0eXBlIHt7IFtrIGluIGtleW9mIHouaW5mZXI8dHlwZW9mIGNsaWVudFNjaGVtYT5dOiB6LmluZmVyPHR5cGVvZiBjbGllbnRTY2hlbWE+W2tdIHwgdW5kZWZpbmVkIH19XG4gKi9cbmV4cG9ydCBjb25zdCBjbGllbnRFbnYgPSB7XG4gICAgTkVYVF9QVUJMSUNfQVBQX1VSTDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBQX1VSTCxcblxuICAgIE5FWFRfUFVCTElDX1RVUk5TVElMRV9TSVRFX0tFWTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVFVSTlNUSUxFX1NJVEVfS0VZLFxuXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9JRDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9JRCxcbiAgICBORVhUX1BVQkxJQ19QVVNIRVJfQVBQX0tFWTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9LRVksXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9IT1NUOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QVVNIRVJfQVBQX0hPU1QsXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9QT1JUOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QVVNIRVJfQVBQX1BPUlQsXG4gICAgTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9UTFM6XG4gICAgICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfVExTPy50b0xvd2VyQ2FzZSgpID09PSBcInRydWVcIixcblxuICAgIE5FWFRfUFVCTElDX1NUUklQRV9QVUJMSVNIQUJMRV9LRVk6XG4gICAgICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUUklQRV9QVUJMSVNIQUJMRV9LRVksXG4gICAgTkVYVF9QVUJMSUNfU1RSSVBFX1BSRU1JVU1fUFJPRFVDVF9JRDpcbiAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RSSVBFX1BSRU1JVU1fUFJPRFVDVF9JRCxcbiAgICBORVhUX1BVQkxJQ19TVFJJUEVfUFJFTUlVTV9NT05USExZX1BSSUNFX0lEOlxuICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVFJJUEVfUFJFTUlVTV9NT05USExZX1BSSUNFX0lELFxuICAgIE5FWFRfUFVCTElDX1NUUklQRV9QUkVNSVVNX1lFQVJMWV9QUklDRV9JRDpcbiAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RSSVBFX1BSRU1JVU1fWUVBUkxZX1BSSUNFX0lELFxufTtcbiJdLCJuYW1lcyI6WyJ6IiwiYm9vbGVhblN0cmluZyIsInNjaGVtYSIsInByZXByb2Nlc3MiLCJhIiwidG9Mb3dlckNhc2UiLCJudW1iZXJTdHJpbmciLCJwYXJzZUludCIsInNlcnZlclNjaGVtYSIsIm9iamVjdCIsIkRBVEFCQVNFX1VSTCIsInN0cmluZyIsInVybCIsIk5PREVfRU5WIiwiZW51bSIsIk5FWFRBVVRIX1NFQ1JFVCIsIk5FWFRBVVRIX1VSTCIsIlVQU1RBU0hfUkVESVNfUkVTVF9VUkwiLCJVUFNUQVNIX1JFRElTX1JFU1RfVE9LRU4iLCJUVVJOU1RJTEVfU0VDUkVUIiwiSU5GT0JJUF9CQVNFX1VSTCIsIm9wdGlvbmFsIiwiSU5GT0JJUF9BUElfS0VZIiwiSU5GT0JJUF9FTUFJTF9WQUxJREFUSU9OIiwiYm9vbGVhbiIsImRlZmF1bHQiLCJFTUFJTF9TRU5ERVIiLCJFTUFJTF9DT05UQUNUX1VTX1NFTkRFUiIsIkVNQUlMX0NPTlRBQ1RfVVNfUkVDRUlWRVIiLCJQVVNIRVJfQVBQX1NFQ1JFVCIsIlNUUklQRV9TRUNSRVRfS0VZIiwiU1RSSVBFX1dFQkhPT0tfU0VDUkVUIiwiY2xpZW50U2NoZW1hIiwiTkVYVF9QVUJMSUNfQVBQX1VSTCIsIk5FWFRfUFVCTElDX1RVUk5TVElMRV9TSVRFX0tFWSIsIk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfSUQiLCJORVhUX1BVQkxJQ19QVVNIRVJfQVBQX0tFWSIsIk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfSE9TVCIsIk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfUE9SVCIsIk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfVExTIiwiTkVYVF9QVUJMSUNfU1RSSVBFX1BVQkxJU0hBQkxFX0tFWSIsIk5FWFRfUFVCTElDX1NUUklQRV9QUkVNSVVNX1BST0RVQ1RfSUQiLCJORVhUX1BVQkxJQ19TVFJJUEVfUFJFTUlVTV9NT05USExZX1BSSUNFX0lEIiwiTkVYVF9QVUJMSUNfU1RSSVBFX1BSRU1JVU1fWUVBUkxZX1BSSUNFX0lEIiwiY2xpZW50RW52IiwicHJvY2VzcyIsImVudiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/env/schema.mjs\n");

/***/ }),

/***/ "(api-node)/./src/env/server.mjs":
/*!****************************!*\
  !*** ./src/env/server.mjs ***!
  \****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var _schema_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.mjs */ \"(api-node)/./src/env/schema.mjs\");\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.mjs */ \"(api-node)/./src/env/client.mjs\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_schema_mjs__WEBPACK_IMPORTED_MODULE_0__, _client_mjs__WEBPACK_IMPORTED_MODULE_1__]);\n([_schema_mjs__WEBPACK_IMPORTED_MODULE_0__, _client_mjs__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// @ts-check\n/**\n * This file is included in `/next.config.mjs` which ensures the app isn't built with invalid env vars.\n * It has to be a `.mjs`-file to be imported there.\n */ \n\nconst _serverEnv = _schema_mjs__WEBPACK_IMPORTED_MODULE_0__.serverSchema.safeParse(process.env);\nif (_serverEnv.success === false) {\n    console.error(\"❌ Invalid environment variables:\\n\", ...(0,_client_mjs__WEBPACK_IMPORTED_MODULE_1__.formatErrors)(_serverEnv.error.format()));\n    throw new Error(\"Invalid environment variables\");\n}\n/**\n * Validate that server-side environment variables are not exposed to the client.\n */ for (let key of Object.keys(_serverEnv.data)){\n    if (key.startsWith(\"NEXT_PUBLIC_\")) {\n        console.warn(\"❌ You are exposing a server-side env-variable:\", key);\n        throw new Error(\"You are exposing a server-side env-variable\");\n    }\n}\nconst env = {\n    ..._serverEnv.data,\n    ..._client_mjs__WEBPACK_IMPORTED_MODULE_1__.env\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9lbnYvc2VydmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxZQUFZO0FBQ1o7OztDQUdDLEdBQzJDO0FBQ2tCO0FBRTlELE1BQU1JLGFBQWFKLHFEQUFZQSxDQUFDSyxTQUFTLENBQUNDLFFBQVFMLEdBQUc7QUFFckQsSUFBSUcsV0FBV0csT0FBTyxLQUFLLE9BQU87SUFDOUJDLFFBQVFDLEtBQUssQ0FDVCx5Q0FDR04seURBQVlBLENBQUNDLFdBQVdLLEtBQUssQ0FBQ0MsTUFBTTtJQUUzQyxNQUFNLElBQUlDLE1BQU07QUFDcEI7QUFFQTs7Q0FFQyxHQUNELEtBQUssSUFBSUMsT0FBT0MsT0FBT0MsSUFBSSxDQUFDVixXQUFXVyxJQUFJLEVBQUc7SUFDMUMsSUFBSUgsSUFBSUksVUFBVSxDQUFDLGlCQUFpQjtRQUNoQ1IsUUFBUVMsSUFBSSxDQUFDLGtEQUFrREw7UUFFL0QsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0FBQ0o7QUFFTyxNQUFNVixNQUFNO0lBQUUsR0FBR0csV0FBV1csSUFBSTtJQUFFLEdBQUdiLDRDQUFTO0FBQUMsRUFBRSIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL2Vudi9zZXJ2ZXIubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuLyoqXG4gKiBUaGlzIGZpbGUgaXMgaW5jbHVkZWQgaW4gYC9uZXh0LmNvbmZpZy5tanNgIHdoaWNoIGVuc3VyZXMgdGhlIGFwcCBpc24ndCBidWlsdCB3aXRoIGludmFsaWQgZW52IHZhcnMuXG4gKiBJdCBoYXMgdG8gYmUgYSBgLm1qc2AtZmlsZSB0byBiZSBpbXBvcnRlZCB0aGVyZS5cbiAqL1xuaW1wb3J0IHsgc2VydmVyU2NoZW1hIH0gZnJvbSBcIi4vc2NoZW1hLm1qc1wiO1xuaW1wb3J0IHsgZW52IGFzIGNsaWVudEVudiwgZm9ybWF0RXJyb3JzIH0gZnJvbSBcIi4vY2xpZW50Lm1qc1wiO1xuXG5jb25zdCBfc2VydmVyRW52ID0gc2VydmVyU2NoZW1hLnNhZmVQYXJzZShwcm9jZXNzLmVudik7XG5cbmlmIChfc2VydmVyRW52LnN1Y2Nlc3MgPT09IGZhbHNlKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgXCLinYwgSW52YWxpZCBlbnZpcm9ubWVudCB2YXJpYWJsZXM6XFxuXCIsXG4gICAgICAgIC4uLmZvcm1hdEVycm9ycyhfc2VydmVyRW52LmVycm9yLmZvcm1hdCgpKVxuICAgICk7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBlbnZpcm9ubWVudCB2YXJpYWJsZXNcIik7XG59XG5cbi8qKlxuICogVmFsaWRhdGUgdGhhdCBzZXJ2ZXItc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIG5vdCBleHBvc2VkIHRvIHRoZSBjbGllbnQuXG4gKi9cbmZvciAobGV0IGtleSBvZiBPYmplY3Qua2V5cyhfc2VydmVyRW52LmRhdGEpKSB7XG4gICAgaWYgKGtleS5zdGFydHNXaXRoKFwiTkVYVF9QVUJMSUNfXCIpKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIuKdjCBZb3UgYXJlIGV4cG9zaW5nIGEgc2VydmVyLXNpZGUgZW52LXZhcmlhYmxlOlwiLCBrZXkpO1xuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgZXhwb3NpbmcgYSBzZXJ2ZXItc2lkZSBlbnYtdmFyaWFibGVcIik7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZW52ID0geyAuLi5fc2VydmVyRW52LmRhdGEsIC4uLmNsaWVudEVudiB9O1xuIl0sIm5hbWVzIjpbInNlcnZlclNjaGVtYSIsImVudiIsImNsaWVudEVudiIsImZvcm1hdEVycm9ycyIsIl9zZXJ2ZXJFbnYiLCJzYWZlUGFyc2UiLCJwcm9jZXNzIiwic3VjY2VzcyIsImNvbnNvbGUiLCJlcnJvciIsImZvcm1hdCIsIkVycm9yIiwia2V5IiwiT2JqZWN0Iiwia2V5cyIsImRhdGEiLCJzdGFydHNXaXRoIiwid2FybiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/env/server.mjs\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/trpc/[trpc].ts":
/*!**************************************!*\
  !*** ./src/pages/api/trpc/[trpc].ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/adapters/next */ \"@trpc/server/adapters/next\");\n/* harmony import */ var _server_trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../server/trpc */ \"(api-node)/./src/server/trpc/index.ts\");\n/* harmony import */ var _server_trpc_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../server/trpc/context */ \"(api-node)/./src/server/trpc/context.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _server_trpc__WEBPACK_IMPORTED_MODULE_1__, _server_trpc_context__WEBPACK_IMPORTED_MODULE_2__]);\n([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _server_trpc__WEBPACK_IMPORTED_MODULE_1__, _server_trpc_context__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/pages/api/trpc/[trpc].ts\n\n\n\n// export API handler\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__.createNextApiHandler)({\n    router: _server_trpc__WEBPACK_IMPORTED_MODULE_1__.versionedRouter,\n    createContext: _server_trpc_context__WEBPACK_IMPORTED_MODULE_2__.createContext\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9wYWdlcy9hcGkvdHJwYy9bdHJwY10udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLCtCQUErQjtBQUNtQztBQUNYO0FBQ007QUFFN0QscUJBQXFCO0FBQ3JCLGlFQUFlQSxnRkFBb0JBLENBQUM7SUFDaENHLFFBQVFGLHlEQUFlQTtJQUN2QkMsYUFBYUEsaUVBQUFBO0FBQ2pCLEVBQUUsRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3BhZ2VzL2FwaS90cnBjL1t0cnBjXS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzXG5pbXBvcnQgeyBjcmVhdGVOZXh0QXBpSGFuZGxlciB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvYWRhcHRlcnMvbmV4dFwiO1xuaW1wb3J0IHsgdmVyc2lvbmVkUm91dGVyIH0gZnJvbSBcIi4uLy4uLy4uL3NlcnZlci90cnBjXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcIi4uLy4uLy4uL3NlcnZlci90cnBjL2NvbnRleHRcIjtcblxuLy8gZXhwb3J0IEFQSSBoYW5kbGVyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVOZXh0QXBpSGFuZGxlcih7XG4gICAgcm91dGVyOiB2ZXJzaW9uZWRSb3V0ZXIsXG4gICAgY3JlYXRlQ29udGV4dCxcbn0pO1xuIl0sIm5hbWVzIjpbImNyZWF0ZU5leHRBcGlIYW5kbGVyIiwidmVyc2lvbmVkUm91dGVyIiwiY3JlYXRlQ29udGV4dCIsInJvdXRlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/trpc/[trpc].ts\n");

/***/ }),

/***/ "(api-node)/./src/schemes/payment_router.ts":
/*!***************************************!*\
  !*** ./src/schemes/payment_router.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSubscriptionOutputSchema: () => (/* binding */ getSubscriptionOutputSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__]);\nzod__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst getSubscriptionOutputSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    createdAt: zod__WEBPACK_IMPORTED_MODULE_0__.z.date().nullish(),\n    expiresAt: zod__WEBPACK_IMPORTED_MODULE_0__.z.date().nullish(),\n    // status: StripeSubscriptionStatusZod.nullish(),\n    status: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullish(),\n    paymentStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullish(),\n    cancelAtPeriodEnd: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().nullish(),\n    productId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullish(),\n    productName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    // customerId: z.string().nullish(),\n    nonFree: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean(),\n    // configuration: z\n    //     .object({\n    //         linkingAllowed: z.boolean(),\n    //         linkedDevices: z.number(),\n    //         linkedDevicesLimit: z.number(),\n    //         featureVoting: z.boolean(),\n    //         credentialsBorrowing: z.boolean(),\n    //     })\n    //     .nullable(),\n    resourceStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        linkedDevices: zod__WEBPACK_IMPORTED_MODULE_0__.z.number()\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zY2hlbWVzL3BheW1lbnRfcm91dGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdCO0FBRWpCLE1BQU1DLDhCQUE4QkQsa0NBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUNoREMsV0FBV0gsa0NBQUNBLENBQUNJLElBQUksR0FBR0MsT0FBTztJQUMzQkMsV0FBV04sa0NBQUNBLENBQUNJLElBQUksR0FBR0MsT0FBTztJQUMzQixpREFBaUQ7SUFDakRFLFFBQVFQLGtDQUFDQSxDQUFDUSxNQUFNLEdBQUdILE9BQU87SUFDMUJJLGVBQWVULGtDQUFDQSxDQUFDUSxNQUFNLEdBQUdILE9BQU87SUFDakNLLG1CQUFtQlYsa0NBQUNBLENBQUNXLE9BQU8sR0FBR04sT0FBTztJQUN0Q08sV0FBV1osa0NBQUNBLENBQUNRLE1BQU0sR0FBR0gsT0FBTztJQUM3QlEsYUFBYWIsa0NBQUNBLENBQUNRLE1BQU07SUFDckIsb0NBQW9DO0lBQ3BDTSxTQUFTZCxrQ0FBQ0EsQ0FBQ1csT0FBTztJQUNsQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLHVDQUF1QztJQUN2QyxxQ0FBcUM7SUFDckMsMENBQTBDO0lBQzFDLHNDQUFzQztJQUN0Qyw2Q0FBNkM7SUFDN0MsU0FBUztJQUNULG1CQUFtQjtJQUNuQkksZ0JBQWdCZixrQ0FBQ0EsQ0FBQ0UsTUFBTSxDQUFDO1FBQ3JCYyxlQUFlaEIsa0NBQUNBLENBQUNpQixNQUFNO0lBQzNCO0FBQ0osR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NjaGVtZXMvcGF5bWVudF9yb3V0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcblxuZXhwb3J0IGNvbnN0IGdldFN1YnNjcmlwdGlvbk91dHB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBjcmVhdGVkQXQ6IHouZGF0ZSgpLm51bGxpc2goKSxcbiAgICBleHBpcmVzQXQ6IHouZGF0ZSgpLm51bGxpc2goKSxcbiAgICAvLyBzdGF0dXM6IFN0cmlwZVN1YnNjcmlwdGlvblN0YXR1c1pvZC5udWxsaXNoKCksXG4gICAgc3RhdHVzOiB6LnN0cmluZygpLm51bGxpc2goKSxcbiAgICBwYXltZW50U3RhdHVzOiB6LnN0cmluZygpLm51bGxpc2goKSxcbiAgICBjYW5jZWxBdFBlcmlvZEVuZDogei5ib29sZWFuKCkubnVsbGlzaCgpLFxuICAgIHByb2R1Y3RJZDogei5zdHJpbmcoKS5udWxsaXNoKCksXG4gICAgcHJvZHVjdE5hbWU6IHouc3RyaW5nKCksXG4gICAgLy8gY3VzdG9tZXJJZDogei5zdHJpbmcoKS5udWxsaXNoKCksXG4gICAgbm9uRnJlZTogei5ib29sZWFuKCksXG4gICAgLy8gY29uZmlndXJhdGlvbjogelxuICAgIC8vICAgICAub2JqZWN0KHtcbiAgICAvLyAgICAgICAgIGxpbmtpbmdBbGxvd2VkOiB6LmJvb2xlYW4oKSxcbiAgICAvLyAgICAgICAgIGxpbmtlZERldmljZXM6IHoubnVtYmVyKCksXG4gICAgLy8gICAgICAgICBsaW5rZWREZXZpY2VzTGltaXQ6IHoubnVtYmVyKCksXG4gICAgLy8gICAgICAgICBmZWF0dXJlVm90aW5nOiB6LmJvb2xlYW4oKSxcbiAgICAvLyAgICAgICAgIGNyZWRlbnRpYWxzQm9ycm93aW5nOiB6LmJvb2xlYW4oKSxcbiAgICAvLyAgICAgfSlcbiAgICAvLyAgICAgLm51bGxhYmxlKCksXG4gICAgcmVzb3VyY2VTdGF0dXM6IHoub2JqZWN0KHtcbiAgICAgICAgbGlua2VkRGV2aWNlczogei5udW1iZXIoKSxcbiAgICB9KSxcbn0pO1xuZXhwb3J0IHR5cGUgR2V0U3Vic2NyaXB0aW9uT3V0cHV0U2NoZW1hVHlwZSA9IHouaW5mZXI8XG4gICAgdHlwZW9mIGdldFN1YnNjcmlwdGlvbk91dHB1dFNjaGVtYVxuPjtcbiJdLCJuYW1lcyI6WyJ6IiwiZ2V0U3Vic2NyaXB0aW9uT3V0cHV0U2NoZW1hIiwib2JqZWN0IiwiY3JlYXRlZEF0IiwiZGF0ZSIsIm51bGxpc2giLCJleHBpcmVzQXQiLCJzdGF0dXMiLCJzdHJpbmciLCJwYXltZW50U3RhdHVzIiwiY2FuY2VsQXRQZXJpb2RFbmQiLCJib29sZWFuIiwicHJvZHVjdElkIiwicHJvZHVjdE5hbWUiLCJub25GcmVlIiwicmVzb3VyY2VTdGF0dXMiLCJsaW5rZWREZXZpY2VzIiwibnVtYmVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/schemes/payment_router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/common/api-key-generation.ts":
/*!*************************************************!*\
  !*** ./src/server/common/api-key-generation.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIKeyPurpose: () => (/* binding */ APIKeyPurpose),\n/* harmony export */   insertDefaultAPIKey: () => (/* binding */ insertDefaultAPIKey)\n/* harmony export */ });\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! argon2 */ \"argon2\");\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(argon2__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar APIKeyPurpose = /*#__PURE__*/ function(APIKeyPurpose) {\n    APIKeyPurpose[\"Web\"] = \"web\";\n    APIKeyPurpose[\"Mobile\"] = \"mobile\";\n    APIKeyPurpose[\"Browser\"] = \"browser\";\n    APIKeyPurpose[\"CLI\"] = \"cli\";\n    return APIKeyPurpose;\n}({});\n// NOTE: https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#argon2id\nconst userAPIKeyArgon2Config = {\n    type: (argon2__WEBPACK_IMPORTED_MODULE_0___default().argon2id),\n    parallelism: 1,\n    memoryCost: 47104,\n    timeCost: 2\n};\n/**\n * Inserts the default API Key for the user into the database.\n * @default The default purpose of the API Key is \"web\"\n * @param ctx The TRPC context\n * @param userId The user ID for which to insert the default API Key\n * @returns The API Key and the API Key ID in one string\n */ const insertDefaultAPIKey = async (ctx, userId, root = true, purpose = \"web\")=>{\n    const generatedAPIKey = (0,crypto__WEBPACK_IMPORTED_MODULE_1__.randomUUID)();\n    const hashedAPIKey = await argon2__WEBPACK_IMPORTED_MODULE_0___default().hash(generatedAPIKey, userAPIKeyArgon2Config);\n    // Insert the API Key into the database\n    const apiKey = await ctx.prisma.aPIKey.create({\n        data: {\n            key: hashedAPIKey,\n            purpose,\n            user_id: userId,\n            root\n        }\n    });\n    return generatedAPIKey + apiKey.id;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvY29tbW9uL2FwaS1rZXktZ2VuZXJhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEI7QUFFUTtBQUU3QiwyQ0FBS0U7Ozs7O1dBQUFBO01BS1g7QUFFRCxrR0FBa0c7QUFDbEcsTUFBTUMseUJBQTJEO0lBQzdEQyxNQUFNSix3REFBZTtJQUNyQk0sYUFBYTtJQUNiQyxZQUFZO0lBQ1pDLFVBQVU7QUFFZDtBQUVBOzs7Ozs7Q0FNQyxHQUNNLE1BQU1DLHNCQUFzQixPQUMvQkMsS0FDQUMsUUFDQUMsT0FBTyxJQUFJLEVBQ1hDLGVBQTBDO0lBRTFDLE1BQU1DLGtCQUFrQmIsa0RBQVVBO0lBQ2xDLE1BQU1jLGVBQWUsTUFBTWYsa0RBQVcsQ0FDbENjLGlCQUNBWDtJQUdKLHVDQUF1QztJQUN2QyxNQUFNYyxTQUFTLE1BQU1QLElBQUlRLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNLENBQUM7UUFDMUNDLE1BQU07WUFDRkMsS0FBS1A7WUFDTEY7WUFDQVUsU0FBU1o7WUFDVEM7UUFDSjtJQUNKO0lBRUEsT0FBT0Usa0JBQWtCRyxPQUFPTyxFQUFFO0FBQ3RDLEVBQUUiLCJzb3VyY2VzIjpbIi9ob21lL3N5c3RlbS9Eb2N1bWVudHMvUHJvamVjdHMvY3J5cHRleC12YXVsdC13ZWIvd2ViL3NyYy9zZXJ2ZXIvY29tbW9uL2FwaS1rZXktZ2VuZXJhdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJnb24yIGZyb20gXCJhcmdvbjJcIjtcbmltcG9ydCB7IENvbnRleHQgfSBmcm9tIFwiLi4vdHJwYy9jb250ZXh0XCI7XG5pbXBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSBcImNyeXB0b1wiO1xuXG5leHBvcnQgZW51bSBBUElLZXlQdXJwb3NlIHtcbiAgICBXZWIgPSBcIndlYlwiLFxuICAgIE1vYmlsZSA9IFwibW9iaWxlXCIsXG4gICAgQnJvd3NlciA9IFwiYnJvd3NlclwiLFxuICAgIENMSSA9IFwiY2xpXCIsXG59XG5cbi8vIE5PVEU6IGh0dHBzOi8vY2hlYXRzaGVldHNlcmllcy5vd2FzcC5vcmcvY2hlYXRzaGVldHMvUGFzc3dvcmRfU3RvcmFnZV9DaGVhdF9TaGVldC5odG1sI2FyZ29uMmlkXG5jb25zdCB1c2VyQVBJS2V5QXJnb24yQ29uZmlnOiBhcmdvbjIuT3B0aW9ucyAmIHsgcmF3PzogZmFsc2UgfSA9IHtcbiAgICB0eXBlOiBhcmdvbjIuYXJnb24yaWQsXG4gICAgcGFyYWxsZWxpc206IDEsIC8vIDEgdGhyZWFkcyAoZWFjaCB0aHJlYWQgaGFzIGEgbWVtb3J5IHBvb2wgb2YgbWVtb3J5Q29zdCBieXRlcylcbiAgICBtZW1vcnlDb3N0OiA0NzEwNCwgLy8gNDZNaUJcbiAgICB0aW1lQ29zdDogMiwgLy8gMiBpdGVyYXRpb25zICgyIHBhc3Mgb3ZlciB0aGUgbWVtb3J5KVxuICAgIC8vIHNhbHQ6IC4uLiwgLy8gTk9URTogV2UgZG9uJ3QgbmVlZCB0byBwcm92aWRlIGEgc2FsdCwgYXJnb24yIHdpbGwgZ2VuZXJhdGUgYSByYW5kb20gc2FsdFxufTtcblxuLyoqXG4gKiBJbnNlcnRzIHRoZSBkZWZhdWx0IEFQSSBLZXkgZm9yIHRoZSB1c2VyIGludG8gdGhlIGRhdGFiYXNlLlxuICogQGRlZmF1bHQgVGhlIGRlZmF1bHQgcHVycG9zZSBvZiB0aGUgQVBJIEtleSBpcyBcIndlYlwiXG4gKiBAcGFyYW0gY3R4IFRoZSBUUlBDIGNvbnRleHRcbiAqIEBwYXJhbSB1c2VySWQgVGhlIHVzZXIgSUQgZm9yIHdoaWNoIHRvIGluc2VydCB0aGUgZGVmYXVsdCBBUEkgS2V5XG4gKiBAcmV0dXJucyBUaGUgQVBJIEtleSBhbmQgdGhlIEFQSSBLZXkgSUQgaW4gb25lIHN0cmluZ1xuICovXG5leHBvcnQgY29uc3QgaW5zZXJ0RGVmYXVsdEFQSUtleSA9IGFzeW5jIChcbiAgICBjdHg6IENvbnRleHQsXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgcm9vdCA9IHRydWUsXG4gICAgcHVycG9zZTogQVBJS2V5UHVycG9zZSA9IEFQSUtleVB1cnBvc2UuV2ViLFxuKSA9PiB7XG4gICAgY29uc3QgZ2VuZXJhdGVkQVBJS2V5ID0gcmFuZG9tVVVJRCgpO1xuICAgIGNvbnN0IGhhc2hlZEFQSUtleSA9IGF3YWl0IGFyZ29uMi5oYXNoKFxuICAgICAgICBnZW5lcmF0ZWRBUElLZXksXG4gICAgICAgIHVzZXJBUElLZXlBcmdvbjJDb25maWcsXG4gICAgKTtcblxuICAgIC8vIEluc2VydCB0aGUgQVBJIEtleSBpbnRvIHRoZSBkYXRhYmFzZVxuICAgIGNvbnN0IGFwaUtleSA9IGF3YWl0IGN0eC5wcmlzbWEuYVBJS2V5LmNyZWF0ZSh7XG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleTogaGFzaGVkQVBJS2V5LFxuICAgICAgICAgICAgcHVycG9zZSxcbiAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgICAgIHJvb3QsXG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdGVkQVBJS2V5ICsgYXBpS2V5LmlkO1xufTtcbiJdLCJuYW1lcyI6WyJhcmdvbjIiLCJyYW5kb21VVUlEIiwiQVBJS2V5UHVycG9zZSIsInVzZXJBUElLZXlBcmdvbjJDb25maWciLCJ0eXBlIiwiYXJnb24yaWQiLCJwYXJhbGxlbGlzbSIsIm1lbW9yeUNvc3QiLCJ0aW1lQ29zdCIsImluc2VydERlZmF1bHRBUElLZXkiLCJjdHgiLCJ1c2VySWQiLCJyb290IiwicHVycG9zZSIsImdlbmVyYXRlZEFQSUtleSIsImhhc2hlZEFQSUtleSIsImhhc2giLCJhcGlLZXkiLCJwcmlzbWEiLCJhUElLZXkiLCJjcmVhdGUiLCJkYXRhIiwia2V5IiwidXNlcl9pZCIsImlkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/server/common/api-key-generation.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/common/email.ts":
/*!************************************!*\
  !*** ./src/server/common/email.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendContactEmail: () => (/* binding */ sendContactEmail),\n/* harmony export */   sendFeedbackEmail: () => (/* binding */ sendFeedbackEmail)\n/* harmony export */ });\n/* harmony import */ var _env_server_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../env/server.mjs */ \"(api-node)/./src/env/server.mjs\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__]);\n_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst sendEmailRequest = async (data)=>{\n    if (!_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.INFOBIP_BASE_URL || !_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.INFOBIP_API_KEY) {\n        throw new Error(\"[EMAIL] Infobip not configured. Skipping...\");\n    }\n    const response = await fetch(`${_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.INFOBIP_BASE_URL}/email/3/send`, {\n        method: \"POST\",\n        headers: {\n            Authorization: `App ${_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.INFOBIP_API_KEY}`\n        },\n        body: data\n    });\n    return response.json();\n};\nconst sendContactEmail = async (from, message)=>{\n    if (!_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_SENDER) {\n        throw new Error(\"[EMAIL] Infobip not configured. Skipping...\");\n    }\n    const data = new FormData();\n    data.append(\"from\", `CryptexVault <${_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_CONTACT_US_SENDER}>`);\n    data.append(\"to\", _env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_CONTACT_US_RECEIVER);\n    data.append(\"replyTo\", from);\n    data.append(\"subject\", \"CryptexVault - Contact Form Submission\");\n    data.append(\"html\", `\n            <h1>Contact Form Submission</h1>\n            <p><strong>From:</strong> ${from}</p>\n            <br />\n            <hr />\n            <br />\n            <p>${message}</p>\n        `);\n    return sendEmailRequest(data);\n};\nconst sendFeedbackEmail = async (from, userID, reason, message)=>{\n    if (!_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_SENDER) {\n        throw new Error(\"[EMAIL] Infobip not configured. Skipping...\");\n    }\n    const data = new FormData();\n    data.append(\"from\", `Cryptex Vault <${_env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_CONTACT_US_SENDER}>`);\n    data.append(\"to\", _env_server_mjs__WEBPACK_IMPORTED_MODULE_0__.env.EMAIL_CONTACT_US_RECEIVER);\n    if (from) data.append(\"replyTo\", from);\n    data.append(\"subject\", \"Cryptex Vault - Feedback Form Submission\");\n    data.append(\"html\", `\n            <h1>Feedback Form Submission</h1>\n            <p><strong>From:</strong> ${from} (${userID})</p>\n            <p><strong>Reason:</strong> ${reason}</p>\n            <br />\n            <hr />\n            <br />\n            <p>${message}</p>\n        `);\n    return sendEmailRequest(data);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvY29tbW9uL2VtYWlsLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQTREM0MsTUFBTUMsbUJBQW1CLE9BQ3JCQztJQUVBLElBQUksQ0FBQ0YsZ0RBQUdBLENBQUNHLGdCQUFnQixJQUFJLENBQUNILGdEQUFHQSxDQUFDSSxlQUFlLEVBQUU7UUFDL0MsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBRUEsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLEdBQUdQLGdEQUFHQSxDQUFDRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUNqRUssUUFBUTtRQUNSQyxTQUFTO1lBQ0xDLGVBQWUsQ0FBQyxJQUFJLEVBQUVWLGdEQUFHQSxDQUFDSSxlQUFlLEVBQUU7UUFDL0M7UUFDQU8sTUFBTVQ7SUFDVjtJQUVBLE9BQU9JLFNBQVNNLElBQUk7QUFDeEI7QUFFTyxNQUFNQyxtQkFBbUIsT0FDNUJDLE1BQ0FDO0lBRUEsSUFBSSxDQUFDZixnREFBR0EsQ0FBQ2dCLFlBQVksRUFBRTtRQUNuQixNQUFNLElBQUlYLE1BQU07SUFDcEI7SUFFQSxNQUFNSCxPQUFPLElBQUllO0lBQ2pCZixLQUFLZ0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUVsQixnREFBR0EsQ0FBQ21CLHVCQUF1QixDQUFDLENBQUMsQ0FBQztJQUNuRWpCLEtBQUtnQixNQUFNLENBQUMsTUFBTWxCLGdEQUFHQSxDQUFDb0IseUJBQXlCO0lBQy9DbEIsS0FBS2dCLE1BQU0sQ0FBQyxXQUFXSjtJQUN2QlosS0FBS2dCLE1BQU0sQ0FBQyxXQUFXO0lBQ3ZCaEIsS0FBS2dCLE1BQU0sQ0FDUCxRQUNBLENBQUM7O3NDQUU2QixFQUFFSixLQUFLOzs7O2VBSTlCLEVBQUVDLFFBQVE7UUFDakIsQ0FBQztJQUdMLE9BQU9kLGlCQUFpQkM7QUFDNUIsRUFBRTtBQUVLLE1BQU1tQixvQkFBb0IsT0FDN0JQLE1BQ0FRLFFBQ0FDLFFBQ0FSO0lBRUEsSUFBSSxDQUFDZixnREFBR0EsQ0FBQ2dCLFlBQVksRUFBRTtRQUNuQixNQUFNLElBQUlYLE1BQU07SUFDcEI7SUFFQSxNQUFNSCxPQUFPLElBQUllO0lBQ2pCZixLQUFLZ0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUVsQixnREFBR0EsQ0FBQ21CLHVCQUF1QixDQUFDLENBQUMsQ0FBQztJQUNwRWpCLEtBQUtnQixNQUFNLENBQUMsTUFBTWxCLGdEQUFHQSxDQUFDb0IseUJBQXlCO0lBRS9DLElBQUlOLE1BQU1aLEtBQUtnQixNQUFNLENBQUMsV0FBV0o7SUFFakNaLEtBQUtnQixNQUFNLENBQUMsV0FBVztJQUN2QmhCLEtBQUtnQixNQUFNLENBQ1AsUUFDQSxDQUFDOztzQ0FFNkIsRUFBRUosS0FBSyxFQUFFLEVBQUVRLE9BQU87d0NBQ2hCLEVBQUVDLE9BQU87Ozs7ZUFJbEMsRUFBRVIsUUFBUTtRQUNqQixDQUFDO0lBR0wsT0FBT2QsaUJBQWlCQztBQUM1QixFQUFFIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvc2VydmVyL2NvbW1vbi9lbWFpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi4vLi4vZW52L3NlcnZlci5tanNcIjtcblxuLy8gVHlwZSBmb3IgcmVzcG9zZSAyMDAgZnJvbSBJbmZvYmlwXG4vKlxue1xuICAgIFwiYnVsa0lkXCI6IFwic254ZW1kOHU1MnY3djg0aWl1NjlcIixcbiAgICBcIm1lc3NhZ2VzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0b1wiOiBcImpvaG4uc21pdGhAc29tZWNvbXBhbnkuY29tXCIsXG4gICAgICAgICAgICBcIm1lc3NhZ2VJZFwiOiBcImpnenJhNDZ2OXppMXp0dmQ2MnQ1XCIsXG4gICAgICAgICAgICBcInN0YXR1c1wiOiB7XG4gICAgICAgICAgICAgICAgXCJncm91cElkXCI6IDEsXG4gICAgICAgICAgICAgICAgXCJncm91cE5hbWVcIjogXCJQRU5ESU5HXCIsXG4gICAgICAgICAgICAgICAgXCJpZFwiOiAyNixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJQRU5ESU5HX0FDQ0VQVEVEXCIsXG4gICAgICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIk1lc3NhZ2UgYWNjZXB0ZWQsIHBlbmRpbmcgZm9yIGRlbGl2ZXJ5LlwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdXG59XG4qL1xuXG4vLyBBbGwgb3RoZXIgZXJyb3IgcmVzcG9uc2VzXG4vKlxue1xuICAgIFwicmVxdWVzdEVycm9yXCI6IHtcbiAgICAgICAgXCJzZXJ2aWNlRXhjZXB0aW9uXCI6IHtcbiAgICAgICAgICAgIFwibWVzc2FnZUlkXCI6IFwiQkFEX1JFUVVFU1RcIixcbiAgICAgICAgICAgIFwidGV4dFwiOiBcIkJhZCByZXF1ZXN0XCJcbiAgICAgICAgfVxuICAgIH1cbn1cbiovXG5cbnR5cGUgSW5mb2JpcEVtYWlsU2VuZFJlc3BvbnNlID0ge1xuICAgIGJ1bGtJZD86IHN0cmluZztcbiAgICBtZXNzYWdlcz86IFtcbiAgICAgICAge1xuICAgICAgICAgICAgdG86IHN0cmluZztcbiAgICAgICAgICAgIG1lc3NhZ2VJZDogc3RyaW5nO1xuICAgICAgICAgICAgc3RhdHVzOiB7XG4gICAgICAgICAgICAgICAgZ3JvdXBJZDogbnVtYmVyO1xuICAgICAgICAgICAgICAgIGdyb3VwTmFtZTogc3RyaW5nO1xuICAgICAgICAgICAgICAgIGlkOiBudW1iZXI7XG4gICAgICAgICAgICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIF07XG4gICAgLypcbiAgICAgKiBJbiBjYXNlIHdlIHJlY2VpdmUgYW55dGhpbmcgb3RoZXIgdGhhbiAyMDAgT0ssIHRoaXMgd2lsbCBiZSBwb3B1bGF0ZWQgd2l0aCB0aGUgZXJyb3IgbWVzc2FnZS5cbiAgICAgKi9cbiAgICByZXF1ZXN0RXJyb3I/OiB7XG4gICAgICAgIHNlcnZpY2VFeGNlcHRpb246IHtcbiAgICAgICAgICAgIG1lc3NhZ2VJZDogc3RyaW5nO1xuICAgICAgICAgICAgdGV4dDogc3RyaW5nO1xuICAgICAgICB9O1xuICAgIH07XG59O1xuXG5jb25zdCBzZW5kRW1haWxSZXF1ZXN0ID0gYXN5bmMgKFxuICAgIGRhdGE6IEZvcm1EYXRhLFxuKTogUHJvbWlzZTxJbmZvYmlwRW1haWxTZW5kUmVzcG9uc2U+ID0+IHtcbiAgICBpZiAoIWVudi5JTkZPQklQX0JBU0VfVVJMIHx8ICFlbnYuSU5GT0JJUF9BUElfS0VZKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIltFTUFJTF0gSW5mb2JpcCBub3QgY29uZmlndXJlZC4gU2tpcHBpbmcuLi5cIik7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtlbnYuSU5GT0JJUF9CQVNFX1VSTH0vZW1haWwvMy9zZW5kYCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQXBwICR7ZW52LklORk9CSVBfQVBJX0tFWX1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBkYXRhLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzZW5kQ29udGFjdEVtYWlsID0gYXN5bmMgKFxuICAgIGZyb206IHN0cmluZyxcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4pOiBQcm9taXNlPEluZm9iaXBFbWFpbFNlbmRSZXNwb25zZT4gPT4ge1xuICAgIGlmICghZW52LkVNQUlMX1NFTkRFUikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbRU1BSUxdIEluZm9iaXAgbm90IGNvbmZpZ3VyZWQuIFNraXBwaW5nLi4uXCIpO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICBkYXRhLmFwcGVuZChcImZyb21cIiwgYENyeXB0ZXhWYXVsdCA8JHtlbnYuRU1BSUxfQ09OVEFDVF9VU19TRU5ERVJ9PmApO1xuICAgIGRhdGEuYXBwZW5kKFwidG9cIiwgZW52LkVNQUlMX0NPTlRBQ1RfVVNfUkVDRUlWRVIpO1xuICAgIGRhdGEuYXBwZW5kKFwicmVwbHlUb1wiLCBmcm9tKTtcbiAgICBkYXRhLmFwcGVuZChcInN1YmplY3RcIiwgXCJDcnlwdGV4VmF1bHQgLSBDb250YWN0IEZvcm0gU3VibWlzc2lvblwiKTtcbiAgICBkYXRhLmFwcGVuZChcbiAgICAgICAgXCJodG1sXCIsXG4gICAgICAgIGBcbiAgICAgICAgICAgIDxoMT5Db250YWN0IEZvcm0gU3VibWlzc2lvbjwvaDE+XG4gICAgICAgICAgICA8cD48c3Ryb25nPkZyb206PC9zdHJvbmc+ICR7ZnJvbX08L3A+XG4gICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgIDxociAvPlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICA8cD4ke21lc3NhZ2V9PC9wPlxuICAgICAgICBgLFxuICAgICk7XG5cbiAgICByZXR1cm4gc2VuZEVtYWlsUmVxdWVzdChkYXRhKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzZW5kRmVlZGJhY2tFbWFpbCA9IGFzeW5jIChcbiAgICBmcm9tOiBzdHJpbmcgfCBudWxsLFxuICAgIHVzZXJJRDogc3RyaW5nLFxuICAgIHJlYXNvbjogXCJGZWF0dXJlXCIgfCBcIkJ1Z1wiIHwgXCJHZW5lcmFsXCIsXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuKTogUHJvbWlzZTxJbmZvYmlwRW1haWxTZW5kUmVzcG9uc2U+ID0+IHtcbiAgICBpZiAoIWVudi5FTUFJTF9TRU5ERVIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW0VNQUlMXSBJbmZvYmlwIG5vdCBjb25maWd1cmVkLiBTa2lwcGluZy4uLlwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZGF0YS5hcHBlbmQoXCJmcm9tXCIsIGBDcnlwdGV4IFZhdWx0IDwke2Vudi5FTUFJTF9DT05UQUNUX1VTX1NFTkRFUn0+YCk7XG4gICAgZGF0YS5hcHBlbmQoXCJ0b1wiLCBlbnYuRU1BSUxfQ09OVEFDVF9VU19SRUNFSVZFUik7XG5cbiAgICBpZiAoZnJvbSkgZGF0YS5hcHBlbmQoXCJyZXBseVRvXCIsIGZyb20pO1xuXG4gICAgZGF0YS5hcHBlbmQoXCJzdWJqZWN0XCIsIFwiQ3J5cHRleCBWYXVsdCAtIEZlZWRiYWNrIEZvcm0gU3VibWlzc2lvblwiKTtcbiAgICBkYXRhLmFwcGVuZChcbiAgICAgICAgXCJodG1sXCIsXG4gICAgICAgIGBcbiAgICAgICAgICAgIDxoMT5GZWVkYmFjayBGb3JtIFN1Ym1pc3Npb248L2gxPlxuICAgICAgICAgICAgPHA+PHN0cm9uZz5Gcm9tOjwvc3Ryb25nPiAke2Zyb219ICgke3VzZXJJRH0pPC9wPlxuICAgICAgICAgICAgPHA+PHN0cm9uZz5SZWFzb246PC9zdHJvbmc+ICR7cmVhc29ufTwvcD5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgIDxwPiR7bWVzc2FnZX08L3A+XG4gICAgICAgIGAsXG4gICAgKTtcblxuICAgIHJldHVybiBzZW5kRW1haWxSZXF1ZXN0KGRhdGEpO1xufTtcbiJdLCJuYW1lcyI6WyJlbnYiLCJzZW5kRW1haWxSZXF1ZXN0IiwiZGF0YSIsIklORk9CSVBfQkFTRV9VUkwiLCJJTkZPQklQX0FQSV9LRVkiLCJFcnJvciIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImJvZHkiLCJqc29uIiwic2VuZENvbnRhY3RFbWFpbCIsImZyb20iLCJtZXNzYWdlIiwiRU1BSUxfU0VOREVSIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJFTUFJTF9DT05UQUNUX1VTX1NFTkRFUiIsIkVNQUlMX0NPTlRBQ1RfVVNfUkVDRUlWRVIiLCJzZW5kRmVlZGJhY2tFbWFpbCIsInVzZXJJRCIsInJlYXNvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/server/common/email.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/common/ratelimiting.ts":
/*!*******************************************!*\
  !*** ./src/server/common/ratelimiting.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkRatelimitter: () => (/* binding */ checkRatelimitter),\n/* harmony export */   trpcRatelimitError: () => (/* binding */ trpcRatelimitError)\n/* harmony export */ });\n/* harmony import */ var _upstash_ratelimit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/ratelimit */ \"@upstash/ratelimit\");\n/* harmony import */ var _upstash_ratelimit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_upstash_ratelimit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @upstash/redis */ \"@upstash/redis\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_upstash_redis__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__]);\n([_upstash_redis__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst trpcRatelimitError = new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n    code: \"PRECONDITION_FAILED\",\n    message: \"Too many requests.\"\n});\n// Emphemeral storage\nconst ephemeralCache = new Map();\n/**\n * A generic ratelimit checker that can make use of environment variables to override the default values.\n * All of the ratelimits are disabled by default.\n * @note To enable a ratelimit, set the environment variable `RATELIMIT_{envVar}_ENABLE` to `true`.\n * @note To override the number of requests, set the environment variable `RATELIMIT_{envVar}_N_REQUESTS` to the desired number.\n * @note To override the duration, set the environment variable `RATELIMIT_{envVar}_DURATION` to the desired duration.\n * @param clientIdentifier The client identifier\n * @param envVar Environment variable override name\n * @param tokens Number of tokens in a duration\n * @param duration The duration during which we limit the number of requests\n * @throws {TRPCError} If the request is not allowed\n */ const checkRatelimitter = async (clientIdentifier, envVar, tokens, duration)=>{\n    envVar = envVar.toUpperCase();\n    const envVarPrefix = \"RATELIMIT_\" + envVar;\n    let nRequests = tokens;\n    let dur = duration;\n    // If the ratelimit is not enabled, return true\n    const envVarEnable = process.env[envVarPrefix + \"_ENABLE\"];\n    if (envVarEnable == null || envVarEnable.toLowerCase() === \"false\") {\n        return true;\n    }\n    // Parse the environment variable for the number of requests if it exist\n    const nRequestsEnv = process.env[envVarPrefix + \"_N_REQUESTS\"];\n    if (nRequestsEnv != null) {\n        nRequests = parseInt(nRequestsEnv);\n    }\n    // Parse the environment variable for the duration if it exist\n    const durationEnv = process.env[envVarPrefix + \"_DURATION\"];\n    if (durationEnv != null) {\n        dur = durationEnv;\n    }\n    const ratelimit = new _upstash_ratelimit__WEBPACK_IMPORTED_MODULE_0__.Ratelimit({\n        redis: _upstash_redis__WEBPACK_IMPORTED_MODULE_1__.Redis.fromEnv(),\n        limiter: _upstash_ratelimit__WEBPACK_IMPORTED_MODULE_0__.Ratelimit.slidingWindow(nRequests, dur),\n        analytics: true,\n        ephemeralCache,\n        prefix: \"@upstash/ratelimit/\" + envVar\n    });\n    const result = await ratelimit.limit(clientIdentifier);\n    // Throw the rate limit error if the request is not allowed\n    if (!result.success) {\n        throw trpcRatelimitError;\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvY29tbW9uL3JhdGVsaW1pdGluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBK0M7QUFDUjtBQUNFO0FBS2xDLE1BQU1HLHFCQUFxQixJQUFJRCxtREFBU0EsQ0FBQztJQUM1Q0UsTUFBTTtJQUNOQyxTQUFTO0FBQ2IsR0FBRztBQUVILHFCQUFxQjtBQUNyQixNQUFNQyxpQkFBaUIsSUFBSUM7QUFFM0I7Ozs7Ozs7Ozs7O0NBV0MsR0FDTSxNQUFNQyxvQkFBb0IsT0FDN0JDLGtCQUNBQyxRQUNBQyxRQUNBQztJQUVBRixTQUFTQSxPQUFPRyxXQUFXO0lBQzNCLE1BQU1DLGVBQWUsZUFBZUo7SUFFcEMsSUFBSUssWUFBWUo7SUFDaEIsSUFBSUssTUFBTUo7SUFFViwrQ0FBK0M7SUFDL0MsTUFBTUssZUFBZUMsUUFBUUMsR0FBRyxDQUFDTCxlQUFlLFVBQVU7SUFDMUQsSUFBSUcsZ0JBQWdCLFFBQVFBLGFBQWFHLFdBQVcsT0FBTyxTQUFTO1FBQ2hFLE9BQU87SUFDWDtJQUVBLHdFQUF3RTtJQUN4RSxNQUFNQyxlQUFlSCxRQUFRQyxHQUFHLENBQUNMLGVBQWUsY0FBYztJQUM5RCxJQUFJTyxnQkFBZ0IsTUFBTTtRQUN0Qk4sWUFBWU8sU0FBU0Q7SUFDekI7SUFFQSw4REFBOEQ7SUFDOUQsTUFBTUUsY0FBY0wsUUFBUUMsR0FBRyxDQUFDTCxlQUFlLFlBQVk7SUFDM0QsSUFBSVMsZUFBZSxNQUFNO1FBQ3JCUCxNQUFNTztJQUNWO0lBRUEsTUFBTUMsWUFBdUIsSUFBSXhCLHlEQUFTQSxDQUFDO1FBQ3ZDeUIsT0FBT3hCLGlEQUFLQSxDQUFDeUIsT0FBTztRQUNwQkMsU0FBUzNCLHlEQUFTQSxDQUFDNEIsYUFBYSxDQUFDYixXQUFXQztRQUM1Q2EsV0FBVztRQUNYdkI7UUFDQXdCLFFBQVEsd0JBQXdCcEI7SUFDcEM7SUFFQSxNQUFNcUIsU0FBUyxNQUFNUCxVQUFVUSxLQUFLLENBQUN2QjtJQUVyQywyREFBMkQ7SUFDM0QsSUFBSSxDQUFDc0IsT0FBT0UsT0FBTyxFQUFFO1FBQ2pCLE1BQU05QjtJQUNWO0FBQ0osRUFBRSIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NlcnZlci9jb21tb24vcmF0ZWxpbWl0aW5nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJhdGVsaW1pdCB9IGZyb20gXCJAdXBzdGFzaC9yYXRlbGltaXRcIjtcbmltcG9ydCB7IFJlZGlzIH0gZnJvbSBcIkB1cHN0YXNoL3JlZGlzXCI7XG5pbXBvcnQgeyBUUlBDRXJyb3IgfSBmcm9tIFwiQHRycGMvc2VydmVyXCI7XG5cbnR5cGUgVW5pdCA9IFwibXNcIiB8IFwic1wiIHwgXCJtXCIgfCBcImhcIiB8IFwiZFwiO1xudHlwZSBEdXJhdGlvbiA9IGAke251bWJlcn0gJHtVbml0fWAgfCBgJHtudW1iZXJ9JHtVbml0fWA7XG5cbmV4cG9ydCBjb25zdCB0cnBjUmF0ZWxpbWl0RXJyb3IgPSBuZXcgVFJQQ0Vycm9yKHtcbiAgICBjb2RlOiBcIlBSRUNPTkRJVElPTl9GQUlMRURcIixcbiAgICBtZXNzYWdlOiBcIlRvbyBtYW55IHJlcXVlc3RzLlwiLFxufSk7XG5cbi8vIEVtcGhlbWVyYWwgc3RvcmFnZVxuY29uc3QgZXBoZW1lcmFsQ2FjaGUgPSBuZXcgTWFwKCk7XG5cbi8qKlxuICogQSBnZW5lcmljIHJhdGVsaW1pdCBjaGVja2VyIHRoYXQgY2FuIG1ha2UgdXNlIG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCB2YWx1ZXMuXG4gKiBBbGwgb2YgdGhlIHJhdGVsaW1pdHMgYXJlIGRpc2FibGVkIGJ5IGRlZmF1bHQuXG4gKiBAbm90ZSBUbyBlbmFibGUgYSByYXRlbGltaXQsIHNldCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYFJBVEVMSU1JVF97ZW52VmFyfV9FTkFCTEVgIHRvIGB0cnVlYC5cbiAqIEBub3RlIFRvIG92ZXJyaWRlIHRoZSBudW1iZXIgb2YgcmVxdWVzdHMsIHNldCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYFJBVEVMSU1JVF97ZW52VmFyfV9OX1JFUVVFU1RTYCB0byB0aGUgZGVzaXJlZCBudW1iZXIuXG4gKiBAbm90ZSBUbyBvdmVycmlkZSB0aGUgZHVyYXRpb24sIHNldCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYFJBVEVMSU1JVF97ZW52VmFyfV9EVVJBVElPTmAgdG8gdGhlIGRlc2lyZWQgZHVyYXRpb24uXG4gKiBAcGFyYW0gY2xpZW50SWRlbnRpZmllciBUaGUgY2xpZW50IGlkZW50aWZpZXJcbiAqIEBwYXJhbSBlbnZWYXIgRW52aXJvbm1lbnQgdmFyaWFibGUgb3ZlcnJpZGUgbmFtZVxuICogQHBhcmFtIHRva2VucyBOdW1iZXIgb2YgdG9rZW5zIGluIGEgZHVyYXRpb25cbiAqIEBwYXJhbSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gZHVyaW5nIHdoaWNoIHdlIGxpbWl0IHRoZSBudW1iZXIgb2YgcmVxdWVzdHNcbiAqIEB0aHJvd3Mge1RSUENFcnJvcn0gSWYgdGhlIHJlcXVlc3QgaXMgbm90IGFsbG93ZWRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrUmF0ZWxpbWl0dGVyID0gYXN5bmMgKFxuICAgIGNsaWVudElkZW50aWZpZXI6IHN0cmluZyxcbiAgICBlbnZWYXI6IHN0cmluZyxcbiAgICB0b2tlbnM6IG51bWJlcixcbiAgICBkdXJhdGlvbjogRHVyYXRpb24sXG4pID0+IHtcbiAgICBlbnZWYXIgPSBlbnZWYXIudG9VcHBlckNhc2UoKTtcbiAgICBjb25zdCBlbnZWYXJQcmVmaXggPSBcIlJBVEVMSU1JVF9cIiArIGVudlZhcjtcblxuICAgIGxldCBuUmVxdWVzdHMgPSB0b2tlbnM7XG4gICAgbGV0IGR1ciA9IGR1cmF0aW9uO1xuXG4gICAgLy8gSWYgdGhlIHJhdGVsaW1pdCBpcyBub3QgZW5hYmxlZCwgcmV0dXJuIHRydWVcbiAgICBjb25zdCBlbnZWYXJFbmFibGUgPSBwcm9jZXNzLmVudltlbnZWYXJQcmVmaXggKyBcIl9FTkFCTEVcIl07XG4gICAgaWYgKGVudlZhckVuYWJsZSA9PSBudWxsIHx8IGVudlZhckVuYWJsZS50b0xvd2VyQ2FzZSgpID09PSBcImZhbHNlXCIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gUGFyc2UgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIGZvciB0aGUgbnVtYmVyIG9mIHJlcXVlc3RzIGlmIGl0IGV4aXN0XG4gICAgY29uc3QgblJlcXVlc3RzRW52ID0gcHJvY2Vzcy5lbnZbZW52VmFyUHJlZml4ICsgXCJfTl9SRVFVRVNUU1wiXTtcbiAgICBpZiAoblJlcXVlc3RzRW52ICE9IG51bGwpIHtcbiAgICAgICAgblJlcXVlc3RzID0gcGFyc2VJbnQoblJlcXVlc3RzRW52KTtcbiAgICB9XG5cbiAgICAvLyBQYXJzZSB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgZm9yIHRoZSBkdXJhdGlvbiBpZiBpdCBleGlzdFxuICAgIGNvbnN0IGR1cmF0aW9uRW52ID0gcHJvY2Vzcy5lbnZbZW52VmFyUHJlZml4ICsgXCJfRFVSQVRJT05cIl07XG4gICAgaWYgKGR1cmF0aW9uRW52ICE9IG51bGwpIHtcbiAgICAgICAgZHVyID0gZHVyYXRpb25FbnYgYXMgRHVyYXRpb247XG4gICAgfVxuXG4gICAgY29uc3QgcmF0ZWxpbWl0OiBSYXRlbGltaXQgPSBuZXcgUmF0ZWxpbWl0KHtcbiAgICAgICAgcmVkaXM6IFJlZGlzLmZyb21FbnYoKSxcbiAgICAgICAgbGltaXRlcjogUmF0ZWxpbWl0LnNsaWRpbmdXaW5kb3coblJlcXVlc3RzLCBkdXIpLFxuICAgICAgICBhbmFseXRpY3M6IHRydWUsXG4gICAgICAgIGVwaGVtZXJhbENhY2hlLFxuICAgICAgICBwcmVmaXg6IFwiQHVwc3Rhc2gvcmF0ZWxpbWl0L1wiICsgZW52VmFyLFxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmF0ZWxpbWl0LmxpbWl0KGNsaWVudElkZW50aWZpZXIpO1xuXG4gICAgLy8gVGhyb3cgdGhlIHJhdGUgbGltaXQgZXJyb3IgaWYgdGhlIHJlcXVlc3QgaXMgbm90IGFsbG93ZWRcbiAgICBpZiAoIXJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgIHRocm93IHRycGNSYXRlbGltaXRFcnJvcjtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbIlJhdGVsaW1pdCIsIlJlZGlzIiwiVFJQQ0Vycm9yIiwidHJwY1JhdGVsaW1pdEVycm9yIiwiY29kZSIsIm1lc3NhZ2UiLCJlcGhlbWVyYWxDYWNoZSIsIk1hcCIsImNoZWNrUmF0ZWxpbWl0dGVyIiwiY2xpZW50SWRlbnRpZmllciIsImVudlZhciIsInRva2VucyIsImR1cmF0aW9uIiwidG9VcHBlckNhc2UiLCJlbnZWYXJQcmVmaXgiLCJuUmVxdWVzdHMiLCJkdXIiLCJlbnZWYXJFbmFibGUiLCJwcm9jZXNzIiwiZW52IiwidG9Mb3dlckNhc2UiLCJuUmVxdWVzdHNFbnYiLCJwYXJzZUludCIsImR1cmF0aW9uRW52IiwicmF0ZWxpbWl0IiwicmVkaXMiLCJmcm9tRW52IiwibGltaXRlciIsInNsaWRpbmdXaW5kb3ciLCJhbmFseXRpY3MiLCJwcmVmaXgiLCJyZXN1bHQiLCJsaW1pdCIsInN1Y2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./src/server/common/ratelimiting.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/common/request-header-probe.ts":
/*!***************************************************!*\
  !*** ./src/server/common/request-header-probe.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiKeyFromHeaders: () => (/* binding */ apiKeyFromHeaders),\n/* harmony export */   ipFromHeaders: () => (/* binding */ ipFromHeaders)\n/* harmony export */ });\nconst ipFromHeaders = (headers)=>{\n    // Check if the \"Cf-Connecting-IP\" header is present, and if so, return it. Otherwise, return the \"x-forwarded-for\" header.\n    if (headers?.[\"cf-connecting-ip\"]) {\n        return headers[\"cf-connecting-ip\"];\n    } else if (headers?.[\"x-forwarded-for\"]) {\n        const ip = headers[\"x-forwarded-for\"];\n        // NOTE: This is a bit meh, but there should always be at least one element in the array.\n        // If there isn't, we return a dummy IP address (127.0.0.2) that is different from the default case (127.0.0.1)\n        return ip.split(/, /)[0] ?? \"127.0.0.2\";\n    } else {\n        return \"127.0.0.1\";\n    }\n};\nconst apiKeyFromHeaders = (headers)=>{\n    if (headers?.authorization) {\n        const authHeader = headers.authorization;\n        if (authHeader?.length) {\n            return authHeader;\n        }\n    }\n    return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvY29tbW9uL3JlcXVlc3QtaGVhZGVyLXByb2JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sTUFBTUEsZ0JBQWdCLENBQUNDO0lBQzFCLDJIQUEySDtJQUMzSCxJQUFJQSxTQUFTLENBQUMsbUJBQW1CLEVBQUU7UUFDL0IsT0FBT0EsT0FBTyxDQUFDLG1CQUFtQjtJQUN0QyxPQUFPLElBQUlBLFNBQVMsQ0FBQyxrQkFBa0IsRUFBRTtRQUNyQyxNQUFNQyxLQUFLRCxPQUFPLENBQUMsa0JBQWtCO1FBRXJDLHlGQUF5RjtRQUN6RiwrR0FBK0c7UUFDL0csT0FBT0MsR0FBR0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUk7SUFDaEMsT0FBTztRQUNILE9BQU87SUFDWDtBQUNKLEVBQUU7QUFFSyxNQUFNQyxvQkFBb0IsQ0FDN0JIO0lBRUEsSUFBSUEsU0FBU0ksZUFBZTtRQUN4QixNQUFNQyxhQUFxQkwsUUFBUUksYUFBYTtRQUVoRCxJQUFJQyxZQUFZQyxRQUFRO1lBQ3BCLE9BQU9EO1FBQ1g7SUFDSjtJQUVBLE9BQU87QUFDWCxFQUFFIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvc2VydmVyL2NvbW1vbi9yZXF1ZXN0LWhlYWRlci1wcm9iZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNvbWluZ0h0dHBIZWFkZXJzIH0gZnJvbSBcImh0dHBcIjtcblxuZXhwb3J0IGNvbnN0IGlwRnJvbUhlYWRlcnMgPSAoaGVhZGVyczogSW5jb21pbmdIdHRwSGVhZGVycyk6IHN0cmluZyA9PiB7XG4gICAgLy8gQ2hlY2sgaWYgdGhlIFwiQ2YtQ29ubmVjdGluZy1JUFwiIGhlYWRlciBpcyBwcmVzZW50LCBhbmQgaWYgc28sIHJldHVybiBpdC4gT3RoZXJ3aXNlLCByZXR1cm4gdGhlIFwieC1mb3J3YXJkZWQtZm9yXCIgaGVhZGVyLlxuICAgIGlmIChoZWFkZXJzPy5bXCJjZi1jb25uZWN0aW5nLWlwXCJdKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzW1wiY2YtY29ubmVjdGluZy1pcFwiXSBhcyBzdHJpbmc7XG4gICAgfSBlbHNlIGlmIChoZWFkZXJzPy5bXCJ4LWZvcndhcmRlZC1mb3JcIl0pIHtcbiAgICAgICAgY29uc3QgaXAgPSBoZWFkZXJzW1wieC1mb3J3YXJkZWQtZm9yXCJdIGFzIHN0cmluZztcblxuICAgICAgICAvLyBOT1RFOiBUaGlzIGlzIGEgYml0IG1laCwgYnV0IHRoZXJlIHNob3VsZCBhbHdheXMgYmUgYXQgbGVhc3Qgb25lIGVsZW1lbnQgaW4gdGhlIGFycmF5LlxuICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCwgd2UgcmV0dXJuIGEgZHVtbXkgSVAgYWRkcmVzcyAoMTI3LjAuMC4yKSB0aGF0IGlzIGRpZmZlcmVudCBmcm9tIHRoZSBkZWZhdWx0IGNhc2UgKDEyNy4wLjAuMSlcbiAgICAgICAgcmV0dXJuIGlwLnNwbGl0KC8sIC8pWzBdID8/IFwiMTI3LjAuMC4yXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiMTI3LjAuMC4xXCI7XG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGFwaUtleUZyb21IZWFkZXJzID0gKFxuICAgIGhlYWRlcnM6IEluY29taW5nSHR0cEhlYWRlcnMsXG4pOiBzdHJpbmcgfCBudWxsID0+IHtcbiAgICBpZiAoaGVhZGVycz8uYXV0aG9yaXphdGlvbikge1xuICAgICAgICBjb25zdCBhdXRoSGVhZGVyOiBzdHJpbmcgPSBoZWFkZXJzLmF1dGhvcml6YXRpb247XG5cbiAgICAgICAgaWYgKGF1dGhIZWFkZXI/Lmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGF1dGhIZWFkZXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbn07XG4iXSwibmFtZXMiOlsiaXBGcm9tSGVhZGVycyIsImhlYWRlcnMiLCJpcCIsInNwbGl0IiwiYXBpS2V5RnJvbUhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiYXV0aEhlYWRlciIsImxlbmd0aCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/server/common/request-header-probe.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/db/client.ts":
/*!*********************************!*\
  !*** ./src/server/db/client.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _env_server_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../env/server.mjs */ \"(api-node)/./src/env/server.mjs\");\n/* harmony import */ var _utils_subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/subscription */ \"(api-node)/./src/server/utils/subscription.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_env_server_mjs__WEBPACK_IMPORTED_MODULE_1__, _utils_subscription__WEBPACK_IMPORTED_MODULE_2__]);\n([_env_server_mjs__WEBPACK_IMPORTED_MODULE_1__, _utils_subscription__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/server/db/client.ts\n\n\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: _env_server_mjs__WEBPACK_IMPORTED_MODULE_1__.env.NODE_ENV === \"development\" ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : [\n        \"error\"\n    ]\n});\nif (_env_server_mjs__WEBPACK_IMPORTED_MODULE_1__.env.NODE_ENV !== \"production\") {\n    global.prisma = prisma;\n}\n(0,_utils_subscription__WEBPACK_IMPORTED_MODULE_2__.initProductConfiguration)(prisma);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvZGIvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsMEJBQTBCO0FBQ29CO0FBQ0g7QUFDc0I7QUFPMUQsTUFBTUcsU0FDVEMsT0FBT0QsTUFBTSxJQUNiLElBQUlILHdEQUFZQSxDQUFDO0lBQ2JLLEtBQ0lKLGdEQUFHQSxDQUFDSyxRQUFRLEtBQUssZ0JBQ1g7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUMxQjtRQUFDO0tBQVE7QUFDdkIsR0FBRztBQUVQLElBQUlMLGdEQUFHQSxDQUFDSyxRQUFRLEtBQUssY0FBYztJQUMvQkYsT0FBT0QsTUFBTSxHQUFHQTtBQUNwQjtBQUVBRCw2RUFBd0JBLENBQUNDIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvc2VydmVyL2RiL2NsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2VydmVyL2RiL2NsaWVudC50c1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi4vLi4vZW52L3NlcnZlci5tanNcIjtcbmltcG9ydCB7IGluaXRQcm9kdWN0Q29uZmlndXJhdGlvbiB9IGZyb20gXCIuLi91dGlscy9zdWJzY3JpcHRpb25cIjtcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby12YXJcbiAgICB2YXIgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPVxuICAgIGdsb2JhbC5wcmlzbWEgfHxcbiAgICBuZXcgUHJpc21hQ2xpZW50KHtcbiAgICAgICAgbG9nOlxuICAgICAgICAgICAgZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCJcbiAgICAgICAgICAgICAgICA/IFtcInF1ZXJ5XCIsIFwiZXJyb3JcIiwgXCJ3YXJuXCJdXG4gICAgICAgICAgICAgICAgOiBbXCJlcnJvclwiXSxcbiAgICB9KTtcblxuaWYgKGVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBnbG9iYWwucHJpc21hID0gcHJpc21hO1xufVxuXG5pbml0UHJvZHVjdENvbmZpZ3VyYXRpb24ocHJpc21hKTtcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJlbnYiLCJpbml0UHJvZHVjdENvbmZpZ3VyYXRpb24iLCJwcmlzbWEiLCJnbG9iYWwiLCJsb2ciLCJOT0RFX0VOViJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/server/db/client.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/context.ts":
/*!************************************!*\
  !*** ./src/server/trpc/context.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: () => (/* binding */ createContext)\n/* harmony export */ });\n/* harmony import */ var _common_request_header_probe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/request-header-probe */ \"(api-node)/./src/server/common/request-header-probe.ts\");\n/* harmony import */ var _db_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db/client */ \"(api-node)/./src/server/db/client.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_db_client__WEBPACK_IMPORTED_MODULE_1__]);\n_db_client__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// src/server/router/context.ts\n\n\n/** Use this helper for:\n * - testing, where we don't have to Mock Next.js' req/res\n * - trpc's `createSSGHelpers` where we don't have req/res\n **/ // export const createContextInner = async (opts: CreateContextOptions) => {\n//     return {\n//         session: opts.session,\n//         request: opts.req,\n//         userIP: opts.userIP,\n//         prisma,\n//     };\n// };\n/**\n * This is the actual context you'll use in your router\n * @link https://trpc.io/docs/context\n **/ const createContext = async (opts)=>{\n    const { req } = opts;\n    const context = {\n        req,\n        prisma: _db_client__WEBPACK_IMPORTED_MODULE_1__.prisma,\n        userIP: (0,_common_request_header_probe__WEBPACK_IMPORTED_MODULE_0__.ipFromHeaders)(req.headers),\n        apiKey: (0,_common_request_header_probe__WEBPACK_IMPORTED_MODULE_0__.apiKeyFromHeaders)(req.headers),\n        apiKeyID: null,\n        apiKeyHash: null,\n        rootAPIKey: false,\n        user: null\n    };\n    return context;\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdHJwYy9jb250ZXh0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLCtCQUErQjtBQU9TO0FBQ0Y7QUFtQnRDOzs7RUFHRSxHQUNGLDRFQUE0RTtBQUM1RSxlQUFlO0FBQ2YsaUNBQWlDO0FBQ2pDLDZCQUE2QjtBQUM3QiwrQkFBK0I7QUFDL0Isa0JBQWtCO0FBQ2xCLFNBQVM7QUFDVCxLQUFLO0FBRUw7OztFQUdFLEdBQ0ssTUFBTUcsZ0JBQWdCLE9BQ3pCQztJQUVBLE1BQU0sRUFBRUMsR0FBRyxFQUFFLEdBQUdEO0lBRWhCLE1BQU1FLFVBQWdDO1FBQ2xDRDtRQUNBSCxNQUFNQSxnREFBQUE7UUFDTkssUUFBUU4sMkVBQWFBLENBQUNJLElBQUlHLE9BQU87UUFDakNDLFFBQVFULCtFQUFpQkEsQ0FBQ0ssSUFBSUcsT0FBTztRQUNyQ0UsVUFBVTtRQUNWQyxZQUFZO1FBQ1pDLFlBQVk7UUFDWkMsTUFBTTtJQUNWO0lBRUEsT0FBT1A7QUFDWCxFQUFFIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvc2VydmVyL3RycGMvY29udGV4dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2VydmVyL3JvdXRlci9jb250ZXh0LnRzXG5pbXBvcnQgKiBhcyB0cnBjIGZyb20gXCJAdHJwYy9zZXJ2ZXJcIjtcbmltcG9ydCAqIGFzIHRycGNOZXh0IGZyb20gXCJAdHJwYy9zZXJ2ZXIvYWRhcHRlcnMvbmV4dFwiO1xuaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IHtcbiAgICBhcGlLZXlGcm9tSGVhZGVycyxcbiAgICBpcEZyb21IZWFkZXJzLFxufSBmcm9tIFwiLi4vY29tbW9uL3JlcXVlc3QtaGVhZGVyLXByb2JlXCI7XG5pbXBvcnQgeyBwcmlzbWEgfSBmcm9tIFwiLi4vZGIvY2xpZW50XCI7XG5cbnR5cGUgVXNlciA9IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIC8vIE5PVEU6IFRoaXMgb2JqZWN0IGlzIHN0dWZmZWQgd2l0aCB1c2VyIGRhdGEgZnJvbSB0aGUgREIgaW4gdGhlIFRSUEMgbWlkZGxld2FyZVxufTtcblxudHlwZSBDcmVhdGVDb250ZXh0T3B0aW9ucyA9IHtcbiAgICByZXE6IE5leHRBcGlSZXF1ZXN0O1xuICAgIHByaXNtYTogdHlwZW9mIHByaXNtYTtcblxuICAgIHVzZXJJUDogc3RyaW5nO1xuICAgIGFwaUtleTogc3RyaW5nIHwgbnVsbDtcbiAgICBhcGlLZXlJRDogc3RyaW5nIHwgbnVsbDtcbiAgICBhcGlLZXlIYXNoOiBzdHJpbmcgfCBudWxsO1xuICAgIHJvb3RBUElLZXk6IGJvb2xlYW47XG4gICAgdXNlcjogVXNlciB8IG51bGw7XG59O1xuXG4vKiogVXNlIHRoaXMgaGVscGVyIGZvcjpcbiAqIC0gdGVzdGluZywgd2hlcmUgd2UgZG9uJ3QgaGF2ZSB0byBNb2NrIE5leHQuanMnIHJlcS9yZXNcbiAqIC0gdHJwYydzIGBjcmVhdGVTU0dIZWxwZXJzYCB3aGVyZSB3ZSBkb24ndCBoYXZlIHJlcS9yZXNcbiAqKi9cbi8vIGV4cG9ydCBjb25zdCBjcmVhdGVDb250ZXh0SW5uZXIgPSBhc3luYyAob3B0czogQ3JlYXRlQ29udGV4dE9wdGlvbnMpID0+IHtcbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBzZXNzaW9uOiBvcHRzLnNlc3Npb24sXG4vLyAgICAgICAgIHJlcXVlc3Q6IG9wdHMucmVxLFxuLy8gICAgICAgICB1c2VySVA6IG9wdHMudXNlcklQLFxuLy8gICAgICAgICBwcmlzbWEsXG4vLyAgICAgfTtcbi8vIH07XG5cbi8qKlxuICogVGhpcyBpcyB0aGUgYWN0dWFsIGNvbnRleHQgeW91J2xsIHVzZSBpbiB5b3VyIHJvdXRlclxuICogQGxpbmsgaHR0cHM6Ly90cnBjLmlvL2RvY3MvY29udGV4dFxuICoqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUNvbnRleHQgPSBhc3luYyAoXG4gICAgb3B0czogdHJwY05leHQuQ3JlYXRlTmV4dENvbnRleHRPcHRpb25zLFxuKSA9PiB7XG4gICAgY29uc3QgeyByZXEgfSA9IG9wdHM7XG5cbiAgICBjb25zdCBjb250ZXh0OiBDcmVhdGVDb250ZXh0T3B0aW9ucyA9IHtcbiAgICAgICAgcmVxLFxuICAgICAgICBwcmlzbWEsXG4gICAgICAgIHVzZXJJUDogaXBGcm9tSGVhZGVycyhyZXEuaGVhZGVycyksXG4gICAgICAgIGFwaUtleTogYXBpS2V5RnJvbUhlYWRlcnMocmVxLmhlYWRlcnMpLFxuICAgICAgICBhcGlLZXlJRDogbnVsbCxcbiAgICAgICAgYXBpS2V5SGFzaDogbnVsbCxcbiAgICAgICAgcm9vdEFQSUtleTogZmFsc2UsXG4gICAgICAgIHVzZXI6IG51bGwsXG4gICAgfTtcblxuICAgIHJldHVybiBjb250ZXh0O1xufTtcblxuZXhwb3J0IHR5cGUgQ29udGV4dCA9IHRycGMuaW5mZXJBc3luY1JldHVyblR5cGU8dHlwZW9mIGNyZWF0ZUNvbnRleHQ+O1xuIl0sIm5hbWVzIjpbImFwaUtleUZyb21IZWFkZXJzIiwiaXBGcm9tSGVhZGVycyIsInByaXNtYSIsImNyZWF0ZUNvbnRleHQiLCJvcHRzIiwicmVxIiwiY29udGV4dCIsInVzZXJJUCIsImhlYWRlcnMiLCJhcGlLZXkiLCJhcGlLZXlJRCIsImFwaUtleUhhc2giLCJyb290QVBJS2V5IiwidXNlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/context.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/index.ts":
/*!**********************************!*\
  !*** ./src/server/trpc/index.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   versionedRouter: () => (/* binding */ versionedRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routes/v1/user.router */ \"(api-node)/./src/server/trpc/routes/v1/user.router.ts\");\n/* harmony import */ var _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./routes/v1/device.router */ \"(api-node)/./src/server/trpc/routes/v1/device.router.ts\");\n/* harmony import */ var _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./routes/v1/feedback.router */ \"(api-node)/./src/server/trpc/routes/v1/feedback.router.ts\");\n/* harmony import */ var _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routes/v1/feature-voting.router */ \"(api-node)/./src/server/trpc/routes/v1/feature-voting.router.ts\");\n/* harmony import */ var _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./routes/v1/payment.router */ \"(api-node)/./src/server/trpc/routes/v1/payment.router.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc__WEBPACK_IMPORTED_MODULE_0__, _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__, _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__, _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__, _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__, _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__]);\n([_trpc__WEBPACK_IMPORTED_MODULE_0__, _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__, _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__, _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__, _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__, _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/server/router/index.ts\n\n\n\n\n\n\nconst _versionedRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n    v1: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n        feedback: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n            notifyMe: _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__.feedbackRouterNotifyMe,\n            contact: _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__.feedbackRouterContact,\n            feedback: _routes_v1_feedback_router__WEBPACK_IMPORTED_MODULE_3__.feedbackRouterGiveFeedback\n        }),\n        user: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n            register: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterRegister,\n            recover: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterRecover,\n            generateRecoveryToken: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterGenerateRecoveryToken,\n            clearRecoveryToken: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterGenerateRecoveryToken,\n            configuration: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterConfiguration,\n            delete: _routes_v1_user_router__WEBPACK_IMPORTED_MODULE_1__.userRouterDelete\n        }),\n        device: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n            link: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterLink,\n            remove: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterRemove,\n            linked: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterLinked,\n            setRoot: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterSetRoot,\n            signalingAuth: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterSignalingAuth,\n            signalingAuthChannel: _routes_v1_device_router__WEBPACK_IMPORTED_MODULE_2__.deviceRouterSignalingAuthChannel\n        }),\n        featureVoting: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n            openRoundExists: _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__.featureVotingRouterOpenRoundExists,\n            rounds: _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__.featureVotingRouterGetRounds,\n            placeVote: _routes_v1_feature_voting_router__WEBPACK_IMPORTED_MODULE_4__.featureVotingRouterPlaceVote\n        }),\n        payment: (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.router)({\n            checkoutURL: _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__.paymentRouterGetCheckoutURL,\n            customerPortal: _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__.paymentRouterGetCustomerPortal,\n            subscription: _routes_v1_payment_router__WEBPACK_IMPORTED_MODULE_5__.paymentRouterGetSubscription\n        })\n    })\n});\nconst versionedRouter = _versionedRouter;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdHJwYy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQTZCO0FBQ0c7QUFPQztBQVFFO0FBS0U7QUFLTTtBQUtQO0FBRXBDLE1BQU1xQixtQkFBbUJyQiw2Q0FBTUEsQ0FBQztJQUM1QnNCLElBQUl0Qiw2Q0FBTUEsQ0FBQztRQUNQdUIsVUFBVXZCLDZDQUFNQSxDQUFDO1lBQ2J3QixVQUFVViw4RUFBc0JBO1lBQ2hDVyxTQUFTYiw2RUFBcUJBO1lBQzlCVyxVQUFVVixrRkFBMEJBO1FBQ3hDO1FBQ0FhLE1BQU0xQiw2Q0FBTUEsQ0FBQztZQUNUMkIsVUFBVXRCLHNFQUFrQkE7WUFDNUJ1QixTQUFTeEIscUVBQWlCQTtZQUMxQnlCLHVCQUF1QjNCLG1GQUErQkE7WUFDdEQ0QixvQkFBb0I1QixtRkFBK0JBO1lBQ25ENkIsZUFBZTVCLDJFQUF1QkE7WUFDdEM2QixRQUFRL0Isb0VBQWdCQTtRQUM1QjtRQUNBZ0MsUUFBUWpDLDZDQUFNQSxDQUFDO1lBQ1hrQyxNQUFNM0Isc0VBQWdCQTtZQUN0QjRCLFFBQVEzQix3RUFBa0JBO1lBQzFCNEIsUUFBUTlCLHdFQUFrQkE7WUFDMUIrQixTQUFTMUIseUVBQW1CQTtZQUM1QjJCLGVBQWU3QiwrRUFBeUJBO1lBQ3hDOEIsc0JBQXNCN0Isc0ZBQWdDQTtRQUMxRDtRQUNBOEIsZUFBZXhDLDZDQUFNQSxDQUFDO1lBQ2xCeUMsaUJBQWlCekIsZ0dBQWtDQTtZQUNuRDBCLFFBQVEzQiwwRkFBNEJBO1lBQ3BDNEIsV0FBVzFCLDBGQUE0QkE7UUFDM0M7UUFDQTJCLFNBQVM1Qyw2Q0FBTUEsQ0FBQztZQUNaNkMsYUFBYTNCLGtGQUEyQkE7WUFDeEM0QixnQkFBZ0IzQixxRkFBOEJBO1lBQzlDNEIsY0FBYzNCLG1GQUE0QkE7UUFDOUM7SUFDSjtBQUNKO0FBRU8sTUFBTTRCLGtCQUFrQjNCLGlCQUFpQiIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NlcnZlci90cnBjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zZXJ2ZXIvcm91dGVyL2luZGV4LnRzXG5pbXBvcnQgeyByb3V0ZXIgfSBmcm9tIFwiLi90cnBjXCI7XG5pbXBvcnQge1xuICAgIHVzZXJSb3V0ZXJEZWxldGUsXG4gICAgdXNlclJvdXRlckdlbmVyYXRlUmVjb3ZlcnlUb2tlbixcbiAgICB1c2VyUm91dGVyQ29uZmlndXJhdGlvbixcbiAgICB1c2VyUm91dGVyUmVjb3ZlcixcbiAgICB1c2VyUm91dGVyUmVnaXN0ZXIsXG59IGZyb20gXCIuL3JvdXRlcy92MS91c2VyLnJvdXRlclwiO1xuaW1wb3J0IHtcbiAgICBkZXZpY2VSb3V0ZXJMaW5rZWQsXG4gICAgZGV2aWNlUm91dGVyTGluayxcbiAgICBkZXZpY2VSb3V0ZXJSZW1vdmUsXG4gICAgZGV2aWNlUm91dGVyU2lnbmFsaW5nQXV0aCxcbiAgICBkZXZpY2VSb3V0ZXJTaWduYWxpbmdBdXRoQ2hhbm5lbCxcbiAgICBkZXZpY2VSb3V0ZXJTZXRSb290LFxufSBmcm9tIFwiLi9yb3V0ZXMvdjEvZGV2aWNlLnJvdXRlclwiO1xuaW1wb3J0IHtcbiAgICBmZWVkYmFja1JvdXRlckNvbnRhY3QsXG4gICAgZmVlZGJhY2tSb3V0ZXJHaXZlRmVlZGJhY2ssXG4gICAgZmVlZGJhY2tSb3V0ZXJOb3RpZnlNZSxcbn0gZnJvbSBcIi4vcm91dGVzL3YxL2ZlZWRiYWNrLnJvdXRlclwiO1xuaW1wb3J0IHtcbiAgICBmZWF0dXJlVm90aW5nUm91dGVyR2V0Um91bmRzLFxuICAgIGZlYXR1cmVWb3RpbmdSb3V0ZXJPcGVuUm91bmRFeGlzdHMsXG4gICAgZmVhdHVyZVZvdGluZ1JvdXRlclBsYWNlVm90ZSxcbn0gZnJvbSBcIi4vcm91dGVzL3YxL2ZlYXR1cmUtdm90aW5nLnJvdXRlclwiO1xuaW1wb3J0IHtcbiAgICBwYXltZW50Um91dGVyR2V0Q2hlY2tvdXRVUkwsXG4gICAgcGF5bWVudFJvdXRlckdldEN1c3RvbWVyUG9ydGFsLFxuICAgIHBheW1lbnRSb3V0ZXJHZXRTdWJzY3JpcHRpb24sXG59IGZyb20gXCIuL3JvdXRlcy92MS9wYXltZW50LnJvdXRlclwiO1xuXG5jb25zdCBfdmVyc2lvbmVkUm91dGVyID0gcm91dGVyKHtcbiAgICB2MTogcm91dGVyKHtcbiAgICAgICAgZmVlZGJhY2s6IHJvdXRlcih7XG4gICAgICAgICAgICBub3RpZnlNZTogZmVlZGJhY2tSb3V0ZXJOb3RpZnlNZSxcbiAgICAgICAgICAgIGNvbnRhY3Q6IGZlZWRiYWNrUm91dGVyQ29udGFjdCxcbiAgICAgICAgICAgIGZlZWRiYWNrOiBmZWVkYmFja1JvdXRlckdpdmVGZWVkYmFjayxcbiAgICAgICAgfSksXG4gICAgICAgIHVzZXI6IHJvdXRlcih7XG4gICAgICAgICAgICByZWdpc3RlcjogdXNlclJvdXRlclJlZ2lzdGVyLFxuICAgICAgICAgICAgcmVjb3ZlcjogdXNlclJvdXRlclJlY292ZXIsXG4gICAgICAgICAgICBnZW5lcmF0ZVJlY292ZXJ5VG9rZW46IHVzZXJSb3V0ZXJHZW5lcmF0ZVJlY292ZXJ5VG9rZW4sXG4gICAgICAgICAgICBjbGVhclJlY292ZXJ5VG9rZW46IHVzZXJSb3V0ZXJHZW5lcmF0ZVJlY292ZXJ5VG9rZW4sXG4gICAgICAgICAgICBjb25maWd1cmF0aW9uOiB1c2VyUm91dGVyQ29uZmlndXJhdGlvbixcbiAgICAgICAgICAgIGRlbGV0ZTogdXNlclJvdXRlckRlbGV0ZSxcbiAgICAgICAgfSksXG4gICAgICAgIGRldmljZTogcm91dGVyKHtcbiAgICAgICAgICAgIGxpbms6IGRldmljZVJvdXRlckxpbmssXG4gICAgICAgICAgICByZW1vdmU6IGRldmljZVJvdXRlclJlbW92ZSxcbiAgICAgICAgICAgIGxpbmtlZDogZGV2aWNlUm91dGVyTGlua2VkLFxuICAgICAgICAgICAgc2V0Um9vdDogZGV2aWNlUm91dGVyU2V0Um9vdCxcbiAgICAgICAgICAgIHNpZ25hbGluZ0F1dGg6IGRldmljZVJvdXRlclNpZ25hbGluZ0F1dGgsXG4gICAgICAgICAgICBzaWduYWxpbmdBdXRoQ2hhbm5lbDogZGV2aWNlUm91dGVyU2lnbmFsaW5nQXV0aENoYW5uZWwsXG4gICAgICAgIH0pLFxuICAgICAgICBmZWF0dXJlVm90aW5nOiByb3V0ZXIoe1xuICAgICAgICAgICAgb3BlblJvdW5kRXhpc3RzOiBmZWF0dXJlVm90aW5nUm91dGVyT3BlblJvdW5kRXhpc3RzLFxuICAgICAgICAgICAgcm91bmRzOiBmZWF0dXJlVm90aW5nUm91dGVyR2V0Um91bmRzLFxuICAgICAgICAgICAgcGxhY2VWb3RlOiBmZWF0dXJlVm90aW5nUm91dGVyUGxhY2VWb3RlLFxuICAgICAgICB9KSxcbiAgICAgICAgcGF5bWVudDogcm91dGVyKHtcbiAgICAgICAgICAgIGNoZWNrb3V0VVJMOiBwYXltZW50Um91dGVyR2V0Q2hlY2tvdXRVUkwsXG4gICAgICAgICAgICBjdXN0b21lclBvcnRhbDogcGF5bWVudFJvdXRlckdldEN1c3RvbWVyUG9ydGFsLFxuICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiBwYXltZW50Um91dGVyR2V0U3Vic2NyaXB0aW9uLFxuICAgICAgICB9KSxcbiAgICB9KSxcbn0pO1xuXG5leHBvcnQgY29uc3QgdmVyc2lvbmVkUm91dGVyID0gX3ZlcnNpb25lZFJvdXRlcjtcbmV4cG9ydCB0eXBlIFZlcnNpb25lZFJvdXRlciA9IHR5cGVvZiB2ZXJzaW9uZWRSb3V0ZXI7XG4iXSwibmFtZXMiOlsicm91dGVyIiwidXNlclJvdXRlckRlbGV0ZSIsInVzZXJSb3V0ZXJHZW5lcmF0ZVJlY292ZXJ5VG9rZW4iLCJ1c2VyUm91dGVyQ29uZmlndXJhdGlvbiIsInVzZXJSb3V0ZXJSZWNvdmVyIiwidXNlclJvdXRlclJlZ2lzdGVyIiwiZGV2aWNlUm91dGVyTGlua2VkIiwiZGV2aWNlUm91dGVyTGluayIsImRldmljZVJvdXRlclJlbW92ZSIsImRldmljZVJvdXRlclNpZ25hbGluZ0F1dGgiLCJkZXZpY2VSb3V0ZXJTaWduYWxpbmdBdXRoQ2hhbm5lbCIsImRldmljZVJvdXRlclNldFJvb3QiLCJmZWVkYmFja1JvdXRlckNvbnRhY3QiLCJmZWVkYmFja1JvdXRlckdpdmVGZWVkYmFjayIsImZlZWRiYWNrUm91dGVyTm90aWZ5TWUiLCJmZWF0dXJlVm90aW5nUm91dGVyR2V0Um91bmRzIiwiZmVhdHVyZVZvdGluZ1JvdXRlck9wZW5Sb3VuZEV4aXN0cyIsImZlYXR1cmVWb3RpbmdSb3V0ZXJQbGFjZVZvdGUiLCJwYXltZW50Um91dGVyR2V0Q2hlY2tvdXRVUkwiLCJwYXltZW50Um91dGVyR2V0Q3VzdG9tZXJQb3J0YWwiLCJwYXltZW50Um91dGVyR2V0U3Vic2NyaXB0aW9uIiwiX3ZlcnNpb25lZFJvdXRlciIsInYxIiwiZmVlZGJhY2siLCJub3RpZnlNZSIsImNvbnRhY3QiLCJ1c2VyIiwicmVnaXN0ZXIiLCJyZWNvdmVyIiwiZ2VuZXJhdGVSZWNvdmVyeVRva2VuIiwiY2xlYXJSZWNvdmVyeVRva2VuIiwiY29uZmlndXJhdGlvbiIsImRlbGV0ZSIsImRldmljZSIsImxpbmsiLCJyZW1vdmUiLCJsaW5rZWQiLCJzZXRSb290Iiwic2lnbmFsaW5nQXV0aCIsInNpZ25hbGluZ0F1dGhDaGFubmVsIiwiZmVhdHVyZVZvdGluZyIsIm9wZW5Sb3VuZEV4aXN0cyIsInJvdW5kcyIsInBsYWNlVm90ZSIsInBheW1lbnQiLCJjaGVja291dFVSTCIsImN1c3RvbWVyUG9ydGFsIiwic3Vic2NyaXB0aW9uIiwidmVyc2lvbmVkUm91dGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/index.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/routes/v1/device.router.ts":
/*!****************************************************!*\
  !*** ./src/server/trpc/routes/v1/device.router.ts ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deviceRouterLink: () => (/* binding */ deviceRouterLink),\n/* harmony export */   deviceRouterLinked: () => (/* binding */ deviceRouterLinked),\n/* harmony export */   deviceRouterRemove: () => (/* binding */ deviceRouterRemove),\n/* harmony export */   deviceRouterSetRoot: () => (/* binding */ deviceRouterSetRoot),\n/* harmony export */   deviceRouterSignalingAuth: () => (/* binding */ deviceRouterSignalingAuth),\n/* harmony export */   deviceRouterSignalingAuthChannel: () => (/* binding */ deviceRouterSignalingAuthChannel)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var pusher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pusher */ \"pusher\");\n/* harmony import */ var pusher__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(pusher__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../env/client.mjs */ \"(api-node)/./src/env/client.mjs\");\n/* harmony import */ var _env_server_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../env/server.mjs */ \"(api-node)/./src/env/server.mjs\");\n/* harmony import */ var _common_api_key_generation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/api-key-generation */ \"(api-node)/./src/server/common/api-key-generation.ts\");\n/* harmony import */ var _common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../common/ratelimiting */ \"(api-node)/./src/server/common/ratelimiting.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__, _trpc__WEBPACK_IMPORTED_MODULE_2__, _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__, _env_server_mjs__WEBPACK_IMPORTED_MODULE_5__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__, _trpc__WEBPACK_IMPORTED_MODULE_2__, _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__, _env_server_mjs__WEBPACK_IMPORTED_MODULE_5__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\nconst deviceRouterLink = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure// .input(z.object({ purpose: z.nativeEnum(APIKeyPurpose) }))\n.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    root: zod__WEBPACK_IMPORTED_MODULE_1__.z.boolean()\n})).output(zod__WEBPACK_IMPORTED_MODULE_1__.z.string()).mutation(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"DEVICE_LINK\", 2, \"1m\");\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can be used to link to other devices.\"\n        });\n    }\n    // Check if the user can link devices\n    if (!ctx.user.subscriptionConfig.linking_allowed) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Linking devices is not allowed.\"\n        });\n    }\n    // Check if the user has reached the maximum number of linked devices\n    const linkedDevices = await ctx.prisma.aPIKey.count({\n        where: {\n            user_id: ctx.user.id\n        }\n    }) - 1;\n    // Check the maximum number of links the user can have\n    // If the user's linked device count is greater than or equal to the maximum number of links, return an error\n    if (ctx.user.subscriptionConfig.max_links <= 0 || linkedDevices >= ctx.user.subscriptionConfig.max_links) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Maximum number of linked devices reached. Upgrade your subscription or unlink an existing device.\"\n        });\n    }\n    // Create a new API Key for the user\n    const apiKeyCompound = await (0,_common_api_key_generation__WEBPACK_IMPORTED_MODULE_6__.insertDefaultAPIKey)(ctx, ctx.user.id, false);\n    return apiKeyCompound;\n});\nconst deviceRouterRemove = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_1__.z.boolean()).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"DEVICE_REMOVE\", 3, \"5s\");\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can be used to remove linked devices.\"\n        });\n    }\n    // Check if the account (device) the user is trying to unlink isn't the last one\n    const linkedDevices = await ctx.prisma.aPIKey.count({\n        where: {\n            user_id: ctx.user.id\n        }\n    });\n    if (linkedDevices <= 1) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Cannot remove the only linked device.\"\n        });\n    }\n    try {\n        await ctx.prisma.aPIKey.delete({\n            where: {\n                id: input.id\n            }\n        });\n    } catch (e) {\n        // Failed to delete the device\n        console.debug(\"[device.router] Failed to delete API key.\", e);\n        return false;\n    }\n    return true;\n});\nconst deviceRouterLinked = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    createdAt: zod__WEBPACK_IMPORTED_MODULE_1__.z.date(),\n    purpose: zod__WEBPACK_IMPORTED_MODULE_1__.z.nativeEnum(_common_api_key_generation__WEBPACK_IMPORTED_MODULE_6__.APIKeyPurpose),\n    root: zod__WEBPACK_IMPORTED_MODULE_1__.z.boolean()\n}))).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"DEVICE_GET_LINKED\", 3, \"1s\");\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can be used to view linked devices.\"\n        });\n    }\n    const apiKeys = await ctx.prisma.aPIKey.findMany({\n        where: {\n            user_id: ctx.user.id\n        }\n    });\n    return [\n        ...apiKeys.map((apiKey)=>({\n                id: apiKey.id,\n                createdAt: apiKey.created_at,\n                purpose: apiKey.purpose,\n                root: apiKey.root\n            }))\n    ];\n});\nconst deviceRouterSetRoot = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    root: zod__WEBPACK_IMPORTED_MODULE_1__.z.boolean()\n})).mutation(async ({ ctx, input })=>{\n    // If the user can promote to Root, they can demote from Root\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"DEVICE_SET_ROOT\", 20, \"1m\");\n    if (!ctx.user.subscriptionConfig.promoting_to_root) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\",\n            message: \"You are not allowed to pro/demote devices to root.\"\n        });\n    }\n    // Check if the user is trying to demote the last Root device\n    const rootDevices = await ctx.prisma.aPIKey.count({\n        where: {\n            user_id: ctx.user.id,\n            root: true\n        }\n    });\n    if (rootDevices <= 1 && !input.root) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Cannot demote the only Root device.\"\n        });\n    }\n    // Update the device's root status\n    // NOTE: By using the user_id, we're making sure the user can only update their own devices\n    await ctx.prisma.aPIKey.update({\n        where: {\n            id: input.id,\n            user_id: ctx.user.id\n        },\n        data: {\n            root: input.root\n        }\n    });\n});\n//#region Pusher\nconst pusher = new (pusher__WEBPACK_IMPORTED_MODULE_3___default())({\n    appId: _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__.env.NEXT_PUBLIC_PUSHER_APP_ID,\n    key: _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__.env.NEXT_PUBLIC_PUSHER_APP_KEY,\n    secret: _env_server_mjs__WEBPACK_IMPORTED_MODULE_5__.env.PUSHER_APP_SECRET,\n    useTLS: _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__.env.NEXT_PUBLIC_PUSHER_APP_TLS,\n    host: _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__.env.NEXT_PUBLIC_PUSHER_APP_HOST,\n    port: _env_client_mjs__WEBPACK_IMPORTED_MODULE_4__.env.NEXT_PUBLIC_PUSHER_APP_PORT\n});\nconst deviceRouterSignalingAuth = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    socket_id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    channel_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    auth: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    user_data: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n})).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"PUSHER_SIGNALING_AUTH\", 5, \"30s\");\n    // If the user doesn't have a subscription, return an error\n    if (!ctx.user.subscriptionConfig.linking_allowed) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\",\n            message: \"Unauthorized\"\n        });\n    }\n    // Get the socket id and channel name from the request body\n    // const { socket_id, channel_name } = req.body;\n    console.warn(\"PUSHER AUTH-----\", input.socket_id, input.channel_name);\n    // Create the presence data\n    const userData = {\n        // user_id: session.user.id,\n        // user_info: {\n        id: ctx.user.id\n    };\n    // Authenticate the request\n    const auth = pusher.authenticateUser(input.socket_id, userData);\n    return auth;\n});\nconst deviceRouterSignalingAuthChannel = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    socket_id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    channel_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    auth: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    channel_data: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    shared_secret: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()\n})).query(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_7__.checkRatelimitter)(ctx.apiKeyHash, \"PUSHER_SIGNALING_AUTH_CHANNEL\", 5, \"30s\");\n    // Check if the user has a subscription that allows them to use the vault linking\n    // If the user doesn't have a subscription, return an error\n    if (!ctx.user.subscriptionConfig.linking_allowed) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\",\n            message: \"Unauthorized\"\n        });\n    }\n    // Get the socket id and channel name from the request body\n    // const { socket_id, channel_name } = req.body;\n    // console.warn(\"SESSION-----\", session);\n    // console.warn(\"PUSHER AUTH-----\", socket_id, channel_name);\n    // console.warn(\"PUSHER AUTH-----\", req.body);\n    // The prefix should be \"presence-\" or \"private-\"\n    // The label after that should be \"link\" or \"sync\"\n    if (!input.channel_name.startsWith(\"presence-link\") && !input.channel_name.startsWith(\"presence-sync\") && !input.channel_name.startsWith(\"private-link\") && !input.channel_name.startsWith(\"private-sync\")) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\",\n            message: \"Unauthorized\"\n        });\n    }\n    if (input.channel_name.startsWith(\"presence-sync\") || input.channel_name.startsWith(\"private-sync\")) {\n        // This is an example of a channel name: presence-sync-{senior_deviceID}_{junior_deviceID}\n        const extractedDeviceIDs = input.channel_name.split(\"-\").slice(2).join(\"-\").split(\"_\");\n        // Check if there are two device IDs (senior and junior) - valid channel name\n        if (extractedDeviceIDs.length !== 2) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"Unauthorized\"\n            });\n        }\n        // Check if any of these device IDs belong to the current device\n        const belongsToThisDevice = await ctx.prisma.aPIKey.count({\n            where: {\n                id: {\n                    in: extractedDeviceIDs\n                },\n                user_id: ctx.user.id,\n                key: ctx.apiKeyHash\n            }\n        });\n        // If none of the devices belong to the user, return an error\n        if (belongsToThisDevice === 0) {\n            console.error(\"[PUSHER] None of the devices belong to the user\", ctx.user.id, extractedDeviceIDs);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"Unauthorized\"\n            });\n        }\n        // Check if the rest of the devices belong to the user\n        const accounts = await ctx.prisma.aPIKey.findMany({\n            where: {\n                user_id: ctx.user.id,\n                id: {\n                    in: extractedDeviceIDs\n                }\n            }\n        });\n        // Both accounts should be found, otherwise return unauthorized\n        if (accounts.length !== 2) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"Unauthorized\"\n            });\n        }\n    } else {\n        // Regulate linking channels\n        // Remove the prefix that can be two words\n        const channelNameWithoutPrefix = input.channel_name.split(\"-\").slice(2).join(\"-\");\n        // Check if there is a UserID for that user in the Account table\n        const account = await ctx.prisma.aPIKey.count({\n            where: {\n                user_id: ctx.user.id,\n                id: channelNameWithoutPrefix\n            }\n        });\n        // If there is no account, return an error\n        if (!account) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"Unauthorized\"\n            });\n        }\n    }\n    // Create the presence data\n    const userData = {\n        user_id: ctx.apiKeyID,\n        user_info: {\n            id: ctx.apiKeyID\n        }\n    };\n    // Authenticate the request\n    const auth = pusher.authorizeChannel(input.socket_id, input.channel_name, userData);\n    // Send the response\n    return auth;\n}); //#endregion Pusher\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/routes/v1/device.router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/routes/v1/feature-voting.router.ts":
/*!************************************************************!*\
  !*** ./src/server/trpc/routes/v1/feature-voting.router.ts ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   featureVotingRouterGetRounds: () => (/* binding */ featureVotingRouterGetRounds),\n/* harmony export */   featureVotingRouterOpenRoundExists: () => (/* binding */ featureVotingRouterOpenRoundExists),\n/* harmony export */   featureVotingRouterPlaceVote: () => (/* binding */ featureVotingRouterPlaceVote)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/ratelimiting */ \"(api-node)/./src/server/common/ratelimiting.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc_server__WEBPACK_IMPORTED_MODULE_1__, _trpc__WEBPACK_IMPORTED_MODULE_2__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__]);\n([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc_server__WEBPACK_IMPORTED_MODULE_1__, _trpc__WEBPACK_IMPORTED_MODULE_2__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst featureVotingRouterOpenRoundExists = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.apiKeyHash, \"FEATURE_VOTING_OPEN_ROUND_EXISTS\", 1, \"1m\");\n    // Check the end date of the round and compare it to the current date\n    const openRound = await ctx.prisma.featureVotingRounds.findFirst({\n        where: {\n            start: {\n                lte: new Date()\n            },\n            end: {\n                gte: new Date()\n            },\n            visible: true\n        },\n        select: {\n            id: true\n        }\n    });\n    // Return a boolean result if an open round exists\n    return openRound ? true : false;\n});\nconst featureVotingRouterGetRounds = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    rounds: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        title: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n        start: zod__WEBPACK_IMPORTED_MODULE_0__.z.date(),\n        end: zod__WEBPACK_IMPORTED_MODULE_0__.z.date(),\n        items: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n            id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n            title: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n            description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n            votes: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n                id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n            })).optional()\n        })),\n        active: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional(),\n        // votes: z.number().optional(), // The number of votes this round has received (if the round is done / not active)\n        userCanVote: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional(),\n        votedId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n    })),\n    incorrectTier: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()\n})).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.apiKeyHash, \"FEATURE_VOTING_GET_ROUNDS\", 2, \"1m\");\n    // Return the latest two rounds\n    const rounds = await ctx.prisma.featureVotingRounds.findMany({\n        take: 2,\n        orderBy: {\n            start: \"desc\"\n        },\n        select: {\n            id: true,\n            title: true,\n            description: true,\n            start: true,\n            end: true,\n            items: {\n                select: {\n                    id: true,\n                    title: true,\n                    description: true\n                }\n            }\n        },\n        where: {\n            visible: true\n        }\n    });\n    // Get the items of the rounds we selected\n    const items = await ctx.prisma.featureVotingItems.findMany({\n        where: {\n            round_id: {\n                in: rounds.map((round)=>round.id)\n            }\n        },\n        select: {\n            id: true,\n            title: true,\n            description: true,\n            round_id: true,\n            votes: {\n                select: {\n                    id: true\n                }\n            }\n        }\n    });\n    // Get the users tier and tier configuration\n    const canUserVote = ctx.user.subscriptionConfig.feature_voting;\n    const votes = await ctx.prisma.featureVotingVotes.findMany({\n        where: {\n            round_id: {\n                in: rounds.map((round)=>round.id)\n            },\n            user_id: ctx.user.id\n        },\n        select: {\n            round_id: true,\n            item_id: true\n        }\n    });\n    // Implant a boolean value to indicate if the user can vote and if the round is active\n    rounds?.forEach((round)=>{\n        round.active = false;\n        round.items = items.filter((item)=>item.round_id === round.id);\n        round.userCanVote = false;\n        round.votedId = votes.find((vote)=>vote.round_id === round.id)?.item_id;\n        if (round.start <= new Date() && round.end >= new Date()) {\n            round.active = true;\n            // Check if they have voted in this round\n            if (canUserVote) {\n                round.userCanVote = !round.votedId;\n            }\n        }\n    });\n    return {\n        rounds: rounds,\n        incorrectTier: !canUserVote\n    };\n});\nconst featureVotingRouterPlaceVote = _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    roundId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    itemId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    success: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()\n})).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.apiKeyHash, \"FEATURE_VOTING_PLACE_VOTE\", 2, \"1m\");\n    // Check if the user has a tier that allows voting\n    const canUserVote = ctx.user.subscriptionConfig.feature_voting;\n    if (!canUserVote) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n            code: \"UNAUTHORIZED\",\n            message: \"Your tier does not allow voting. Please upgrade\"\n        });\n    }\n    // Check if the round is active and that the user can vote\n    const round = await ctx.prisma.featureVotingRounds.findFirst({\n        where: {\n            id: input.roundId,\n            start: {\n                lte: new Date()\n            },\n            end: {\n                gte: new Date()\n            },\n            visible: true\n        },\n        select: {\n            id: true\n        }\n    });\n    if (!round) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n            code: \"NOT_FOUND\",\n            message: \"Round not found\"\n        });\n    }\n    // Check if the user has already voted in this round\n    const vote = await ctx.prisma.featureVotingVotes.findFirst({\n        where: {\n            round_id: input.roundId,\n            user_id: ctx.user.id\n        },\n        select: {\n            id: true\n        }\n    });\n    if (vote) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"You have already voted in this round\"\n        });\n    }\n    // Check if the item exists\n    const item = await ctx.prisma.featureVotingItems.findFirst({\n        where: {\n            id: input.itemId,\n            round_id: input.roundId\n        },\n        select: {\n            id: true\n        }\n    });\n    if (!item) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n            code: \"NOT_FOUND\",\n            message: \"Item not found\"\n        });\n    }\n    // Create the vote\n    await ctx.prisma.featureVotingVotes.create({\n        data: {\n            round_id: input.roundId,\n            item_id: input.itemId,\n            user_id: ctx.user.id\n        }\n    });\n    return {\n        success: true\n    };\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdHJwYy9yb3V0ZXMvdjEvZmVhdHVyZS12b3Rpbmcucm91dGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0I7QUFDYTtBQUNXO0FBQ2lCO0FBRTFELE1BQU1JLHFDQUFxQ0YscURBQWtCQSxDQUMvREcsTUFBTSxDQUFDTCxrQ0FBQ0EsQ0FBQ00sT0FBTyxJQUNoQkMsS0FBSyxDQUFDLE9BQU8sRUFBRUMsR0FBRyxFQUFFO0lBQ2pCLE1BQU1MLHVFQUFpQkEsQ0FDbkJLLElBQUlDLFVBQVUsRUFDZCxvQ0FDQSxHQUNBO0lBR0oscUVBQXFFO0lBQ3JFLE1BQU1DLFlBQVksTUFBTUYsSUFBSUcsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQ0MsU0FBUyxDQUFDO1FBQzdEQyxPQUFPO1lBQ0hDLE9BQU87Z0JBQ0hDLEtBQUssSUFBSUM7WUFDYjtZQUNBQyxLQUFLO2dCQUNEQyxLQUFLLElBQUlGO1lBQ2I7WUFDQUcsU0FBUztRQUNiO1FBQ0FDLFFBQVE7WUFDSkMsSUFBSTtRQUNSO0lBQ0o7SUFFQSxrREFBa0Q7SUFDbEQsT0FBT1osWUFBWSxPQUFPO0FBQzlCLEdBQUc7QUFFQSxNQUFNYSwrQkFBK0JyQixxREFBa0JBLENBQ3pERyxNQUFNLENBQ0hMLGtDQUFDQSxDQUFDd0IsTUFBTSxDQUFDO0lBQ0xDLFFBQVF6QixrQ0FBQ0EsQ0FBQzBCLEtBQUssQ0FDWDFCLGtDQUFDQSxDQUFDd0IsTUFBTSxDQUFDO1FBQ0xGLElBQUl0QixrQ0FBQ0EsQ0FBQzJCLE1BQU07UUFDWkMsT0FBTzVCLGtDQUFDQSxDQUFDMkIsTUFBTTtRQUNmRSxhQUFhN0Isa0NBQUNBLENBQUMyQixNQUFNLEdBQUdHLFFBQVE7UUFDaENmLE9BQU9mLGtDQUFDQSxDQUFDK0IsSUFBSTtRQUNiYixLQUFLbEIsa0NBQUNBLENBQUMrQixJQUFJO1FBQ1hDLE9BQU9oQyxrQ0FBQ0EsQ0FBQzBCLEtBQUssQ0FDVjFCLGtDQUFDQSxDQUFDd0IsTUFBTSxD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QUFPLE1BQU1sRCxJQUFJRyxNQUFNLENBQUN3QyxrQkFBa0IsQ0FBQ3RDLFNBQVMsQ0FBQztRQUN2REMsT0FBTztZQUNINkIsVUFBVWlCLE1BQU1DLE9BQU87WUFDdkJULFNBQVM1QyxJQUFJd0MsSUFBSSxDQUFDMUIsRUFBRTtRQUN4QjtRQUNBRCxRQUFRO1lBQ0pDLElBQUk7UUFDUjtJQUNKO0lBRUEsSUFBSW9DLE1BQU07UUFDTixNQUFNLElBQUl6RCxtREFBYyxDQUFDO1lBQ3JCaUUsTUFBTTtZQUNOQyxTQUFTO1FBQ2I7SUFDSjtJQUVBLDJCQUEyQjtJQUMzQixNQUFNWCxPQUFPLE1BQU1oRCxJQUFJRyxNQUFNLENBQUMrQixrQkFBa0IsQ0FBQzdCLFNBQVMsQ0FBQztRQUN2REMsT0FBTztZQUNIUSxJQUFJc0MsTUFBTUUsTUFBTTtZQUNoQm5CLFVBQVVpQixNQUFNQyxPQUFPO1FBQzNCO1FBQ0F4QyxRQUFRO1lBQ0pDLElBQUk7UUFDUjtJQUNKO0lBRUEsSUFBSSxDQUFDa0MsTUFBTTtRQUNQLE1BQU0sSUFBSXZELG1EQUFjLENBQUM7WUFDckJpRSxNQUFNO1lBQ05DLFNBQVM7UUFDYjtJQUNKO0lBRUEsa0JBQWtCO0lBQ2xCLE1BQU0zRCxJQUFJRyxNQUFNLENBQUN3QyxrQkFBa0IsQ0FBQ2lCLE1BQU0sQ0FBQztRQUN2Q0MsTUFBTTtZQUNGMUIsVUFBVWlCLE1BQU1DLE9BQU87WUFDdkJSLFNBQVNPLE1BQU1FLE1BQU07WUFDckJWLFNBQVM1QyxJQUFJd0MsSUFBSSxDQUFDMUIsRUFBRTtRQUN4QjtJQUNKO0lBRUEsT0FBTztRQUNIeUMsU0FBUztJQUNiO0FBQ0osR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NlcnZlci90cnBjL3JvdXRlcy92MS9mZWF0dXJlLXZvdGluZy5yb3V0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcbmltcG9ydCAqIGFzIHRycGMgZnJvbSBcIkB0cnBjL3NlcnZlclwiO1xuaW1wb3J0IHsgcHJvdGVjdGVkUHJvY2VkdXJlIH0gZnJvbSBcIi4uLy4uL3RycGNcIjtcbmltcG9ydCB7IGNoZWNrUmF0ZWxpbWl0dGVyIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9yYXRlbGltaXRpbmdcIjtcblxuZXhwb3J0IGNvbnN0IGZlYXR1cmVWb3RpbmdSb3V0ZXJPcGVuUm91bmRFeGlzdHMgPSBwcm90ZWN0ZWRQcm9jZWR1cmVcbiAgICAub3V0cHV0KHouYm9vbGVhbigpKVxuICAgIC5xdWVyeShhc3luYyAoeyBjdHggfSkgPT4ge1xuICAgICAgICBhd2FpdCBjaGVja1JhdGVsaW1pdHRlcihcbiAgICAgICAgICAgIGN0eC5hcGlLZXlIYXNoLFxuICAgICAgICAgICAgXCJGRUFUVVJFX1ZPVElOR19PUEVOX1JPVU5EX0VYSVNUU1wiLFxuICAgICAgICAgICAgMSxcbiAgICAgICAgICAgIFwiMW1cIixcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBDaGVjayB0aGUgZW5kIGRhdGUgb2YgdGhlIHJvdW5kIGFuZCBjb21wYXJlIGl0IHRvIHRoZSBjdXJyZW50IGRhdGVcbiAgICAgICAgY29uc3Qgb3BlblJvdW5kID0gYXdhaXQgY3R4LnByaXNtYS5mZWF0dXJlVm90aW5nUm91bmRzLmZpbmRGaXJzdCh7XG4gICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgIHN0YXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgIGx0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVuZDoge1xuICAgICAgICAgICAgICAgICAgICBndGU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gUmV0dXJuIGEgYm9vbGVhbiByZXN1bHQgaWYgYW4gb3BlbiByb3VuZCBleGlzdHNcbiAgICAgICAgcmV0dXJuIG9wZW5Sb3VuZCA/IHRydWUgOiBmYWxzZTtcbiAgICB9KTtcblxuZXhwb3J0IGNvbnN0IGZlYXR1cmVWb3RpbmdSb3V0ZXJHZXRSb3VuZHMgPSBwcm90ZWN0ZWRQcm9jZWR1cmVcbiAgICAub3V0cHV0KFxuICAgICAgICB6Lm9iamVjdCh7XG4gICAgICAgICAgICByb3VuZHM6IHouYXJyYXkoXG4gICAgICAgICAgICAgICAgei5vYmplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBpZDogei5zdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHouc3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB6LnN0cmluZygpLm51bGxhYmxlKCksXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiB6LmRhdGUoKSxcbiAgICAgICAgICAgICAgICAgICAgZW5kOiB6LmRhdGUoKSxcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IHouYXJyYXkoXG4gICAgICAgICAgICAgICAgICAgICAgICB6Lm9iamVjdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHouc3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkubnVsbGFibGUoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b3RlczogelxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXJyYXkoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6Lm9iamVjdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAub3B0aW9uYWwoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IHouYm9vbGVhbigpLm9wdGlvbmFsKCksIC8vIElmIHRoZSByb3VuZCBpcyBhY3RpdmUgKGJldHdlZW4gc3RhcnQgYW5kIGVuZCBkYXRlKVxuICAgICAgICAgICAgICAgICAgICAvLyB2b3Rlczogei5udW1iZXIoKS5vcHRpb25hbCgpLCAvLyBUaGUgbnVtYmVyIG9mIHZvdGVzIHRoaXMgcm91bmQgaGFzIHJlY2VpdmVkIChpZiB0aGUgcm91bmQgaXMgZG9uZSAvIG5vdCBhY3RpdmUpXG4gICAgICAgICAgICAgICAgICAgIHVzZXJDYW5Wb3RlOiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLCAvLyBJZiB0aGUgdXNlciBjYW4gdm90ZSBpbiB0aGlzIHJvdW5kIChpZiB0aGUgcm91bmQgaXMgYWN0aXZlIGFuZCB0aGUgdXNlciBpcyBsb2dnZWQgaW4pXG4gICAgICAgICAgICAgICAgICAgIHZvdGVkSWQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gVGhlIGl0ZW0gSUQgdGhlIHVzZXIgaGFzIHZvdGVkIGZvciAoaWYgdGhlIHVzZXIgaGFzIHZvdGVkKVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGluY29ycmVjdFRpZXI6IHouYm9vbGVhbigpLCAvLyBJZiB0aGUgdXNlciBpcyBsb2dnZWQgaW4gYnV0IGhhcyBhIHRpZXIgdGhhdCBkb2VzIG5vdCBhbGxvdyB2b3RpbmdcbiAgICAgICAgfSksXG4gICAgKVxuICAgIC5xdWVyeShhc3luYyAoeyBjdHggfSkgPT4ge1xuICAgICAgICBhd2FpdCBjaGVja1JhdGVsaW1pdHRlcihcbiAgICAgICAgICAgIGN0eC5hcGlLZXlIYXNoLFxuICAgICAgICAgICAgXCJGRUFUVVJFX1ZPVElOR19HRVRfUk9VTkRTXCIsXG4gICAgICAgICAgICAyLFxuICAgICAgICAgICAgXCIxbVwiLFxuICAgICAgICApO1xuXG4gICAgICAgIC8vIFJldHVybiB0aGUgbGF0ZXN0IHR3byByb3VuZHNcbiAgICAgICAgY29uc3Qgcm91bmRzOiB7XG4gICAgICAgICAgICBpZDogc3RyaW5nO1xuICAgICAgICAgICAgdGl0bGU6IHN0cmluZztcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBzdHJpbmcgfCBudWxsO1xuICAgICAgICAgICAgc3RhcnQ6IERhdGU7XG4gICAgICAgICAgICBlbmQ6IERhdGU7XG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIGlkOiBzdHJpbmc7XG4gICAgICAgICAgICAgICAgdGl0bGU6IHN0cmluZztcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogc3RyaW5nIHwgbnVsbDtcbiAgICAgICAgICAgICAgICB2b3Rlcz86IHsgaWQ6IHN0cmluZyB9W107XG4gICAgICAgICAgICB9W107XG4gICAgICAgICAgICBhY3RpdmU/OiBib29sZWFuO1xuICAgICAgICAgICAgLy8gdm90ZXM/OiBudW1iZXI7XG4gICAgICAgICAgICB1c2VyQ2FuVm90ZT86IGJvb2xlYW47XG4gICAgICAgICAgICB2b3RlZElkPzogc3RyaW5nO1xuICAgICAgICB9W10gPSBhd2FpdCBjdHgucHJpc21hLmZlYXR1cmVWb3RpbmdSb3VuZHMuZmluZE1hbnkoe1xuICAgICAgICAgICAgdGFrZTogMixcbiAgICAgICAgICAgIG9yZGVyQnk6IHtcbiAgICAgICAgICAgICAgICBzdGFydDogXCJkZXNjXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHRydWUsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHRydWUsXG4gICAgICAgICAgICAgICAgc3RhcnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgZW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gR2V0IHRoZSBpdGVtcyBvZiB0aGUgcm91bmRzIHdlIHNlbGVjdGVkXG4gICAgICAgIGNvbnN0IGl0ZW1zID0gYXdhaXQgY3R4LnByaXNtYS5mZWF0dXJlVm90aW5nSXRlbXMuZmluZE1hbnkoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICByb3VuZF9pZDoge1xuICAgICAgICAgICAgICAgICAgICBpbjogcm91bmRzLm1hcCgocm91bmQpID0+IHJvdW5kLmlkKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgIHJvdW5kX2lkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHZvdGVzOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEdldCB0aGUgdXNlcnMgdGllciBhbmQgdGllciBjb25maWd1cmF0aW9uXG4gICAgICAgIGNvbnN0IGNhblVzZXJWb3RlID0gY3R4LnVzZXIuc3Vic2NyaXB0aW9uQ29uZmlnLmZlYXR1cmVfdm90aW5nO1xuXG4gICAgICAgIGNvbnN0IHZvdGVzID0gYXdhaXQgY3R4LnByaXNtYS5mZWF0dXJlVm90aW5nVm90ZXMuZmluZE1hbnkoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICByb3VuZF9pZDoge1xuICAgICAgICAgICAgICAgICAgICBpbjogcm91bmRzLm1hcCgocm91bmQpID0+IHJvdW5kLmlkKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IGN0eC51c2VyLmlkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgIHJvdW5kX2lkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGl0ZW1faWQ6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBJbXBsYW50IGEgYm9vbGVhbiB2YWx1ZSB0byBpbmRpY2F0ZSBpZiB0aGUgdXNlciBjYW4gdm90ZSBhbmQgaWYgdGhlIHJvdW5kIGlzIGFjdGl2ZVxuICAgICAgICByb3VuZHM/LmZvckVhY2goKHJvdW5kKSA9PiB7XG4gICAgICAgICAgICByb3VuZC5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHJvdW5kLml0ZW1zID0gaXRlbXMuZmlsdGVyKChpdGVtKSA9PiBpdGVtLnJvdW5kX2lkID09PSByb3VuZC5pZCk7XG4gICAgICAgICAgICByb3VuZC51c2VyQ2FuVm90ZSA9IGZhbHNlO1xuICAgICAgICAgICAgcm91bmQudm90ZWRJZCA9IHZvdGVzLmZpbmQoKHZvdGUpID0+IHZvdGUucm91bmRfaWQgPT09IHJvdW5kLmlkKVxuICAgICAgICAgICAgICAgID8uaXRlbV9pZDtcblxuICAgICAgICAgICAgaWYgKHJvdW5kLnN0YXJ0IDw9IG5ldyBEYXRlKCkgJiYgcm91bmQuZW5kID49IG5ldyBEYXRlKCkpIHtcbiAgICAgICAgICAgICAgICByb3VuZC5hY3RpdmUgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhleSBoYXZlIHZvdGVkIGluIHRoaXMgcm91bmRcbiAgICAgICAgICAgICAgICBpZiAoY2FuVXNlclZvdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcm91bmQudXNlckNhblZvdGUgPSAhcm91bmQudm90ZWRJZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByb3VuZHM6IHJvdW5kcyxcbiAgICAgICAgICAgIGluY29ycmVjdFRpZXI6ICFjYW5Vc2VyVm90ZSxcbiAgICAgICAgfTtcbiAgICB9KTtcblxuZXhwb3J0IGNvbnN0IGZlYXR1cmVWb3RpbmdSb3V0ZXJQbGFjZVZvdGUgPSBwcm90ZWN0ZWRQcm9jZWR1cmVcbiAgICAuaW5wdXQoXG4gICAgICAgIHoub2JqZWN0KHtcbiAgICAgICAgICAgIHJvdW5kSWQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICBpdGVtSWQ6IHouc3RyaW5nKCksXG4gICAgICAgIH0pLFxuICAgIClcbiAgICAub3V0cHV0KHoub2JqZWN0KHsgc3VjY2Vzczogei5ib29sZWFuKCkgfSkpXG4gICAgLm11dGF0aW9uKGFzeW5jICh7IGN0eCwgaW5wdXQgfSkgPT4ge1xuICAgICAgICBhd2FpdCBjaGVja1JhdGVsaW1pdHRlcihcbiAgICAgICAgICAgIGN0eC5hcGlLZXlIYXNoLFxuICAgICAgICAgICAgXCJGRUFUVVJFX1ZPVElOR19QTEFDRV9WT1RFXCIsXG4gICAgICAgICAgICAyLFxuICAgICAgICAgICAgXCIxbVwiLFxuICAgICAgICApO1xuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSB1c2VyIGhhcyBhIHRpZXIgdGhhdCBhbGxvd3Mgdm90aW5nXG4gICAgICAgIGNvbnN0IGNhblVzZXJWb3RlID0gY3R4LnVzZXIuc3Vic2NyaXB0aW9uQ29uZmlnLmZlYXR1cmVfdm90aW5nO1xuXG4gICAgICAgIGlmICghY2FuVXNlclZvdGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogXCJVTkFVVEhPUklaRURcIixcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIllvdXIgdGllciBkb2VzIG5vdCBhbGxvdyB2b3RpbmcuIFBsZWFzZSB1cGdyYWRlXCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSByb3VuZCBpcyBhY3RpdmUgYW5kIHRoYXQgdGhlIHVzZXIgY2FuIHZvdGVcbiAgICAgICAgY29uc3Qgcm91bmQgPSBhd2FpdCBjdHgucHJpc21hLmZlYXR1cmVWb3RpbmdSb3VuZHMuZmluZEZpcnN0KHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgaWQ6IGlucHV0LnJvdW5kSWQsXG4gICAgICAgICAgICAgICAgc3RhcnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgbHRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZW5kOiB7XG4gICAgICAgICAgICAgICAgICAgIGd0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJvdW5kKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgdHJwYy5UUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6IFwiTk9UX0ZPVU5EXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJSb3VuZCBub3QgZm91bmRcIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHVzZXIgaGFzIGFscmVhZHkgdm90ZWQgaW4gdGhpcyByb3VuZFxuICAgICAgICBjb25zdCB2b3RlID0gYXdhaXQgY3R4LnByaXNtYS5mZWF0dXJlVm90aW5nVm90ZXMuZmluZEZpcnN0KHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgcm91bmRfaWQ6IGlucHV0LnJvdW5kSWQsXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodm90ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IHRycGMuVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgICAgICBjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJZb3UgaGF2ZSBhbHJlYWR5IHZvdGVkIGluIHRoaXMgcm91bmRcIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGl0ZW0gZXhpc3RzXG4gICAgICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBjdHgucHJpc21hLmZlYXR1cmVWb3RpbmdJdGVtcy5maW5kRmlyc3Qoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogaW5wdXQuaXRlbUlkLFxuICAgICAgICAgICAgICAgIHJvdW5kX2lkOiBpbnB1dC5yb3VuZElkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgdHJwYy5UUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6IFwiTk9UX0ZPVU5EXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJJdGVtIG5vdCBmb3VuZFwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgdGhlIHZvdGVcbiAgICAgICAgYXdhaXQgY3R4LnByaXNtYS5mZWF0dXJlVm90aW5nVm90ZXMuY3JlYXRlKHtcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICByb3VuZF9pZDogaW5wdXQucm91bmRJZCxcbiAgICAgICAgICAgICAgICBpdGVtX2lkOiBpbnB1dC5pdGVtSWQsXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICB9KTtcbiJdLCJuYW1lcyI6WyJ6IiwidHJwYyIsInByb3RlY3RlZFByb2NlZHVyZSIsImNoZWNrUmF0ZWxpbWl0dGVyIiwiZmVhdHVyZVZvdGluZ1JvdXRlck9wZW5Sb3VuZEV4aXN0cyIsIm91dHB1dCIsImJvb2xlYW4iLCJxdWVyeSIsImN0eCIsImFwaUtleUhhc2giLCJvcGVuUm91bmQiLCJwcmlzbWEiLCJmZWF0dXJlVm90aW5nUm91bmRzIiwiZmluZEZpcnN0Iiwid2hlcmUiLCJzdGFydCIsImx0ZSIsIkRhdGUiLCJlbmQiLCJndGUiLCJ2aXNpYmxlIiwic2VsZWN0IiwiaWQiLCJmZWF0dXJlVm90aW5nUm91dGVyR2V0Um91bmRzIiwib2JqZWN0Iiwicm91bmRzIiwiYXJyYXkiLCJzdHJpbmciLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwibnVsbGFibGUiLCJkYXRlIiwiaXRlbXMiLCJ2b3RlcyIsIm9wdGlvbmFsIiwiYWN0aXZlIiwidXNlckNhblZvdGUiLCJ2b3RlZElkIiwiaW5jb3JyZWN0VGllciIsImZpbmRNYW55IiwidGFrZSIsIm9yZGVyQnkiLCJmZWF0dXJlVm90aW5nSXRlbXMiLCJyb3VuZF9pZCIsImluIiwibWFwIiwicm91bmQiLCJjYW5Vc2VyVm90ZSIsInVzZXIiLCJzdWJzY3JpcHRpb25Db25maWciLCJmZWF0dXJlX3ZvdGluZyIsImZlYXR1cmVWb3RpbmdWb3RlcyIsInVzZXJfaWQiLCJpdGVtX2lkIiwiZm9yRWFjaCIsImZpbHRlciIsIml0ZW0iLCJmaW5kIiwidm90ZSIsImZlYXR1cmVWb3RpbmdSb3V0ZXJQbGFjZVZvdGUiLCJpbnB1dCIsInJvdW5kSWQiLCJpdGVtSWQiLCJzdWNjZXNzIiwibXV0YXRpb24iLCJUUlBDRXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsImNyZWF0ZSIsImRhdGEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/routes/v1/feature-voting.router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/routes/v1/feedback.router.ts":
/*!******************************************************!*\
  !*** ./src/server/trpc/routes/v1/feedback.router.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   feedbackRouterContact: () => (/* binding */ feedbackRouterContact),\n/* harmony export */   feedbackRouterGiveFeedback: () => (/* binding */ feedbackRouterGiveFeedback),\n/* harmony export */   feedbackRouterNotifyMe: () => (/* binding */ feedbackRouterNotifyMe)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var _utils_captcha__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/captcha */ \"(api-node)/./src/server/utils/captcha.ts\");\n/* harmony import */ var _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/ratelimiting */ \"(api-node)/./src/server/common/ratelimiting.ts\");\n/* harmony import */ var _common_email__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/email */ \"(api-node)/./src/server/common/email.ts\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc__WEBPACK_IMPORTED_MODULE_1__, _utils_captcha__WEBPACK_IMPORTED_MODULE_2__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__, _common_email__WEBPACK_IMPORTED_MODULE_4__, _trpc_server__WEBPACK_IMPORTED_MODULE_5__]);\n([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc__WEBPACK_IMPORTED_MODULE_1__, _utils_captcha__WEBPACK_IMPORTED_MODULE_2__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__, _common_email__WEBPACK_IMPORTED_MODULE_4__, _trpc_server__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nconst feedbackRouterNotifyMe = _trpc__WEBPACK_IMPORTED_MODULE_1__.publicProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email(),\n    ref: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"enterprise-tier\"\n    ]).nullable(),\n    captchaToken: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n})).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.userIP, \"FEEDBACK_NOTIFY_ME\", 2, \"20m\");\n    // Send a request to the Captcha API to verify the user's response\n    await (0,_utils_captcha__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input.captchaToken);\n    // Try to save the email to the DB\n    try {\n        try {\n            await ctx.prisma.notifyMeUsers.create({\n                data: {\n                    email: input.email,\n                    ref: input.ref?.toString() ?? null\n                }\n            });\n        } catch (e) {\n            // If the email is already in the database, return a nice message\n            if (e instanceof _prisma_client__WEBPACK_IMPORTED_MODULE_6__.Prisma.PrismaClientKnownRequestError) {\n                if (e.code === \"P2002\") {\n                    throw new _trpc_server__WEBPACK_IMPORTED_MODULE_5__.TRPCError({\n                        code: \"BAD_REQUEST\",\n                        message: \"You are already registered for updates!\"\n                    });\n                }\n            }\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_5__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"Something went wrong\"\n            });\n        }\n    } catch (err) {\n        console.error(`[TRPC - feedback.register] Error saving email to DB: ${err}`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_5__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong\"\n        });\n    }\n});\nconst feedbackRouterContact = _trpc__WEBPACK_IMPORTED_MODULE_1__.publicProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email(),\n    message: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(500),\n    captchaToken: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n})).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.userIP, \"FEEDBACK_CONTACT\", 2, \"20m\");\n    // Send a request to the Captcha API to verify the user's response\n    await (0,_utils_captcha__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input.captchaToken);\n    try {\n        await (0,_common_email__WEBPACK_IMPORTED_MODULE_4__.sendContactEmail)(input.email, input.message);\n    } catch (error) {\n        console.error(`[TRPC - feedback.contact] Error sending email: ${error}`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_5__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong\"\n        });\n    }\n});\nconst feedbackRouterGiveFeedback = _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    reason: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"Feature\",\n        \"Bug\",\n        \"General\"\n    ]),\n    message: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(500),\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email().optional(),\n    captchaToken: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n})).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_3__.checkRatelimitter)(ctx.apiKeyHash, \"FEEDBACK_GIVE_FEEDBACK\", 3, \"20m\");\n    // Send a request to the Captcha API to verify the user's response\n    await (0,_utils_captcha__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input.captchaToken);\n    try {\n        await (0,_common_email__WEBPACK_IMPORTED_MODULE_4__.sendFeedbackEmail)(input.email ?? null, ctx.user.id, input.reason, input.message);\n    } catch (error) {\n        console.error(`[TRPC - feedback.giveFeedback] Error sending email: ${error}`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_5__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong\"\n        });\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/routes/v1/feedback.router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/routes/v1/payment.router.ts":
/*!*****************************************************!*\
  !*** ./src/server/trpc/routes/v1/payment.router.ts ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paymentRouterGetCheckoutURL: () => (/* binding */ paymentRouterGetCheckoutURL),\n/* harmony export */   paymentRouterGetCustomerPortal: () => (/* binding */ paymentRouterGetCustomerPortal),\n/* harmony export */   paymentRouterGetSubscription: () => (/* binding */ paymentRouterGetSubscription)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _utils_stripe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/stripe */ \"(api-node)/./src/server/utils/stripe.ts\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _utils_subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/subscription */ \"(api-node)/./src/server/utils/subscription.ts\");\n/* harmony import */ var _schemes_payment_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../schemes/payment_router */ \"(api-node)/./src/schemes/payment_router.ts\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var _common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/ratelimiting */ \"(api-node)/./src/server/common/ratelimiting.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _utils_stripe__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__, _utils_subscription__WEBPACK_IMPORTED_MODULE_3__, _schemes_payment_router__WEBPACK_IMPORTED_MODULE_4__, _trpc__WEBPACK_IMPORTED_MODULE_5__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__]);\n([zod__WEBPACK_IMPORTED_MODULE_0__, _utils_stripe__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__, _utils_subscription__WEBPACK_IMPORTED_MODULE_3__, _schemes_payment_router__WEBPACK_IMPORTED_MODULE_4__, _trpc__WEBPACK_IMPORTED_MODULE_5__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n// const StripeSubscriptionStatusZod: z.ZodType<Stripe.Subscription.Status> =\n//     z.enum([\n//         \"active\",\n//         \"canceled\",\n//         \"incomplete\",\n//         \"incomplete_expired\",\n//         \"past_due\",\n//         \"trialing\",\n//         \"unpaid\",\n//     ]);\nconst paymentRouterGetCheckoutURL = _trpc__WEBPACK_IMPORTED_MODULE_5__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    tier: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.premiumMonthly,\n        _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.premiumYearly\n    ]).default(_utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.premiumMonthly)\n}).default({\n    tier: _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.premiumMonthly\n})).output(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable()).query(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__.checkRatelimitter)(ctx.apiKeyHash, \"PAYMENT_GET_CHECKOUT_URL\", 3, \"10s\");\n    const priceId = (0,_utils_subscription__WEBPACK_IMPORTED_MODULE_3__.GetPriceID)(input.tier);\n    if (!priceId?.length) {\n        console.error(`[TRPC - payment.getCheckoutURL] Invalid price ID. Tried: ${priceId} from ${input.tier}`);\n    }\n    try {\n        const id = await (0,_utils_stripe__WEBPACK_IMPORTED_MODULE_1__.createCheckoutSession)(ctx.user.id, priceId);\n        return await (0,_utils_stripe__WEBPACK_IMPORTED_MODULE_1__.getCheckoutUrl)(id);\n    } catch (error) {\n        console.error(error);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong\"\n        });\n    }\n});\nconst paymentRouterGetSubscription = _trpc__WEBPACK_IMPORTED_MODULE_5__.protectedProcedure.output(_schemes_payment_router__WEBPACK_IMPORTED_MODULE_4__.getSubscriptionOutputSchema).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__.checkRatelimitter)(ctx.apiKeyHash, \"PAYMENT_GET_SUBSCRIPTION\", 3, \"10s\");\n    const subscriptionData = await ctx.prisma.subscription.findFirst({\n        where: {\n            user_id: ctx.user.id\n        },\n        select: {\n            created_at: true,\n            expires_at: true,\n            status: true,\n            payment_status: true,\n            cancel_at_period_end: true,\n            product_id: true,\n            customer_id: true\n        }\n    });\n    // Number of linked devices corresponds to the number of accounts with the same user ID\n    // This does not include the main device\n    const linkedDevices = await ctx.prisma.aPIKey.count({\n        where: {\n            user_id: ctx.user.id\n        }\n    }) - 1;\n    const output = {\n        createdAt: subscriptionData?.created_at,\n        expiresAt: subscriptionData?.expires_at,\n        status: subscriptionData?.status,\n        paymentStatus: subscriptionData?.payment_status,\n        cancelAtPeriodEnd: subscriptionData?.cancel_at_period_end,\n        productId: subscriptionData?.product_id,\n        productName: _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.REVERSE_TIER_MAP[subscriptionData?.product_id ?? _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.standard]?.toUpperCase() ?? \"Unknown\",\n        // customerId: subscriptionData?.customer_id,\n        nonFree: _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.REVERSE_TIER_MAP[subscriptionData?.product_id ?? _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.standard] !== _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.standard,\n        resourceStatus: {\n            linkedDevices: linkedDevices\n        }\n    };\n    return output;\n});\nconst paymentRouterGetCustomerPortal = _trpc__WEBPACK_IMPORTED_MODULE_5__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable()).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_6__.checkRatelimitter)(ctx.apiKeyHash, \"PAYMENT_GET_CUSTOMER_PORTAL\", 3, \"10s\");\n    const subscription = await ctx.prisma.subscription.findFirst({\n        where: {\n            user_id: ctx.user.id\n        },\n        select: {\n            customer_id: true,\n            product_id: true\n        }\n    });\n    // If the user doesn't have a subscription, don't fetch the customer portal URL\n    if (!subscription || subscription && subscription.product_id && _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.REVERSE_TIER_MAP[subscription.product_id] === _utils_subscription__WEBPACK_IMPORTED_MODULE_3__.PAYMENT_TIERS.standard) {\n        return null;\n    }\n    try {\n        const session = await (0,_utils_stripe__WEBPACK_IMPORTED_MODULE_1__.getBillingPortalSession)(subscription.customer_id);\n        return session.url;\n    } catch (error) {\n        console.error(\"[TRPC - payment.getCustomerPortal] Failed to get user billing portal session URL.\", error);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong\"\n        });\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/routes/v1/payment.router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/routes/v1/user.router.ts":
/*!**************************************************!*\
  !*** ./src/server/trpc/routes/v1/user.router.ts ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userRouterClearRecoveryToken: () => (/* binding */ userRouterClearRecoveryToken),\n/* harmony export */   userRouterConfiguration: () => (/* binding */ userRouterConfiguration),\n/* harmony export */   userRouterDelete: () => (/* binding */ userRouterDelete),\n/* harmony export */   userRouterGenerateRecoveryToken: () => (/* binding */ userRouterGenerateRecoveryToken),\n/* harmony export */   userRouterRecover: () => (/* binding */ userRouterRecover),\n/* harmony export */   userRouterRegister: () => (/* binding */ userRouterRegister)\n/* harmony export */ });\n/* harmony import */ var _scure_bip39__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/bip39 */ \"@scure/bip39\");\n/* harmony import */ var _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @scure/bip39/wordlists/english */ \"@scure/bip39/wordlists/english\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! argon2 */ \"argon2\");\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(argon2__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stripe */ \"stripe\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../trpc */ \"(api-node)/./src/server/trpc/trpc.ts\");\n/* harmony import */ var _utils_captcha__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../utils/captcha */ \"(api-node)/./src/server/utils/captcha.ts\");\n/* harmony import */ var _utils_stripe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../utils/stripe */ \"(api-node)/./src/server/utils/stripe.ts\");\n/* harmony import */ var _utils_subscription__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../utils/subscription */ \"(api-node)/./src/server/utils/subscription.ts\");\n/* harmony import */ var _common_api_key_generation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../common/api-key-generation */ \"(api-node)/./src/server/common/api-key-generation.ts\");\n/* harmony import */ var _common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../common/ratelimiting */ \"(api-node)/./src/server/common/ratelimiting.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_scure_bip39__WEBPACK_IMPORTED_MODULE_0__, _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__, stripe__WEBPACK_IMPORTED_MODULE_4__, zod__WEBPACK_IMPORTED_MODULE_5__, _trpc__WEBPACK_IMPORTED_MODULE_6__, _utils_captcha__WEBPACK_IMPORTED_MODULE_7__, _utils_stripe__WEBPACK_IMPORTED_MODULE_8__, _utils_subscription__WEBPACK_IMPORTED_MODULE_9__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__]);\n([_scure_bip39__WEBPACK_IMPORTED_MODULE_0__, _scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_2__, stripe__WEBPACK_IMPORTED_MODULE_4__, zod__WEBPACK_IMPORTED_MODULE_5__, _trpc__WEBPACK_IMPORTED_MODULE_6__, _utils_captcha__WEBPACK_IMPORTED_MODULE_7__, _utils_stripe__WEBPACK_IMPORTED_MODULE_8__, _utils_subscription__WEBPACK_IMPORTED_MODULE_9__, _common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_4__[\"default\"](process.env.STRIPE_SECRET_KEY ?? \"\", _utils_stripe__WEBPACK_IMPORTED_MODULE_8__.StripeConfiguration);\nconst userRecoveryArgon2Config = {\n    type: (argon2__WEBPACK_IMPORTED_MODULE_3___default().argon2id),\n    parallelism: 4,\n    memoryCost: 2 ** 16,\n    timeCost: 3\n};\nconst userRouterRegister = _trpc__WEBPACK_IMPORTED_MODULE_6__.publicProcedure.input(zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n    captchaToken: zod__WEBPACK_IMPORTED_MODULE_5__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_5__.z.string()).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"USER_REGISTER\", 1, \"1m\");\n    await (0,_utils_captcha__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(input.captchaToken);\n    let apiKeyCompound;\n    try {\n        // Generate the user\n        // And create the first API Key with which the user will authenticate their requests\n        const user = await ctx.prisma.user.create({\n            data: {}\n        });\n        apiKeyCompound = await (0,_common_api_key_generation__WEBPACK_IMPORTED_MODULE_10__.insertDefaultAPIKey)(ctx, user.id);\n        await (0,_utils_subscription__WEBPACK_IMPORTED_MODULE_9__.upsertUserSubscriptionTier)(ctx.prisma, user.id);\n    } catch (err) {\n        console.error(`[TRPC - user.register] Error creating user: ${err}`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Something went wrong. Please try again later.\"\n        });\n    }\n    // Return the API Key and the API Key ID in one string\n    return apiKeyCompound;\n});\nconst userRouterRecover = _trpc__WEBPACK_IMPORTED_MODULE_6__.publicProcedure.input(zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n    userId: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().max(100, \"Invalid user ID\"),\n    recoveryPhrase: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().max(256, \"Invalid recovery phrase\"),\n    captchaToken: zod__WEBPACK_IMPORTED_MODULE_5__.z.string()\n})).output(zod__WEBPACK_IMPORTED_MODULE_5__.z.string()).mutation(async ({ ctx, input })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"RECOVERY\", 3, \"30m\");\n    // Send a request to the Captcha API to verify the user's response\n    await (0,_utils_captcha__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(input.captchaToken);\n    // Check if the user already exists (by email)\n    const existingUser = await ctx.prisma.user.findFirst({\n        where: {\n            id: input.userId\n        },\n        select: {\n            id: true,\n            recovery_token: true\n        }\n    });\n    // If the user or the recovery token doesn't exist, throw an error\n    if (!existingUser || !existingUser.id || !existingUser.recovery_token) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Invalid request\"\n        });\n    }\n    // Make the error intentionally vague\n    const wrongRecoveryPhraseErr = new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n        code: \"BAD_REQUEST\",\n        message: \"Invalid request\"\n    });\n    // Check if the recovery phrase matches\n    if (!await argon2__WEBPACK_IMPORTED_MODULE_3___default().verify(existingUser.recovery_token, input.recoveryPhrase)) {\n        throw wrongRecoveryPhraseErr;\n    }\n    // Remove all existing API keys for this user\n    await ctx.prisma.aPIKey.deleteMany({\n        where: {\n            user_id: input.userId\n        }\n    });\n    // Create a new API key for the user\n    const apiKeyCompound = await (0,_common_api_key_generation__WEBPACK_IMPORTED_MODULE_10__.insertDefaultAPIKey)(ctx, input.userId);\n    // Clear the recovery token\n    await ctx.prisma.user.update({\n        where: {\n            id: input.userId\n        },\n        data: {\n            recovery_token: null,\n            recovery_token_created_at: null\n        }\n    });\n    return apiKeyCompound;\n});\nconst userRouterGenerateRecoveryToken = _trpc__WEBPACK_IMPORTED_MODULE_6__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n    userId: zod__WEBPACK_IMPORTED_MODULE_5__.z.string(),\n    token: zod__WEBPACK_IMPORTED_MODULE_5__.z.string()\n})).mutation(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"RECOVERY_TOKEN_MUT\", 3, \"30m\");\n    // Only the root device can generate recovery tokens\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can be used to generate recovery tokens.\"\n        });\n    }\n    // The recovery token can be created only if it isn't already created\n    const recoveryTokenExists = await ctx.prisma.user.findFirst({\n        where: {\n            id: ctx.user.id,\n            recovery_token: {\n                not: null\n            }\n        },\n        select: {\n            recovery_token: true\n        }\n    });\n    if (recoveryTokenExists?.recovery_token) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Recovery token already exists.\"\n        });\n    }\n    // Generate a 256-bit mnemonic\n    const recoveryPhrase = _scure_bip39__WEBPACK_IMPORTED_MODULE_0__.generateMnemonic(_scure_bip39_wordlists_english__WEBPACK_IMPORTED_MODULE_1__.wordlist, 256);\n    let hashedToken;\n    try {\n        // Hash the mnemonic\n        hashedToken = await argon2__WEBPACK_IMPORTED_MODULE_3___default().hash(recoveryPhrase, userRecoveryArgon2Config);\n    } catch (err) {\n        console.error(\"[TRPC - user.generateRecoveryToken] Failed to hash the recovery token.\", err);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Failed to hash the recovery token\"\n        });\n    }\n    // Create a recovery token for the user\n    await ctx.prisma.user.update({\n        where: {\n            id: ctx.user.id\n        },\n        data: {\n            recovery_token: hashedToken,\n            recovery_token_created_at: new Date()\n        }\n    });\n    return {\n        userId: ctx.user.id,\n        token: recoveryPhrase\n    };\n});\nconst userRouterClearRecoveryToken = _trpc__WEBPACK_IMPORTED_MODULE_6__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean()).mutation(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"RECOVERY_TOKEN_MUT\", 3, \"30m\");\n    // Only the root device can clear recovery tokens\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can be used to clear recovery tokens.\"\n        });\n    }\n    // The recovery token can be cleared only if it exists\n    const existingRecoveryToken = await ctx.prisma.user.findFirst({\n        where: {\n            id: ctx.user.id,\n            recovery_token: {\n                not: null\n            }\n        },\n        select: {\n            recovery_token: true\n        }\n    });\n    if (!existingRecoveryToken?.recovery_token) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Recovery token doesn't exist.\"\n        });\n    }\n    // Clear the recovery token\n    await ctx.prisma.user.update({\n        where: {\n            id: ctx.user.id\n        },\n        data: {\n            recovery_token: null,\n            recovery_token_created_at: null\n        }\n    });\n    return true;\n});\nconst userRouterConfiguration = _trpc__WEBPACK_IMPORTED_MODULE_6__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n    root: zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean(),\n    canLink: zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean(),\n    maxLinks: zod__WEBPACK_IMPORTED_MODULE_5__.z.number(),\n    canPromoteDevices: zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean(),\n    alwaysConnected: zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean(),\n    canFeatureVote: zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean(),\n    recoveryTokenCreatedAt: zod__WEBPACK_IMPORTED_MODULE_5__.z.date().nullable()\n})).query(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"USER_CONFIGURATION\", 3, \"10s\");\n    const recoveryData = await ctx.prisma.user.findFirst({\n        where: {\n            id: ctx.user.id\n        },\n        select: {\n            recovery_token_created_at: true\n        }\n    });\n    return {\n        root: ctx.rootAPIKey,\n        canLink: ctx.user.subscriptionConfig.linking_allowed,\n        maxLinks: ctx.user.subscriptionConfig.max_links,\n        canPromoteDevices: ctx.user.subscriptionConfig.promoting_to_root,\n        alwaysConnected: ctx.user.subscriptionConfig.always_connected,\n        canFeatureVote: ctx.user.subscriptionConfig.feature_voting,\n        recoveryTokenCreatedAt: recoveryData?.recovery_token_created_at ?? null\n    };\n});\nconst userRouterDelete = _trpc__WEBPACK_IMPORTED_MODULE_6__.protectedProcedure.output(zod__WEBPACK_IMPORTED_MODULE_5__.z.boolean()).mutation(async ({ ctx })=>{\n    await (0,_common_ratelimiting__WEBPACK_IMPORTED_MODULE_11__.checkRatelimitter)(ctx.userIP, \"USER_DELETE\", 1, \"5m\");\n    // Only the root account can delete the user\n    if (!ctx.rootAPIKey) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"Only the root device can delete the user.\"\n        });\n    }\n    const subscription = await ctx.prisma.user.delete({\n        where: {\n            id: ctx.user.id\n        },\n        select: {\n            subscription: true\n        }\n    });\n    if (subscription && subscription.subscription) {\n        const id = subscription.subscription.customer_id;\n        // Call the Stripe API to delete the customer only if the user had a subscription\n        // The actual customer_id is set to the user's ID when they don't have a subscription\n        // When they do have a subscription, the customer_id is set to the actual customer ID (payment processor's)\n        if (id && id !== ctx.user.id) {\n            try {\n                const res = await stripe.customers.del(id);\n                console.debug(`[TRPC - user.delete] Deleted customer for user ID: ${ctx.user.id}}`, res);\n            } catch (e) {\n                // Ignore error, the customer might have been deleted already or the ID is invalid\n                console.debug(`[TRPC - user.delete] Error deleting customer for user ID: ${ctx.user.id}}`, e);\n            }\n        }\n    }\n    return true;\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdHJwYy9yb3V0ZXMvdjEvdXNlci5yb3V0ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNvQjtBQUNyQjtBQUNUO0FBQ0E7QUFDSjtBQUV5QztBQUVaO0FBQ087QUFDYTtBQUNBO0FBQ1I7QUFFakUsTUFBTWEsU0FBUyxJQUFJVCw4Q0FBTUEsQ0FDckJVLFFBQVFDLEdBQUcsQ0FBQ0MsaUJBQWlCLElBQUksSUFDakNQLDhEQUFtQkE7QUFHdkIsTUFBTVEsMkJBQTZEO0lBQy9EQyxNQUFNZix3REFBZTtJQUNyQmlCLGFBQWE7SUFDYkMsWUFBWSxLQUFLO0lBQ2pCQyxVQUFVO0FBRWQ7QUFFTyxNQUFNQyxxQkFBcUJoQixrREFBZUEsQ0FDNUNpQixLQUFLLENBQ0ZuQixrQ0FBQ0EsQ0FBQ29CLE1BQU0sQ0FBQztJQUNMQyxjQUFjckIsa0NBQUNBLENBQUNzQixNQUFNO0FBQzFCLElBRUhDLE1BQU0sQ0FBQ3ZCLGtDQUFDQSxDQUFDc0IsTUFBTSxJQUNmRSxRQUFRLENBQUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVOLEtBQUssRUFBRTtJQUMzQixNQUFNWix3RUFBaUJBLENBQUNrQixJQUFJQyxNQUFNLEVBQUUsaUJBQWlCLEdBQUc7SUFFeEQsTUFBTXZCLDBEQUFlQSxDQUFDZ0IsTUFBTUUsWUFBWTtJQUV4QyxJQUFJTTtJQUNKLElBQUk7UUFDQSxvQkFBb0I7UUFDcEIsb0ZBQW9GO1FBQ3BGLE1BQU1DLE9BQU8sTUFBTUgsSUFBSUksTUFBTSxDQUFDRCxJQUFJLENBQUNFLE1BQU0sQ0FBQztZQUN0Q0MsTUFBTSxDQUFDO1FBQ1g7UUFFQUosaUJBQWlCLE1BQU1yQixnRkFBbUJBLENBQUNtQixLQUFLRyxLQUFLSSxFQUFFO1FBRXZELE1BQU0zQiwrRUFBMEJBLENBQUNvQixJQUFJSSxNQUFNLEVBQUVELEtBQUtJLEVBQUU7SUFDeEQsRUFBRSxPQUFPQyxLQUFLO1FBQ1ZDLFFBQVFD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QUFNLENBQUM7UUFDOUMzQyxPQUFPO1lBQ0hiLElBQUlQLElBQUlHLElBQUksQ0FBQ0ksRUFBRTtRQUNuQjtRQUNBYyxRQUFRO1lBQ0p5QyxjQUFjO1FBQ2xCO0lBQ0o7SUFFQSxJQUFJQSxnQkFBZ0JBLGFBQWFBLFlBQVksRUFBRTtRQUMzQyxNQUFNdkQsS0FBS3VELGFBQWFBLFlBQVksQ0FBQ0UsV0FBVztRQUVoRCxpRkFBaUY7UUFDakYscUZBQXFGO1FBQ3JGLDJHQUEyRztRQUMzRyxJQUFJekQsTUFBTUEsT0FBT1AsSUFBSUcsSUFBSSxDQUFDSSxFQUFFLEVBQUU7WUFDMUIsSUFBSTtnQkFDQSxNQUFNMEQsTUFBTSxNQUFNbEYsT0FBT21GLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDNUQ7Z0JBQ3ZDRSxRQUFRMkQsS0FBSyxDQUNULENBQUMsbURBQW1ELEVBQUVwRSxJQUFJRyxJQUFJLENBQUNJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDcEUwRDtZQUVSLEVBQUUsT0FBT0ksR0FBRztnQkFDUixrRkFBa0Y7Z0JBQ2xGNUQsUUFBUTJELEtBQUssQ0FDVCxDQUFDLDBEQUEwRCxFQUFFcEUsSUFBSUcsSUFBSSxDQUFDSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQzNFOEQ7WUFFUjtRQUNKO0lBQ0o7SUFFQSxPQUFPO0FBQ1gsR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NlcnZlci90cnBjL3JvdXRlcy92MS91c2VyLnJvdXRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiaXAzOSBmcm9tIFwiQHNjdXJlL2JpcDM5XCI7XG5pbXBvcnQgeyB3b3JkbGlzdCB9IGZyb20gXCJAc2N1cmUvYmlwMzkvd29yZGxpc3RzL2VuZ2xpc2hcIjtcbmltcG9ydCAqIGFzIHRycGMgZnJvbSBcIkB0cnBjL3NlcnZlclwiO1xuaW1wb3J0IGFyZ29uMiBmcm9tIFwiYXJnb24yXCI7XG5pbXBvcnQgU3RyaXBlIGZyb20gXCJzdHJpcGVcIjtcbmltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5cbmltcG9ydCB7IHByb3RlY3RlZFByb2NlZHVyZSwgcHVibGljUHJvY2VkdXJlIH0gZnJvbSBcIi4uLy4uL3RycGNcIjtcblxuaW1wb3J0IHZhbGlkYXRlQ2FwdGNoYSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvY2FwdGNoYVwiO1xuaW1wb3J0IHsgU3RyaXBlQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9zdHJpcGVcIjtcbmltcG9ydCB7IHVwc2VydFVzZXJTdWJzY3JpcHRpb25UaWVyIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3N1YnNjcmlwdGlvblwiO1xuaW1wb3J0IHsgaW5zZXJ0RGVmYXVsdEFQSUtleSB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vYXBpLWtleS1nZW5lcmF0aW9uXCI7XG5pbXBvcnQgeyBjaGVja1JhdGVsaW1pdHRlciB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vcmF0ZWxpbWl0aW5nXCI7XG5cbmNvbnN0IHN0cmlwZSA9IG5ldyBTdHJpcGUoXG4gICAgcHJvY2Vzcy5lbnYuU1RSSVBFX1NFQ1JFVF9LRVkgPz8gXCJcIixcbiAgICBTdHJpcGVDb25maWd1cmF0aW9uLFxuKTtcblxuY29uc3QgdXNlclJlY292ZXJ5QXJnb24yQ29uZmlnOiBhcmdvbjIuT3B0aW9ucyAmIHsgcmF3PzogZmFsc2UgfSA9IHtcbiAgICB0eXBlOiBhcmdvbjIuYXJnb24yaWQsXG4gICAgcGFyYWxsZWxpc206IDQsIC8vIDQgdGhyZWFkcyAoZWFjaCB0aHJlYWQgaGFzIGEgbWVtb3J5IHBvb2wgb2YgbWVtb3J5Q29zdCBieXRlcylcbiAgICBtZW1vcnlDb3N0OiAyICoqIDE2LCAvLyA2NE1pQlxuICAgIHRpbWVDb3N0OiAzLCAvLyAzIGl0ZXJhdGlvbnMgKDMgcGFzc2VzIG92ZXIgdGhlIG1lbW9yeSlcbiAgICAvLyBzYWx0OiAuLi4sIC8vIE5PVEU6IFdlIGRvbid0IG5lZWQgdG8gcHJvdmlkZSBhIHNhbHQsIGFyZ29uMiB3aWxsIGdlbmVyYXRlIGEgcmFuZG9tIHNhbHRcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VyUm91dGVyUmVnaXN0ZXIgPSBwdWJsaWNQcm9jZWR1cmVcbiAgICAuaW5wdXQoXG4gICAgICAgIHoub2JqZWN0KHtcbiAgICAgICAgICAgIGNhcHRjaGFUb2tlbjogei5zdHJpbmcoKSxcbiAgICAgICAgfSksXG4gICAgKVxuICAgIC5vdXRwdXQoei5zdHJpbmcoKSlcbiAgICAubXV0YXRpb24oYXN5bmMgKHsgY3R4LCBpbnB1dCB9KSA9PiB7XG4gICAgICAgIGF3YWl0IGNoZWNrUmF0ZWxpbWl0dGVyKGN0eC51c2VySVAsIFwiVVNFUl9SRUdJU1RFUlwiLCAxLCBcIjFtXCIpO1xuXG4gICAgICAgIGF3YWl0IHZhbGlkYXRlQ2FwdGNoYShpbnB1dC5jYXB0Y2hhVG9rZW4pO1xuXG4gICAgICAgIGxldCBhcGlLZXlDb21wb3VuZDogc3RyaW5nO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gR2VuZXJhdGUgdGhlIHVzZXJcbiAgICAgICAgICAgIC8vIEFuZCBjcmVhdGUgdGhlIGZpcnN0IEFQSSBLZXkgd2l0aCB3aGljaCB0aGUgdXNlciB3aWxsIGF1dGhlbnRpY2F0ZSB0aGVpciByZXF1ZXN0c1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IGN0eC5wcmlzbWEudXNlci5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHt9LFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGFwaUtleUNvbXBvdW5kID0gYXdhaXQgaW5zZXJ0RGVmYXVsdEFQSUtleShjdHgsIHVzZXIuaWQpO1xuXG4gICAgICAgICAgICBhd2FpdCB1cHNlcnRVc2VyU3Vic2NyaXB0aW9uVGllcihjdHgucHJpc21hLCB1c2VyLmlkKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBbVFJQQyAtIHVzZXIucmVnaXN0ZXJdIEVycm9yIGNyZWF0aW5nIHVzZXI6ICR7ZXJyfWApO1xuXG4gICAgICAgICAgICB0aHJvdyBuZXcgdHJwYy5UUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6IFwiSU5URVJOQUxfU0VSVkVSX0VSUk9SXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJTb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmV0dXJuIHRoZSBBUEkgS2V5IGFuZCB0aGUgQVBJIEtleSBJRCBpbiBvbmUgc3RyaW5nXG4gICAgICAgIHJldHVybiBhcGlLZXlDb21wb3VuZDtcbiAgICB9KTtcblxuZXhwb3J0IGNvbnN0IHVzZXJSb3V0ZXJSZWNvdmVyID0gcHVibGljUHJvY2VkdXJlXG4gICAgLmlucHV0KFxuICAgICAgICB6Lm9iamVjdCh7XG4gICAgICAgICAgICB1c2VySWQ6IHouc3RyaW5nKCkubWF4KDEwMCwgXCJJbnZhbGlkIHVzZXIgSURcIiksXG4gICAgICAgICAgICByZWNvdmVyeVBocmFzZTogei5zdHJpbmcoKS5tYXgoMjU2LCBcIkludmFsaWQgcmVjb3ZlcnkgcGhyYXNlXCIpLFxuICAgICAgICAgICAgY2FwdGNoYVRva2VuOiB6LnN0cmluZygpLFxuICAgICAgICB9KSxcbiAgICApXG4gICAgLm91dHB1dCh6LnN0cmluZygpKVxuICAgIC5tdXRhdGlvbihhc3luYyAoeyBjdHgsIGlucHV0IH0pID0+IHtcbiAgICAgICAgYXdhaXQgY2hlY2tSYXRlbGltaXR0ZXIoY3R4LnVzZXJJUCwgXCJSRUNPVkVSWVwiLCAzLCBcIjMwbVwiKTtcblxuICAgICAgICAvLyBTZW5kIGEgcmVxdWVzdCB0byB0aGUgQ2FwdGNoYSBBUEkgdG8gdmVyaWZ5IHRoZSB1c2VyJ3MgcmVzcG9uc2VcbiAgICAgICAgYXdhaXQgdmFsaWRhdGVDYXB0Y2hhKGlucHV0LmNhcHRjaGFUb2tlbik7XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHVzZXIgYWxyZWFkeSBleGlzdHMgKGJ5IGVtYWlsKVxuICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCBjdHgucHJpc21hLnVzZXIuZmluZEZpcnN0KHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgaWQ6IGlucHV0LnVzZXJJZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZWNvdmVyeV90b2tlbjogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIElmIHRoZSB1c2VyIG9yIHRoZSByZWNvdmVyeSB0b2tlbiBkb2Vzbid0IGV4aXN0LCB0aHJvdyBhbiBlcnJvclxuICAgICAgICBpZiAoIWV4aXN0aW5nVXNlciB8fCAhZXhpc3RpbmdVc2VyLmlkIHx8ICFleGlzdGluZ1VzZXIucmVjb3ZlcnlfdG9rZW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogXCJCQURfUkVRVUVTVFwiLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCByZXF1ZXN0XCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE1ha2UgdGhlIGVycm9yIGludGVudGlvbmFsbHkgdmFndWVcbiAgICAgICAgY29uc3Qgd3JvbmdSZWNvdmVyeVBocmFzZUVyciA9IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICBjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIkludmFsaWQgcmVxdWVzdFwiLFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBDaGVjayBpZiB0aGUgcmVjb3ZlcnkgcGhyYXNlIG1hdGNoZXNcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgIShhd2FpdCBhcmdvbjIudmVyaWZ5KFxuICAgICAgICAgICAgICAgIGV4aXN0aW5nVXNlci5yZWNvdmVyeV90b2tlbixcbiAgICAgICAgICAgICAgICBpbnB1dC5yZWNvdmVyeVBocmFzZSxcbiAgICAgICAgICAgICkpXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhyb3cgd3JvbmdSZWNvdmVyeVBocmFzZUVycjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlbW92ZSBhbGwgZXhpc3RpbmcgQVBJIGtleXMgZm9yIHRoaXMgdXNlclxuICAgICAgICBhd2FpdCBjdHgucHJpc21hLmFQSUtleS5kZWxldGVNYW55KHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgdXNlcl9pZDogaW5wdXQudXNlcklkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IEFQSSBrZXkgZm9yIHRoZSB1c2VyXG4gICAgICAgIGNvbnN0IGFwaUtleUNvbXBvdW5kID0gYXdhaXQgaW5zZXJ0RGVmYXVsdEFQSUtleShjdHgsIGlucHV0LnVzZXJJZCk7XG5cbiAgICAgICAgLy8gQ2xlYXIgdGhlIHJlY292ZXJ5IHRva2VuXG4gICAgICAgIGF3YWl0IGN0eC5wcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogaW5wdXQudXNlcklkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICByZWNvdmVyeV90b2tlbjogbnVsbCxcbiAgICAgICAgICAgICAgICByZWNvdmVyeV90b2tlbl9jcmVhdGVkX2F0OiBudWxsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGFwaUtleUNvbXBvdW5kO1xuICAgIH0pO1xuXG5leHBvcnQgY29uc3QgdXNlclJvdXRlckdlbmVyYXRlUmVjb3ZlcnlUb2tlbiA9IHByb3RlY3RlZFByb2NlZHVyZVxuICAgIC5vdXRwdXQoei5vYmplY3QoeyB1c2VySWQ6IHouc3RyaW5nKCksIHRva2VuOiB6LnN0cmluZygpIH0pKVxuICAgIC5tdXRhdGlvbihhc3luYyAoeyBjdHggfSkgPT4ge1xuICAgICAgICBhd2FpdCBjaGVja1JhdGVsaW1pdHRlcihjdHgudXNlcklQLCBcIlJFQ09WRVJZX1RPS0VOX01VVFwiLCAzLCBcIjMwbVwiKTtcblxuICAgICAgICAvLyBPbmx5IHRoZSByb290IGRldmljZSBjYW4gZ2VuZXJhdGUgcmVjb3ZlcnkgdG9rZW5zXG4gICAgICAgIGlmICghY3R4LnJvb3RBUElLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogXCJCQURfUkVRVUVTVFwiLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6XG4gICAgICAgICAgICAgICAgICAgIFwiT25seSB0aGUgcm9vdCBkZXZpY2UgY2FuIGJlIHVzZWQgdG8gZ2VuZXJhdGUgcmVjb3ZlcnkgdG9rZW5zLlwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUaGUgcmVjb3ZlcnkgdG9rZW4gY2FuIGJlIGNyZWF0ZWQgb25seSBpZiBpdCBpc24ndCBhbHJlYWR5IGNyZWF0ZWRcbiAgICAgICAgY29uc3QgcmVjb3ZlcnlUb2tlbkV4aXN0cyA9IGF3YWl0IGN0eC5wcmlzbWEudXNlci5maW5kRmlyc3Qoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgcmVjb3ZlcnlfdG9rZW46IHtcbiAgICAgICAgICAgICAgICAgICAgbm90OiBudWxsLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgcmVjb3ZlcnlfdG9rZW46IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAocmVjb3ZlcnlUb2tlbkV4aXN0cz8ucmVjb3ZlcnlfdG9rZW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogXCJCQURfUkVRVUVTVFwiLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiUmVjb3ZlcnkgdG9rZW4gYWxyZWFkeSBleGlzdHMuXCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEdlbmVyYXRlIGEgMjU2LWJpdCBtbmVtb25pY1xuICAgICAgICBjb25zdCByZWNvdmVyeVBocmFzZSA9IGJpcDM5LmdlbmVyYXRlTW5lbW9uaWMod29yZGxpc3QsIDI1Nik7XG5cbiAgICAgICAgbGV0IGhhc2hlZFRva2VuOiBzdHJpbmc7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIEhhc2ggdGhlIG1uZW1vbmljXG4gICAgICAgICAgICBoYXNoZWRUb2tlbiA9IGF3YWl0IGFyZ29uMi5oYXNoKFxuICAgICAgICAgICAgICAgIHJlY292ZXJ5UGhyYXNlLFxuICAgICAgICAgICAgICAgIHVzZXJSZWNvdmVyeUFyZ29uMkNvbmZpZyxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgICAgICBcIltUUlBDIC0gdXNlci5nZW5lcmF0ZVJlY292ZXJ5VG9rZW5dIEZhaWxlZCB0byBoYXNoIHRoZSByZWNvdmVyeSB0b2tlbi5cIixcbiAgICAgICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICB0aHJvdyBuZXcgdHJwYy5UUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6IFwiSU5URVJOQUxfU0VSVkVSX0VSUk9SXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJGYWlsZWQgdG8gaGFzaCB0aGUgcmVjb3ZlcnkgdG9rZW5cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ3JlYXRlIGEgcmVjb3ZlcnkgdG9rZW4gZm9yIHRoZSB1c2VyXG4gICAgICAgIGF3YWl0IGN0eC5wcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHJlY292ZXJ5X3Rva2VuOiBoYXNoZWRUb2tlbixcbiAgICAgICAgICAgICAgICByZWNvdmVyeV90b2tlbl9jcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHVzZXJJZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICB0b2tlbjogcmVjb3ZlcnlQaHJhc2UsXG4gICAgICAgIH07XG4gICAgfSk7XG5cbmV4cG9ydCBjb25zdCB1c2VyUm91dGVyQ2xlYXJSZWNvdmVyeVRva2VuID0gcHJvdGVjdGVkUHJvY2VkdXJlXG4gICAgLm91dHB1dCh6LmJvb2xlYW4oKSlcbiAgICAubXV0YXRpb24oYXN5bmMgKHsgY3R4IH0pID0+IHtcbiAgICAgICAgYXdhaXQgY2hlY2tSYXRlbGltaXR0ZXIoY3R4LnVzZXJJUCwgXCJSRUNPVkVSWV9UT0tFTl9NVVRcIiwgMywgXCIzMG1cIik7XG5cbiAgICAgICAgLy8gT25seSB0aGUgcm9vdCBkZXZpY2UgY2FuIGNsZWFyIHJlY292ZXJ5IHRva2Vuc1xuICAgICAgICBpZiAoIWN0eC5yb290QVBJS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgdHJwYy5UUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6IFwiQkFEX1JFUVVFU1RcIixcbiAgICAgICAgICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgICAgICAgICAgICBcIk9ubHkgdGhlIHJvb3QgZGV2aWNlIGNhbiBiZSB1c2VkIHRvIGNsZWFyIHJlY292ZXJ5IHRva2Vucy5cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhlIHJlY292ZXJ5IHRva2VuIGNhbiBiZSBjbGVhcmVkIG9ubHkgaWYgaXQgZXhpc3RzXG4gICAgICAgIGNvbnN0IGV4aXN0aW5nUmVjb3ZlcnlUb2tlbiA9IGF3YWl0IGN0eC5wcmlzbWEudXNlci5maW5kRmlyc3Qoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgcmVjb3ZlcnlfdG9rZW46IHtcbiAgICAgICAgICAgICAgICAgICAgbm90OiBudWxsLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgcmVjb3ZlcnlfdG9rZW46IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWV4aXN0aW5nUmVjb3ZlcnlUb2tlbj8ucmVjb3ZlcnlfdG9rZW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0cnBjLlRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogXCJCQURfUkVRVUVTVFwiLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiUmVjb3ZlcnkgdG9rZW4gZG9lc24ndCBleGlzdC5cIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2xlYXIgdGhlIHJlY292ZXJ5IHRva2VuXG4gICAgICAgIGF3YWl0IGN0eC5wcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBpZDogY3R4LnVzZXIuaWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHJlY292ZXJ5X3Rva2VuOiBudWxsLFxuICAgICAgICAgICAgICAgIHJlY292ZXJ5X3Rva2VuX2NyZWF0ZWRfYXQ6IG51bGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcblxuZXhwb3J0IGNvbnN0IHVzZXJSb3V0ZXJDb25maWd1cmF0aW9uID0gcHJvdGVjdGVkUHJvY2VkdXJlXG4gICAgLm91dHB1dChcbiAgICAgICAgei5vYmplY3Qoe1xuICAgICAgICAgICAgcm9vdDogei5ib29sZWFuKCksXG4gICAgICAgICAgICBjYW5MaW5rOiB6LmJvb2xlYW4oKSxcbiAgICAgICAgICAgIG1heExpbmtzOiB6Lm51bWJlcigpLFxuICAgICAgICAgICAgY2FuUHJvbW90ZURldmljZXM6IHouYm9vbGVhbigpLFxuICAgICAgICAgICAgYWx3YXlzQ29ubmVjdGVkOiB6LmJvb2xlYW4oKSxcbiAgICAgICAgICAgIGNhbkZlYXR1cmVWb3RlOiB6LmJvb2xlYW4oKSxcbiAgICAgICAgICAgIHJlY292ZXJ5VG9rZW5DcmVhdGVkQXQ6IHouZGF0ZSgpLm51bGxhYmxlKCksXG4gICAgICAgIH0pLFxuICAgIClcbiAgICAucXVlcnkoYXN5bmMgKHsgY3R4IH0pID0+IHtcbiAgICAgICAgYXdhaXQgY2hlY2tSYXRlbGltaXR0ZXIoY3R4LnVzZXJJUCwgXCJVU0VSX0NPTkZJR1VSQVRJT05cIiwgMywgXCIxMHNcIik7XG5cbiAgICAgICAgY29uc3QgcmVjb3ZlcnlEYXRhID0gYXdhaXQgY3R4LnByaXNtYS51c2VyLmZpbmRGaXJzdCh7XG4gICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgIGlkOiBjdHgudXNlci5pZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgICByZWNvdmVyeV90b2tlbl9jcmVhdGVkX2F0OiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJvb3Q6IGN0eC5yb290QVBJS2V5LFxuICAgICAgICAgICAgY2FuTGluazogY3R4LnVzZXIuc3Vic2NyaXB0aW9uQ29uZmlnLmxpbmtpbmdfYWxsb3dlZCxcbiAgICAgICAgICAgIG1heExpbmtzOiBjdHgudXNlci5zdWJzY3JpcHRpb25Db25maWcubWF4X2xpbmtzLFxuICAgICAgICAgICAgY2FuUHJvbW90ZURldmljZXM6IGN0eC51c2VyLnN1YnNjcmlwdGlvbkNvbmZpZy5wcm9tb3RpbmdfdG9fcm9vdCxcbiAgICAgICAgICAgIGFsd2F5c0Nvbm5lY3RlZDogY3R4LnVzZXIuc3Vic2NyaXB0aW9uQ29uZmlnLmFsd2F5c19jb25uZWN0ZWQsXG4gICAgICAgICAgICBjYW5GZWF0dXJlVm90ZTogY3R4LnVzZXIuc3Vic2NyaXB0aW9uQ29uZmlnLmZlYXR1cmVfdm90aW5nLFxuICAgICAgICAgICAgcmVjb3ZlcnlUb2tlbkNyZWF0ZWRBdDpcbiAgICAgICAgICAgICAgICByZWNvdmVyeURhdGE/LnJlY292ZXJ5X3Rva2VuX2NyZWF0ZWRfYXQgPz8gbnVsbCxcbiAgICAgICAgfTtcbiAgICB9KTtcblxuZXhwb3J0IGNvbnN0IHVzZXJSb3V0ZXJEZWxldGUgPSBwcm90ZWN0ZWRQcm9jZWR1cmVcbiAgICAub3V0cHV0KHouYm9vbGVhbigpKVxuICAgIC5tdXRhdGlvbihhc3luYyAoeyBjdHggfSkgPT4ge1xuICAgICAgICBhd2FpdCBjaGVja1JhdGVsaW1pdHRlcihjdHgudXNlcklQLCBcIlVTRVJfREVMRVRFXCIsIDEsIFwiNW1cIik7XG5cbiAgICAgICAgLy8gT25seSB0aGUgcm9vdCBhY2NvdW50IGNhbiBkZWxldGUgdGhlIHVzZXJcbiAgICAgICAgaWYgKCFjdHgucm9vdEFQSUtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IHRycGMuVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgICAgICBjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJPbmx5IHRoZSByb290IGRldmljZSBjYW4gZGVsZXRlIHRoZSB1c2VyLlwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBhd2FpdCBjdHgucHJpc21hLnVzZXIuZGVsZXRlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgaWQ6IGN0eC51c2VyLmlkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChzdWJzY3JpcHRpb24gJiYgc3Vic2NyaXB0aW9uLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgY29uc3QgaWQgPSBzdWJzY3JpcHRpb24uc3Vic2NyaXB0aW9uLmN1c3RvbWVyX2lkO1xuXG4gICAgICAgICAgICAvLyBDYWxsIHRoZSBTdHJpcGUgQVBJIHRvIGRlbGV0ZSB0aGUgY3VzdG9tZXIgb25seSBpZiB0aGUgdXNlciBoYWQgYSBzdWJzY3JpcHRpb25cbiAgICAgICAgICAgIC8vIFRoZSBhY3R1YWwgY3VzdG9tZXJfaWQgaXMgc2V0IHRvIHRoZSB1c2VyJ3MgSUQgd2hlbiB0aGV5IGRvbid0IGhhdmUgYSBzdWJzY3JpcHRpb25cbiAgICAgICAgICAgIC8vIFdoZW4gdGhleSBkbyBoYXZlIGEgc3Vic2NyaXB0aW9uLCB0aGUgY3VzdG9tZXJfaWQgaXMgc2V0IHRvIHRoZSBhY3R1YWwgY3VzdG9tZXIgSUQgKHBheW1lbnQgcHJvY2Vzc29yJ3MpXG4gICAgICAgICAgICBpZiAoaWQgJiYgaWQgIT09IGN0eC51c2VyLmlkKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgc3RyaXBlLmN1c3RvbWVycy5kZWwoaWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKFxuICAgICAgICAgICAgICAgICAgICAgICAgYFtUUlBDIC0gdXNlci5kZWxldGVdIERlbGV0ZWQgY3VzdG9tZXIgZm9yIHVzZXIgSUQ6ICR7Y3R4LnVzZXIuaWR9fWAsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMsXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBJZ25vcmUgZXJyb3IsIHRoZSBjdXN0b21lciBtaWdodCBoYXZlIGJlZW4gZGVsZXRlZCBhbHJlYWR5IG9yIHRoZSBJRCBpcyBpbnZhbGlkXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoXG4gICAgICAgICAgICAgICAgICAgICAgICBgW1RSUEMgLSB1c2VyLmRlbGV0ZV0gRXJyb3IgZGVsZXRpbmcgY3VzdG9tZXIgZm9yIHVzZXIgSUQ6ICR7Y3R4LnVzZXIuaWR9fWAsXG4gICAgICAgICAgICAgICAgICAgICAgICBlLFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuIl0sIm5hbWVzIjpbImJpcDM5Iiwid29yZGxpc3QiLCJ0cnBjIiwiYXJnb24yIiwiU3RyaXBlIiwieiIsInByb3RlY3RlZFByb2NlZHVyZSIsInB1YmxpY1Byb2NlZHVyZSIsInZhbGlkYXRlQ2FwdGNoYSIsIlN0cmlwZUNvbmZpZ3VyYXRpb24iLCJ1cHNlcnRVc2VyU3Vic2NyaXB0aW9uVGllciIsImluc2VydERlZmF1bHRBUElLZXkiLCJjaGVja1JhdGVsaW1pdHRlciIsInN0cmlwZSIsInByb2Nlc3MiLCJlbnYiLCJTVFJJUEVfU0VDUkVUX0tFWSIsInVzZXJSZWNvdmVyeUFyZ29uMkNvbmZpZyIsInR5cGUiLCJhcmdvbjJpZCIsInBhcmFsbGVsaXNtIiwibWVtb3J5Q29zdCIsInRpbWVDb3N0IiwidXNlclJvdXRlclJlZ2lzdGVyIiwiaW5wdXQiLCJvYmplY3QiLCJjYXB0Y2hhVG9rZW4iLCJzdHJpbmciLCJvdXRwdXQiLCJtdXRhdGlvbiIsImN0eCIsInVzZXJJUCIsImFwaUtleUNvbXBvdW5kIiwidXNlciIsInByaXNtYSIsImNyZWF0ZSIsImRhdGEiLCJpZCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsIlRSUENFcnJvciIsImNvZGUiLCJtZXNzYWdlIiwidXNlclJvdXRlclJlY292ZXIiLCJ1c2VySWQiLCJtYXgiLCJyZWNvdmVyeVBocmFzZSIsImV4aXN0aW5nVXNlciIsImZpbmRGaXJzdCIsIndoZXJlIiwic2VsZWN0IiwicmVjb3ZlcnlfdG9rZW4iLCJ3cm9uZ1JlY292ZXJ5UGhyYXNlRXJyIiwidmVyaWZ5IiwiYVBJS2V5IiwiZGVsZXRlTWFueSIsInVzZXJfaWQiLCJ1cGRhdGUiLCJyZWNvdmVyeV90b2tlbl9jcmVhdGVkX2F0IiwidXNlclJvdXRlckdlbmVyYXRlUmVjb3ZlcnlUb2tlbiIsInRva2VuIiwicm9vdEFQSUtleSIsInJlY292ZXJ5VG9rZW5FeGlzdHMiLCJub3QiLCJnZW5lcmF0ZU1uZW1vbmljIiwiaGFzaGVkVG9rZW4iLCJoYXNoIiwiRGF0ZSIsInVzZXJSb3V0ZXJDbGVhclJlY292ZXJ5VG9rZW4iLCJib29sZWFuIiwiZXhpc3RpbmdSZWNvdmVyeVRva2VuIiwidXNlclJvdXRlckNvbmZpZ3VyYXRpb24iLCJyb290IiwiY2FuTGluayIsIm1heExpbmtzIiwibnVtYmVyIiwiY2FuUHJvbW90ZURldmljZXMiLCJhbHdheXNDb25uZWN0ZWQiLCJjYW5GZWF0dXJlVm90ZSIsInJlY292ZXJ5VG9rZW5DcmVhdGVkQXQiLCJkYXRlIiwibnVsbGFibGUiLCJxdWVyeSIsInJlY292ZXJ5RGF0YSIsInN1YnNjcmlwdGlvbkNvbmZpZyIsImxpbmtpbmdfYWxsb3dlZCIsIm1heF9saW5rcyIsInByb21vdGluZ190b19yb290IiwiYWx3YXlzX2Nvbm5lY3RlZCIsImZlYXR1cmVfdm90aW5nIiwidXNlclJvdXRlckRlbGV0ZSIsInN1YnNjcmlwdGlvbiIsImRlbGV0ZSIsImN1c3RvbWVyX2lkIiwicmVzIiwiY3VzdG9tZXJzIiwiZGVsIiwiZGVidWciLCJlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/routes/v1/user.router.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/trpc/trpc.ts":
/*!*********************************!*\
  !*** ./src/server/trpc/trpc.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRouters: () => (/* binding */ mergeRouters),\n/* harmony export */   protectedProcedure: () => (/* binding */ protectedProcedure),\n/* harmony export */   publicProcedure: () => (/* binding */ publicProcedure),\n/* harmony export */   router: () => (/* binding */ router)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! superjson */ \"superjson\");\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! argon2 */ \"argon2\");\n/* harmony import */ var argon2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(argon2__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, superjson__WEBPACK_IMPORTED_MODULE_1__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, superjson__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst t = _trpc_server__WEBPACK_IMPORTED_MODULE_0__.initTRPC.context().create({\n    // Optional:\n    transformer: superjson__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    // Optional:\n    errorFormatter (opts) {\n        const { shape } = opts;\n        return {\n            ...shape,\n            data: {\n                ...shape.data\n            }\n        };\n    }\n});\n/**\n * We recommend only exporting the functionality that we\n * use so we can enforce which base procedures should be used\n **/ const router = t.router;\nconst mergeRouters = t.mergeRouters;\nconst publicProcedure = t.procedure;\nconst middleware = t.middleware;\nconst isAuthenticated = middleware(async ({ ctx, next })=>{\n    // This contains the API key and the API Key ID\n    // The API Key is the first 36 characters, and the API Key ID is the rest\n    const apiKeyCompound = ctx.apiKey;\n    // Check if the apiKey is proper UUIDv4\n    if (!apiKeyCompound || !apiKeyCompound.length || apiKeyCompound.length < 36 || apiKeyCompound.length > 100) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    // Split the API key into the API Key ID and the API Key\n    const apiKey = apiKeyCompound.slice(0, 36);\n    const apiKeyID = apiKeyCompound.slice(36);\n    // Try and find the API Key in the database\n    // NOTE: This might be less efficient than using only one query to fetch the API Key and the user subscription\n    //      However, this is more secure as it doesn't load the DB with potentially malicious queries.\n    //      In case someone got a hold of the API Key ID and tried to brute force the API Key.\n    //      This way, we only check if the API Key ID exists, and only then do we fetch the subscription and subscription configuration.\n    const apiKeyExists = await ctx.prisma.aPIKey.findUnique({\n        where: {\n            id: apiKeyID\n        },\n        select: {\n            key: true,\n            user_id: true,\n            purpose: true,\n            root: true\n        }\n    });\n    if (!apiKeyExists) {\n        console.debug(`[TRPC - context] API Key ID ${apiKeyID} does not exist`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    // Validate the API key using argon2\n    const isSame = await argon2__WEBPACK_IMPORTED_MODULE_2___default().verify(apiKeyExists.key, apiKey);\n    if (!isSame) {\n        console.debug(`[TRPC - context] API Key ID ${apiKeyID} mismatched with API Key ${apiKey}`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    const userId = apiKeyExists.user_id;\n    // Do a DB lookup to check if the API key actually exists\n    const userSubscription = await ctx.prisma.subscription.findUnique({\n        where: {\n            user_id: userId\n        },\n        select: {\n            configuration: true\n        }\n    });\n    // If the user doesn't have a subscription, return an error\n    if (!userSubscription || !userSubscription.configuration) {\n        console.warn(`[TRPC - context] User ${userId} has no subscription or configuration`);\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    return next({\n        ctx: {\n            ...ctx,\n            // Infer that `apiKey` is non-nullable\n            apiKeyID: apiKeyID,\n            apiKey: apiKey,\n            apiKeyHash: apiKeyExists.key,\n            rootAPIKey: apiKeyExists.root,\n            // Infers that `user` is non-nullable\n            user: {\n                id: userId,\n                subscriptionConfig: userSubscription.configuration\n            }\n        }\n    });\n});\nconst protectedProcedure = publicProcedure.use(isAuthenticated);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/server/trpc/trpc.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/utils/captcha.ts":
/*!*************************************!*\
  !*** ./src/server/utils/captcha.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ validateCaptcha)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__]);\n_trpc_server__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * Validate a captcha token\n * @param token Captcha token\n * @returns Captcha response\n * @throws Error if TURNSTILE_SECRET is not defined\n * @throws Error if the call to the captcha API fails\n * @throws TRPCError if the captcha token is invalid\n */ async function validateCaptcha(token) {\n    if (!process.env.TURNSTILE_SECRET) {\n        throw new Error(\"TURNSTILE_SECRET is not defined\");\n    }\n    const res = await fetch(\"https://challenges.cloudflare.com/turnstile/v0/siteverify\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n            secret: process.env.TURNSTILE_SECRET,\n            response: token\n        })\n    }).then((res)=>res.json());\n    if (!res?.success) {\n        throw trpcCaptchaError;\n    }\n}\nconst trpcCaptchaError = new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n    code: \"BAD_REQUEST\",\n    message: \"Failed to validate captcha.\"\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdXRpbHMvY2FwdGNoYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5QztBQXFDekM7Ozs7Ozs7Q0FPQyxHQUNjLGVBQWVDLGdCQUFnQkMsS0FBYTtJQUN2RCxJQUFJLENBQUNDLFFBQVFDLEdBQUcsQ0FBQ0MsZ0JBQWdCLEVBQUU7UUFDL0IsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBRUEsTUFBTUMsTUFBdUIsTUFBTUMsTUFDL0IsNkRBQ0E7UUFDSUMsUUFBUTtRQUNSQyxTQUFTO1lBQ0wsZ0JBQWdCO1FBQ3BCO1FBQ0FDLE1BQU0sSUFBSUMsZ0JBQWdCO1lBQ3RCQyxRQUFRVixRQUFRQyxHQUFHLENBQUNDLGdCQUFnQjtZQUNwQ1MsVUFBVVo7UUFDZDtJQUNKLEdBQ0ZhLElBQUksQ0FBQyxDQUFDUixNQUFRQSxJQUFJUyxJQUFJO0lBRXhCLElBQUksQ0FBQ1QsS0FBS1UsU0FBUztRQUNmLE1BQU1DO0lBQ1Y7QUFDSjtBQUVBLE1BQU1BLG1CQUFtQixJQUFJbEIsbURBQVNBLENBQUM7SUFDbkNtQixNQUFNO0lBQ05DLFNBQVM7QUFDYiIsInNvdXJjZXMiOlsiL2hvbWUvc3lzdGVtL0RvY3VtZW50cy9Qcm9qZWN0cy9jcnlwdGV4LXZhdWx0LXdlYi93ZWIvc3JjL3NlcnZlci91dGlscy9jYXB0Y2hhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRSUENFcnJvciB9IGZyb20gXCJAdHJwYy9zZXJ2ZXJcIjtcblxuLy8gVHlwZSB0aGF0IGdldHMgcmV0dXJuZWQgd2hlbiB0aGUgXCJzdWNjZXNzXCIgcHJvcGVydHkgaXMgdHJ1ZVxuLypcbntcbiAgXCJzdWNjZXNzXCI6IHRydWUsXG4gIFwiY2hhbGxlbmdlX3RzXCI6IFwiMjAyMi0wMi0yOFQxNToxNDozMC4wOTZaXCIsXG4gIFwiaG9zdG5hbWVcIjogXCJleGFtcGxlLmNvbVwiLFxuICBcImVycm9yLWNvZGVzXCI6IFtdLFxuICBcImFjdGlvblwiOiBcImxvZ2luXCIsXG4gIFwiY2RhdGFcIjogXCJzZXNzaW9uaWQtMTIzNDU2Nzg5XCJcbn1cbiovXG5cbi8vIFR5cGUgdGhhdCBnZXRzIHJldHVybmVkIHdoZW4gdGhlIFwic3VjY2Vzc1wiIHByb3BlcnR5IGlzIGZhbHNlXG4vKlxue1xuICBcInN1Y2Nlc3NcIjogZmFsc2UsXG4gIFwiZXJyb3ItY29kZXNcIjogW1xuICAgIFwiaW52YWxpZC1pbnB1dC1yZXNwb25zZVwiXG4gIF1cbn1cbiovXG5cbnR5cGUgQ2FwdGNoYVJlc3BvbnNlID0ge1xuICAgIHN1Y2Nlc3M6IGJvb2xlYW47XG5cbiAgICAvLyBUaGVzZSBwcm9wZXJ0aWVzIGFyZSBvbmx5IHByZXNlbnQgd2hlbiBzdWNjZXNzIGlzIHRydWVcbiAgICBjaGFsbGVuZ2VfdHM/OiBzdHJpbmc7XG4gICAgaG9zdG5hbWU/OiBzdHJpbmc7XG4gICAgYWN0aW9uPzogc3RyaW5nO1xuICAgIGNkYXRhPzogc3RyaW5nO1xuXG4gICAgLy8gVGhlc2UgcHJvcGVydGllcyBhcmUgb25seSBwcmVzZW50IHdoZW4gc3VjY2VzcyBpcyBmYWxzZVxuICAgIFwiZXJyb3ItY29kZXNcIj86IHN0cmluZ1tdO1xufTtcblxuLyoqXG4gKiBWYWxpZGF0ZSBhIGNhcHRjaGEgdG9rZW5cbiAqIEBwYXJhbSB0b2tlbiBDYXB0Y2hhIHRva2VuXG4gKiBAcmV0dXJucyBDYXB0Y2hhIHJlc3BvbnNlXG4gKiBAdGhyb3dzIEVycm9yIGlmIFRVUk5TVElMRV9TRUNSRVQgaXMgbm90IGRlZmluZWRcbiAqIEB0aHJvd3MgRXJyb3IgaWYgdGhlIGNhbGwgdG8gdGhlIGNhcHRjaGEgQVBJIGZhaWxzXG4gKiBAdGhyb3dzIFRSUENFcnJvciBpZiB0aGUgY2FwdGNoYSB0b2tlbiBpcyBpbnZhbGlkXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHZhbGlkYXRlQ2FwdGNoYSh0b2tlbjogc3RyaW5nKSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudi5UVVJOU1RJTEVfU0VDUkVUKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRVUk5TVElMRV9TRUNSRVQgaXMgbm90IGRlZmluZWRcIik7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzOiBDYXB0Y2hhUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgXCJodHRwczovL2NoYWxsZW5nZXMuY2xvdWRmbGFyZS5jb20vdHVybnN0aWxlL3YwL3NpdGV2ZXJpZnlcIixcbiAgICAgICAge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICAgICAgICAgIHNlY3JldDogcHJvY2Vzcy5lbnYuVFVSTlNUSUxFX1NFQ1JFVCxcbiAgICAgICAgICAgICAgICByZXNwb25zZTogdG9rZW4sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICApLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSk7XG5cbiAgICBpZiAoIXJlcz8uc3VjY2Vzcykge1xuICAgICAgICB0aHJvdyB0cnBjQ2FwdGNoYUVycm9yO1xuICAgIH1cbn1cblxuY29uc3QgdHJwY0NhcHRjaGFFcnJvciA9IG5ldyBUUlBDRXJyb3Ioe1xuICAgIGNvZGU6IFwiQkFEX1JFUVVFU1RcIixcbiAgICBtZXNzYWdlOiBcIkZhaWxlZCB0byB2YWxpZGF0ZSBjYXB0Y2hhLlwiLFxufSk7XG4iXSwibmFtZXMiOlsiVFJQQ0Vycm9yIiwidmFsaWRhdGVDYXB0Y2hhIiwidG9rZW4iLCJwcm9jZXNzIiwiZW52IiwiVFVSTlNUSUxFX1NFQ1JFVCIsIkVycm9yIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIlVSTFNlYXJjaFBhcmFtcyIsInNlY3JldCIsInJlc3BvbnNlIiwidGhlbiIsImpzb24iLCJzdWNjZXNzIiwidHJwY0NhcHRjaGFFcnJvciIsImNvZGUiLCJtZXNzYWdlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/server/utils/captcha.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/utils/stripe.ts":
/*!************************************!*\
  !*** ./src/server/utils/stripe.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StripeConfiguration: () => (/* binding */ StripeConfiguration),\n/* harmony export */   createCheckoutSession: () => (/* binding */ createCheckoutSession),\n/* harmony export */   getBillingPortalSession: () => (/* binding */ getBillingPortalSession),\n/* harmony export */   getCheckoutUrl: () => (/* binding */ getCheckoutUrl),\n/* harmony export */   getLatestInvoice: () => (/* binding */ getLatestInvoice),\n/* harmony export */   getSubscription: () => (/* binding */ getSubscription)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"stripe\");\n/* harmony import */ var _env_client_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../env/client.mjs */ \"(api-node)/./src/env/client.mjs\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([stripe__WEBPACK_IMPORTED_MODULE_0__, _env_client_mjs__WEBPACK_IMPORTED_MODULE_1__]);\n([stripe__WEBPACK_IMPORTED_MODULE_0__, _env_client_mjs__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst StripeConfiguration = {\n    // https://github.com/stripe/stripe-node#configuration\n    apiVersion: \"2025-05-28.basil\"\n};\n// This is a backend function, so we can use the secret key\nconst stripeBackend = new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](process.env.STRIPE_SECRET_KEY ?? \"\", StripeConfiguration);\nconst createCheckoutSession = async (userID, priceId)=>{\n    const checkoutSession = await stripeBackend.checkout.sessions.create({\n        mode: \"subscription\",\n        allow_promotion_codes: true,\n        line_items: [\n            {\n                price: priceId,\n                quantity: 1\n            }\n        ],\n        automatic_tax: {\n            enabled: true\n        },\n        subscription_data: {\n            metadata: {\n                user_id: userID\n            }\n        },\n        success_url: `${_env_client_mjs__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_APP_URL}/app?checkout_success=true`,\n        cancel_url: `${_env_client_mjs__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_APP_URL}/app?checkout_success=false`\n    });\n    return checkoutSession.id;\n};\nconst getBillingPortalSession = async (customerId)=>await stripeBackend.billingPortal.sessions.create({\n        customer: customerId,\n        return_url: `${\"http://localhost:3000\" ?? 0}/app`\n    });\nconst getCheckoutUrl = async (checkoutSessionId)=>(await stripeBackend.checkout.sessions.retrieve(checkoutSessionId)).url;\nconst getSubscription = async (id)=>await stripeBackend.subscriptions.retrieve(id);\nconst getLatestInvoice = async (id)=>await stripeBackend.invoices.retrieve(id);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9zZXJ2ZXIvdXRpbHMvc3RyaXBlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBRWU7QUFFcEMsTUFBTUUsc0JBQTZDO0lBQ3RELHNEQUFzRDtJQUN0REMsWUFBWTtBQUNoQixFQUFFO0FBRUYsMkRBQTJEO0FBQzNELE1BQU1DLGdCQUFnQixJQUFJSiw4Q0FBTUEsQ0FDNUJLLFFBQVFKLEdBQUcsQ0FBQ0ssaUJBQWlCLElBQUksSUFDakNKO0FBRUcsTUFBTUssd0JBQXdCLE9BQ2pDQyxRQUNBQztJQUVBLE1BQU1DLGtCQUFrQixNQUFNTixjQUFjTyxRQUFRLENBQUNDLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDO1FBQ2pFQyxNQUFNO1FBQ05DLHVCQUF1QjtRQUN2QkMsWUFBWTtZQUNSO2dCQUNJQyxPQUFPUjtnQkFDUFMsVUFBVTtZQUNkO1NBQ0g7UUFDREMsZUFBZTtZQUNYQyxTQUFTO1FBQ2I7UUFDQUMsbUJBQW1CO1lBQ2ZDLFVBQVU7Z0JBQ05DLFNBQVNmO1lBQ2I7UUFDSjtRQUNBZ0IsYUFBYSxHQUFHdkIsZ0RBQUdBLENBQUN3QixtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQztRQUNuRUMsWUFBWSxHQUFHekIsZ0RBQUdBLENBQUN3QixtQkFBbUIsQ0FBQywyQkFBMkIsQ0FBQztJQUN2RTtJQUVBLE9BQU9mLGdCQUFnQmlCLEVBQUU7QUFDN0IsRUFBRTtBQUVLLE1BQU1DLDBCQUEwQixPQUNuQ0MsYUFFQSxNQUFNekIsY0FBYzBCLGFBQWEsQ0FBQ2xCLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDO1FBQzlDa0IsVUFBVUY7UUFDVkcsWUFBWSxHQUNSM0IsdUJBQStCLElBQUksQ0FBdUIsQ0FDN0QsSUFBSSxDQUFDO0lBQ1YsR0FBRztBQUVBLE1BQU00QixpQkFBaUIsT0FDMUJDLG9CQUVBLENBQUMsTUFBTTlCLGNBQWNPLFFBQVEsQ0FBQ0MsUUFBUSxDQUFDdUIsUUFBUSxDQUFDRCxrQkFBaUIsRUFBR0UsR0FBRyxDQUFDO0FBRXJFLE1BQU1DLGtCQUFrQixPQUFPVixLQUNsQyxNQUFNdkIsY0FBY2tDLGFBQWEsQ0FBQ0gsUUFBUSxDQUFDUixJQUFJO0FBRTVDLE1BQU1ZLG1CQUFtQixPQUFPWixLQUNuQyxNQUFNdkIsY0FBY29DLFFBQVEsQ0FBQ0wsUUFBUSxDQUFDUixJQUFJIiwic291cmNlcyI6WyIvaG9tZS9zeXN0ZW0vRG9jdW1lbnRzL1Byb2plY3RzL2NyeXB0ZXgtdmF1bHQtd2ViL3dlYi9zcmMvc2VydmVyL3V0aWxzL3N0cmlwZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RyaXBlIGZyb20gXCJzdHJpcGVcIjtcbmltcG9ydCB7IFN0cmlwZSBhcyBTdHJpcGVOUyB9IGZyb20gXCJzdHJpcGVcIjtcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuLi8uLi9lbnYvY2xpZW50Lm1qc1wiO1xuXG5leHBvcnQgY29uc3QgU3RyaXBlQ29uZmlndXJhdGlvbjogU3RyaXBlTlMuU3RyaXBlQ29uZmlnID0ge1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zdHJpcGUvc3RyaXBlLW5vZGUjY29uZmlndXJhdGlvblxuICAgIGFwaVZlcnNpb246IFwiMjAyNS0wNS0yOC5iYXNpbFwiLFxufTtcblxuLy8gVGhpcyBpcyBhIGJhY2tlbmQgZnVuY3Rpb24sIHNvIHdlIGNhbiB1c2UgdGhlIHNlY3JldCBrZXlcbmNvbnN0IHN0cmlwZUJhY2tlbmQgPSBuZXcgU3RyaXBlKFxuICAgIHByb2Nlc3MuZW52LlNUUklQRV9TRUNSRVRfS0VZID8/IFwiXCIsXG4gICAgU3RyaXBlQ29uZmlndXJhdGlvbixcbik7XG5leHBvcnQgY29uc3QgY3JlYXRlQ2hlY2tvdXRTZXNzaW9uID0gYXN5bmMgKFxuICAgIHVzZXJJRDogc3RyaW5nLFxuICAgIHByaWNlSWQ6IHN0cmluZyxcbik6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gICAgY29uc3QgY2hlY2tvdXRTZXNzaW9uID0gYXdhaXQgc3RyaXBlQmFja2VuZC5jaGVja291dC5zZXNzaW9ucy5jcmVhdGUoe1xuICAgICAgICBtb2RlOiBcInN1YnNjcmlwdGlvblwiLFxuICAgICAgICBhbGxvd19wcm9tb3Rpb25fY29kZXM6IHRydWUsXG4gICAgICAgIGxpbmVfaXRlbXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcmljZTogcHJpY2VJZCxcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGF1dG9tYXRpY190YXg6IHtcbiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHN1YnNjcmlwdGlvbl9kYXRhOiB7XG4gICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJJRCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHN1Y2Nlc3NfdXJsOiBgJHtlbnYuTkVYVF9QVUJMSUNfQVBQX1VSTH0vYXBwP2NoZWNrb3V0X3N1Y2Nlc3M9dHJ1ZWAsXG4gICAgICAgIGNhbmNlbF91cmw6IGAke2Vudi5ORVhUX1BVQkxJQ19BUFBfVVJMfS9hcHA/Y2hlY2tvdXRfc3VjY2Vzcz1mYWxzZWAsXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY2hlY2tvdXRTZXNzaW9uLmlkO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEJpbGxpbmdQb3J0YWxTZXNzaW9uID0gYXN5bmMgKFxuICAgIGN1c3RvbWVySWQ6IHN0cmluZyxcbik6IFByb21pc2U8U3RyaXBlLlJlc3BvbnNlPFN0cmlwZS5CaWxsaW5nUG9ydGFsLlNlc3Npb24+PiA9PlxuICAgIGF3YWl0IHN0cmlwZUJhY2tlbmQuYmlsbGluZ1BvcnRhbC5zZXNzaW9ucy5jcmVhdGUoe1xuICAgICAgICBjdXN0b21lcjogY3VzdG9tZXJJZCxcbiAgICAgICAgcmV0dXJuX3VybDogYCR7XG4gICAgICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMID8/IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCJcbiAgICAgICAgfS9hcHBgLFxuICAgIH0pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2hlY2tvdXRVcmwgPSBhc3luYyAoXG4gICAgY2hlY2tvdXRTZXNzaW9uSWQ6IHN0cmluZyxcbik6IFByb21pc2U8c3RyaW5nIHwgbnVsbD4gPT5cbiAgICAoYXdhaXQgc3RyaXBlQmFja2VuZC5jaGVja291dC5zZXNzaW9ucy5yZXRyaWV2ZShjaGVja291dFNlc3Npb25JZCkpLnVybDtcblxuZXhwb3J0IGNvbnN0IGdldFN1YnNjcmlwdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKSA9PlxuICAgIGF3YWl0IHN0cmlwZUJhY2tlbmQuc3Vic2NyaXB0aW9ucy5yZXRyaWV2ZShpZCk7XG5cbmV4cG9ydCBjb25zdCBnZXRMYXRlc3RJbnZvaWNlID0gYXN5bmMgKGlkOiBzdHJpbmcpID0+XG4gICAgYXdhaXQgc3RyaXBlQmFja2VuZC5pbnZvaWNlcy5yZXRyaWV2ZShpZCk7XG4iXSwibmFtZXMiOlsiU3RyaXBlIiwiZW52IiwiU3RyaXBlQ29uZmlndXJhdGlvbiIsImFwaVZlcnNpb24iLCJzdHJpcGVCYWNrZW5kIiwicHJvY2VzcyIsIlNUUklQRV9TRUNSRVRfS0VZIiwiY3JlYXRlQ2hlY2tvdXRTZXNzaW9uIiwidXNlcklEIiwicHJpY2VJZCIsImNoZWNrb3V0U2Vzc2lvbiIsImNoZWNrb3V0Iiwic2Vzc2lvbnMiLCJjcmVhdGUiLCJtb2RlIiwiYWxsb3dfcHJvbW90aW9uX2NvZGVzIiwibGluZV9pdGVtcyIsInByaWNlIiwicXVhbnRpdHkiLCJhdXRvbWF0aWNfdGF4IiwiZW5hYmxlZCIsInN1YnNjcmlwdGlvbl9kYXRhIiwibWV0YWRhdGEiLCJ1c2VyX2lkIiwic3VjY2Vzc191cmwiLCJORVhUX1BVQkxJQ19BUFBfVVJMIiwiY2FuY2VsX3VybCIsImlkIiwiZ2V0QmlsbGluZ1BvcnRhbFNlc3Npb24iLCJjdXN0b21lcklkIiwiYmlsbGluZ1BvcnRhbCIsImN1c3RvbWVyIiwicmV0dXJuX3VybCIsImdldENoZWNrb3V0VXJsIiwiY2hlY2tvdXRTZXNzaW9uSWQiLCJyZXRyaWV2ZSIsInVybCIsImdldFN1YnNjcmlwdGlvbiIsInN1YnNjcmlwdGlvbnMiLCJnZXRMYXRlc3RJbnZvaWNlIiwiaW52b2ljZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./src/server/utils/stripe.ts\n");

/***/ }),

/***/ "(api-node)/./src/server/utils/subscription.ts":
/*!******************************************!*\
  !*** ./src/server/utils/subscription.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetPriceID: () => (/* binding */ GetPriceID),\n/* harmony export */   PAYMENT_TIERS: () => (/* binding */ PAYMENT_TIERS),\n/* harmony export */   PAYMENT_TIERS_LABELS: () => (/* binding */ PAYMENT_TIERS_LABELS),\n/* harmony export */   REVERSE_TIER_MAP: () => (/* binding */ REVERSE_TIER_MAP),\n/* harmony export */   initProductConfiguration: () => (/* binding */ initProductConfiguration),\n/* harmony export */   updateSubscription: () => (/* binding */ updateSubscription),\n/* harmony export */   upsertUserSubscriptionTier: () => (/* binding */ upsertUserSubscriptionTier)\n/* harmony export */ });\n/* harmony import */ var _stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stripe */ \"(api-node)/./src/server/utils/stripe.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_stripe__WEBPACK_IMPORTED_MODULE_0__]);\n_stripe__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst PAYMENT_TIERS_LABELS = [\n    \"standard\",\n    \"premiumMonthly\",\n    \"premiumYearly\"\n];\nconst PAYMENT_TIERS = {\n    standard: \"standard\",\n    premiumMonthly: \"premiumMonthly\",\n    premiumYearly: \"premiumYearly\"\n};\nconst PRICE_ID = {\n    premiumMonthly: \"price_1N5bBOJPKozluKWZztJvr0sJ\",\n    premiumYearly: \"price_1N5bCiJPKozluKWZDVGiBdCV\"\n};\nconst REVERSE_TIER_MAP = {\n    [\"standard\"]: \"standard\",\n    [\"prod_MkPVEuZnVOsVT7\"]: \"premium\"\n};\nconst GetPriceID = (key)=>key === \"standard\" ? \"\" : PRICE_ID[key] ?? \"\";\n/**\n * Insert the default standard subscription tier into the database.\n * @param prismaInstance The prisma instance to use. This is used to avoid circular dependencies.\n */ const initProductConfiguration = async (prismaInstance)=>{\n    return await prismaInstance.productConfiguration.upsert({\n        create: {\n            product_id: PAYMENT_TIERS.standard\n        },\n        update: {},\n        where: {\n            product_id: PAYMENT_TIERS.standard\n        }\n    });\n};\n/**\n * If the user doesn't have a subscription in the database, create an entry with the standard tier, otherwise, update the subscription to the standard tier.\n * @param prismaInstance The prisma instance to use. This is used to avoid circular dependencies.\n * @param userId The user to initialize the subscription tier for\n */ const upsertUserSubscriptionTier = async (prismaInstance, userId)=>{\n    await prismaInstance.subscription.upsert({\n        create: {\n            user_id: userId,\n            customer_id: userId,\n            created_at: new Date(),\n            product_id: PAYMENT_TIERS.standard\n        },\n        where: {\n            user_id: userId\n        },\n        update: {\n            // This is used when we're resetting the subscription to standard\n            created_at: new Date(),\n            expires_at: null,\n            status: null,\n            payment_status: null,\n            cancel_at_period_end: null,\n            product_id: PAYMENT_TIERS.standard\n        }\n    });\n};\nconst updateSubscription = async (prismaInstance, res, eventType, customerId, userId, subscriptionId, paymentStatus)=>{\n    if (!userId?.length) {\n        console.error(`[Stripe] [${eventType}] || CustomerID: ${customerId} || Error: Invalid userId`);\n        // Don't send an error, because we don't want to retry the webhook\n        res.status(200).send({\n            received: true\n        });\n        return;\n    }\n    // Get the customers subscription from stripe\n    const subscription = await (0,_stripe__WEBPACK_IMPORTED_MODULE_0__.getSubscription)(subscriptionId);\n    // Validate the Stripe subscription object\n    if (!subscription) {\n        console.error(`[Stripe] [${eventType}] || CustomerID: ${customerId} UserID: ${userId} || Error: Could not find users subscription`);\n        // Don't send an error, because we don't want to retry the webhook\n        res.status(200).send({\n            received: true\n        });\n        return;\n    }\n    // Fetch the latest invoice only if we have the subscription object and the paymentStatus is null\n    const latestInvoice = subscription && !paymentStatus ? await (0,_stripe__WEBPACK_IMPORTED_MODULE_0__.getLatestInvoice)(subscription.latest_invoice) : null;\n    const subscriptionItem = subscription.items.data[0];\n    const createdAt = subscriptionItem ? new Date(subscriptionItem.current_period_start * 1000) : new Date();\n    const expiresAt = subscriptionItem ? new Date(subscriptionItem.current_period_end * 1000) : null;\n    // Here we update the subscription in the database\n    await prismaInstance.subscription.upsert({\n        create: {\n            user_id: userId,\n            customer_id: customerId,\n            created_at: createdAt,\n            expires_at: expiresAt,\n            status: subscription.status.toString(),\n            payment_status: paymentStatus ?? latestInvoice?.status ?? null,\n            cancel_at_period_end: subscription.cancel_at_period_end,\n            product_id: subscription.items.data[0]?.plan.product?.toString()\n        },\n        update: {\n            customer_id: customerId,\n            created_at: createdAt,\n            expires_at: expiresAt,\n            status: subscription.status.toString(),\n            payment_status: paymentStatus ?? latestInvoice?.status ?? null,\n            cancel_at_period_end: subscription.cancel_at_period_end,\n            product_id: subscription.items.data[0]?.plan.product?.toString()\n        },\n        where: {\n            user_id: userId\n        }\n    });\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/server/utils/subscription.ts\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "@scure/bip39":
/*!*******************************!*\
  !*** external "@scure/bip39" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("@scure/bip39");;

/***/ }),

/***/ "@scure/bip39/wordlists/english":
/*!*************************************************!*\
  !*** external "@scure/bip39/wordlists/english" ***!
  \*************************************************/
/***/ ((module) => {

module.exports = import("@scure/bip39/wordlists/english");;

/***/ }),

/***/ "@trpc/server":
/*!*******************************!*\
  !*** external "@trpc/server" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("@trpc/server");;

/***/ }),

/***/ "@trpc/server/adapters/next":
/*!*********************************************!*\
  !*** external "@trpc/server/adapters/next" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = import("@trpc/server/adapters/next");;

/***/ }),

/***/ "@upstash/ratelimit":
/*!*************************************!*\
  !*** external "@upstash/ratelimit" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@upstash/ratelimit");

/***/ }),

/***/ "@upstash/redis":
/*!*********************************!*\
  !*** external "@upstash/redis" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("@upstash/redis");;

/***/ }),

/***/ "argon2":
/*!*************************!*\
  !*** external "argon2" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("argon2");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pusher":
/*!*************************!*\
  !*** external "pusher" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("pusher");

/***/ }),

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("stripe");;

/***/ }),

/***/ "superjson":
/*!****************************!*\
  !*** external "superjson" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("superjson");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0"], () => (__webpack_exec__("(api-node)/../node_modules/.pnpm/next@15.3.1_@babel+core@7.28.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();